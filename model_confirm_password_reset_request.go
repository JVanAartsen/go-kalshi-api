/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// ConfirmPasswordResetRequest struct for ConfirmPasswordResetRequest
type ConfirmPasswordResetRequest struct {
	// The new password.
	Password string `json:"password"`
	// UserUUID for your user. You can get this from the password reset link query parameter.
	UserId string `json:"user_id"`
}

// NewConfirmPasswordResetRequest instantiates a new ConfirmPasswordResetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfirmPasswordResetRequest(password string, userId string) *ConfirmPasswordResetRequest {
	this := ConfirmPasswordResetRequest{}
	this.Password = password
	this.UserId = userId
	return &this
}

// NewConfirmPasswordResetRequestWithDefaults instantiates a new ConfirmPasswordResetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfirmPasswordResetRequestWithDefaults() *ConfirmPasswordResetRequest {
	this := ConfirmPasswordResetRequest{}
	return &this
}

// GetPassword returns the Password field value
func (o *ConfirmPasswordResetRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ConfirmPasswordResetRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ConfirmPasswordResetRequest) SetPassword(v string) {
	o.Password = v
}

// GetUserId returns the UserId field value
func (o *ConfirmPasswordResetRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *ConfirmPasswordResetRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *ConfirmPasswordResetRequest) SetUserId(v string) {
	o.UserId = v
}

func (o ConfirmPasswordResetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableConfirmPasswordResetRequest struct {
	value *ConfirmPasswordResetRequest
	isSet bool
}

func (v NullableConfirmPasswordResetRequest) Get() *ConfirmPasswordResetRequest {
	return v.value
}

func (v *NullableConfirmPasswordResetRequest) Set(val *ConfirmPasswordResetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConfirmPasswordResetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConfirmPasswordResetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfirmPasswordResetRequest(val *ConfirmPasswordResetRequest) *NullableConfirmPasswordResetRequest {
	return &NullableConfirmPasswordResetRequest{value: val, isSet: true}
}

func (v NullableConfirmPasswordResetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfirmPasswordResetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


