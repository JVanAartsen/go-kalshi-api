/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// UserGetFavoritedSeriesResponse struct for UserGetFavoritedSeriesResponse
type UserGetFavoritedSeriesResponse struct {
	FavoritedSeries FavoritedSeries `json:"favorited_series"`
}

// NewUserGetFavoritedSeriesResponse instantiates a new UserGetFavoritedSeriesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserGetFavoritedSeriesResponse(favoritedSeries FavoritedSeries) *UserGetFavoritedSeriesResponse {
	this := UserGetFavoritedSeriesResponse{}
	this.FavoritedSeries = favoritedSeries
	return &this
}

// NewUserGetFavoritedSeriesResponseWithDefaults instantiates a new UserGetFavoritedSeriesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserGetFavoritedSeriesResponseWithDefaults() *UserGetFavoritedSeriesResponse {
	this := UserGetFavoritedSeriesResponse{}
	return &this
}

// GetFavoritedSeries returns the FavoritedSeries field value
func (o *UserGetFavoritedSeriesResponse) GetFavoritedSeries() FavoritedSeries {
	if o == nil {
		var ret FavoritedSeries
		return ret
	}

	return o.FavoritedSeries
}

// GetFavoritedSeriesOk returns a tuple with the FavoritedSeries field value
// and a boolean to check if the value has been set.
func (o *UserGetFavoritedSeriesResponse) GetFavoritedSeriesOk() (*FavoritedSeries, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FavoritedSeries, true
}

// SetFavoritedSeries sets field value
func (o *UserGetFavoritedSeriesResponse) SetFavoritedSeries(v FavoritedSeries) {
	o.FavoritedSeries = v
}

func (o UserGetFavoritedSeriesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["favorited_series"] = o.FavoritedSeries
	}
	return json.Marshal(toSerialize)
}

type NullableUserGetFavoritedSeriesResponse struct {
	value *UserGetFavoritedSeriesResponse
	isSet bool
}

func (v NullableUserGetFavoritedSeriesResponse) Get() *UserGetFavoritedSeriesResponse {
	return v.value
}

func (v *NullableUserGetFavoritedSeriesResponse) Set(val *UserGetFavoritedSeriesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserGetFavoritedSeriesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserGetFavoritedSeriesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserGetFavoritedSeriesResponse(val *UserGetFavoritedSeriesResponse) *NullableUserGetFavoritedSeriesResponse {
	return &NullableUserGetFavoritedSeriesResponse{value: val, isSet: true}
}

func (v NullableUserGetFavoritedSeriesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserGetFavoritedSeriesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


