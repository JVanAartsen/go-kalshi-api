/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
	"time"
)

// MarketActivity struct for MarketActivity
type MarketActivity struct {
	CloseDate *time.Time `json:"close_date,omitempty"`
	MarketId *string `json:"market_id,omitempty"`
	OpenDate *time.Time `json:"open_date,omitempty"`
	PriceChange *int64 `json:"price_change,omitempty"`
	Ticker *string `json:"ticker,omitempty"`
	VolumeIncrease *int32 `json:"volume_increase,omitempty"`
}

// NewMarketActivity instantiates a new MarketActivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketActivity() *MarketActivity {
	this := MarketActivity{}
	return &this
}

// NewMarketActivityWithDefaults instantiates a new MarketActivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketActivityWithDefaults() *MarketActivity {
	this := MarketActivity{}
	return &this
}

// GetCloseDate returns the CloseDate field value if set, zero value otherwise.
func (o *MarketActivity) GetCloseDate() time.Time {
	if o == nil || o.CloseDate == nil {
		var ret time.Time
		return ret
	}
	return *o.CloseDate
}

// GetCloseDateOk returns a tuple with the CloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketActivity) GetCloseDateOk() (*time.Time, bool) {
	if o == nil || o.CloseDate == nil {
		return nil, false
	}
	return o.CloseDate, true
}

// HasCloseDate returns a boolean if a field has been set.
func (o *MarketActivity) HasCloseDate() bool {
	if o != nil && o.CloseDate != nil {
		return true
	}

	return false
}

// SetCloseDate gets a reference to the given time.Time and assigns it to the CloseDate field.
func (o *MarketActivity) SetCloseDate(v time.Time) {
	o.CloseDate = &v
}

// GetMarketId returns the MarketId field value if set, zero value otherwise.
func (o *MarketActivity) GetMarketId() string {
	if o == nil || o.MarketId == nil {
		var ret string
		return ret
	}
	return *o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketActivity) GetMarketIdOk() (*string, bool) {
	if o == nil || o.MarketId == nil {
		return nil, false
	}
	return o.MarketId, true
}

// HasMarketId returns a boolean if a field has been set.
func (o *MarketActivity) HasMarketId() bool {
	if o != nil && o.MarketId != nil {
		return true
	}

	return false
}

// SetMarketId gets a reference to the given string and assigns it to the MarketId field.
func (o *MarketActivity) SetMarketId(v string) {
	o.MarketId = &v
}

// GetOpenDate returns the OpenDate field value if set, zero value otherwise.
func (o *MarketActivity) GetOpenDate() time.Time {
	if o == nil || o.OpenDate == nil {
		var ret time.Time
		return ret
	}
	return *o.OpenDate
}

// GetOpenDateOk returns a tuple with the OpenDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketActivity) GetOpenDateOk() (*time.Time, bool) {
	if o == nil || o.OpenDate == nil {
		return nil, false
	}
	return o.OpenDate, true
}

// HasOpenDate returns a boolean if a field has been set.
func (o *MarketActivity) HasOpenDate() bool {
	if o != nil && o.OpenDate != nil {
		return true
	}

	return false
}

// SetOpenDate gets a reference to the given time.Time and assigns it to the OpenDate field.
func (o *MarketActivity) SetOpenDate(v time.Time) {
	o.OpenDate = &v
}

// GetPriceChange returns the PriceChange field value if set, zero value otherwise.
func (o *MarketActivity) GetPriceChange() int64 {
	if o == nil || o.PriceChange == nil {
		var ret int64
		return ret
	}
	return *o.PriceChange
}

// GetPriceChangeOk returns a tuple with the PriceChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketActivity) GetPriceChangeOk() (*int64, bool) {
	if o == nil || o.PriceChange == nil {
		return nil, false
	}
	return o.PriceChange, true
}

// HasPriceChange returns a boolean if a field has been set.
func (o *MarketActivity) HasPriceChange() bool {
	if o != nil && o.PriceChange != nil {
		return true
	}

	return false
}

// SetPriceChange gets a reference to the given int64 and assigns it to the PriceChange field.
func (o *MarketActivity) SetPriceChange(v int64) {
	o.PriceChange = &v
}

// GetTicker returns the Ticker field value if set, zero value otherwise.
func (o *MarketActivity) GetTicker() string {
	if o == nil || o.Ticker == nil {
		var ret string
		return ret
	}
	return *o.Ticker
}

// GetTickerOk returns a tuple with the Ticker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketActivity) GetTickerOk() (*string, bool) {
	if o == nil || o.Ticker == nil {
		return nil, false
	}
	return o.Ticker, true
}

// HasTicker returns a boolean if a field has been set.
func (o *MarketActivity) HasTicker() bool {
	if o != nil && o.Ticker != nil {
		return true
	}

	return false
}

// SetTicker gets a reference to the given string and assigns it to the Ticker field.
func (o *MarketActivity) SetTicker(v string) {
	o.Ticker = &v
}

// GetVolumeIncrease returns the VolumeIncrease field value if set, zero value otherwise.
func (o *MarketActivity) GetVolumeIncrease() int32 {
	if o == nil || o.VolumeIncrease == nil {
		var ret int32
		return ret
	}
	return *o.VolumeIncrease
}

// GetVolumeIncreaseOk returns a tuple with the VolumeIncrease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketActivity) GetVolumeIncreaseOk() (*int32, bool) {
	if o == nil || o.VolumeIncrease == nil {
		return nil, false
	}
	return o.VolumeIncrease, true
}

// HasVolumeIncrease returns a boolean if a field has been set.
func (o *MarketActivity) HasVolumeIncrease() bool {
	if o != nil && o.VolumeIncrease != nil {
		return true
	}

	return false
}

// SetVolumeIncrease gets a reference to the given int32 and assigns it to the VolumeIncrease field.
func (o *MarketActivity) SetVolumeIncrease(v int32) {
	o.VolumeIncrease = &v
}

func (o MarketActivity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloseDate != nil {
		toSerialize["close_date"] = o.CloseDate
	}
	if o.MarketId != nil {
		toSerialize["market_id"] = o.MarketId
	}
	if o.OpenDate != nil {
		toSerialize["open_date"] = o.OpenDate
	}
	if o.PriceChange != nil {
		toSerialize["price_change"] = o.PriceChange
	}
	if o.Ticker != nil {
		toSerialize["ticker"] = o.Ticker
	}
	if o.VolumeIncrease != nil {
		toSerialize["volume_increase"] = o.VolumeIncrease
	}
	return json.Marshal(toSerialize)
}

type NullableMarketActivity struct {
	value *MarketActivity
	isSet bool
}

func (v NullableMarketActivity) Get() *MarketActivity {
	return v.value
}

func (v *NullableMarketActivity) Set(val *MarketActivity) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketActivity(val *MarketActivity) *NullableMarketActivity {
	return &NullableMarketActivity{value: val, isSet: true}
}

func (v NullableMarketActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


