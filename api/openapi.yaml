openapi: 3.0.0
info:
  description: This documentation describes Kalshi's REST API
  title: Kalshi API.
  version: 1.0.0
servers:
- url: https://trading-api.kalshi.com/v1
paths:
  /active_markets:
    get:
      description: "End-point for getting highly active markets on the exchange.\n\
        Currently, gets 3 kinds of activity: Markets opening within the time window\
        \ provided, markets closing within the time\nwindow provided, and markets\
        \ that have had large price movements or large volumes within the time window\
        \ provided."
      operationId: GetActiveMarkets
      parameters:
      - description: "The maximum number of markets returned, this is capped at 20"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: Limit
      - description: The lower bound on the date searched through when looking for
          activity
        explode: true
        in: query
        name: min_date
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: MinDate
      - description: The upper bound on the date searched through when looking for
          activity
        explode: true
        in: query
        name: max_date
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: MaxDate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActiveMarketsResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetActiveMarkets
      tags:
      - market
  /cached/exchange/status:
    get:
      description: The result is cached and updated every 10 seconds.
      operationId: GetExchangeStatusCached
      responses:
        "200":
          description: ""
          headers:
            exchange_active:
              explode: false
              schema:
                type: boolean
              style: simple
            immediate_funding_active:
              explode: false
              schema:
                type: boolean
              style: simple
            trading_active:
              explode: false
              schema:
                type: boolean
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: End-point for getting the exchange status.
      tags:
      - exchange
  /cached/markets:
    get:
      description: End-point for listing / discovering markets on Kalshi with data
        that is cached and so slightly lagged.
      operationId: GetMarketsCached
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketsResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetMarketsCached
      tags:
      - market
  /cached/markets/{market_id}:
    get:
      description: |-
        End-point for getting data about a specific market with data that is cached and so slightly lagged.

        The value for the market_id path parameter should match the id value of the target market.
      operationId: GetMarketCached
      parameters:
      - description: Should be filled with the id of the target market
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetMarketCached
      tags:
      - market
  /cached/markets/{market_id}/candlestick:
    get:
      description: "End-point for getting open, high, low, close (OHLC) and other\
        \ data for candlestick plots. See the response body\nfor full information\
        \ on what is returned. Data is cached and so is slightly lagged."
      operationId: GetCandlestickMarketHistoryCached
      parameters:
      - description: Should be filled with the id of the target market
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      - description: "If provided, restricts history to trades starting from lastSeenTs"
        explode: true
        in: query
        name: last_seen_ts
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: LastSeenTs
      - description: "If provided, this field represents the number of buckets used\
          \ to divide the market\nhistory data. Please provide an integer between\
          \ 1 and 7,200 (inclusive).\nDefaults to 1,400. We aggregate data in the\
          \ buckets."
        explode: true
        in: query
        name: num_buckets
        required: false
        schema:
          format: uint32
          type: integer
        style: form
        x-go-name: NumBuckets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCandlestickMarketHistoryResponse'
          description: GetCandlestickMarketHistoryResponse
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetCandlestickMarketHistoryCached
      tags:
      - market
  /cached/markets/{market_id}/order_book:
    get:
      description: |-
        End-point for getting the orderbook for a market with data that is cached and so slightly lagged.

        The value for the market_id path parameter should match the id value of the target market.
      operationId: GetMarketOrderBookCached
      parameters:
      - description: Should be filled with the id of the target market
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketOrderBookResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetMarketOrderBookCached
      tags:
      - market
  /cached/markets/{market_id}/stats_history:
    get:
      description: "End-point for getting the statistics history for a market with\
        \ data that is cached and so slightly lagged.\n\nThe value for the market_id\
        \ path parameter should match the id value of the target market.\nThe last_seen_ts\
        \ parameter is optional, and will restrict statistics to those after provided\
        \ timestamp.\nThe last_seen_ts is inclusive, which means a market history\
        \ point at last_seen_ts will be returned"
      operationId: GetMarketHistoryCached
      parameters:
      - description: Should be filled with the id of the target market
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      - description: "If provided, restricts history to trades starting from lastSeenTs"
        explode: true
        in: query
        name: last_seen_ts
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: LastSeenTs
      - description: "If provided, this field represents the number of buckets used\
          \ to group the market price\nhistory data. Please provide an integer between\
          \ 1 and 7,200 (inclusive). The higher this value, the\nmore points will\
          \ be returned from this endpoint. Note that the number of points returned\
          \ may not be equal\nto the number of buckets because some buckets may not\
          \ contain any points. Defaults to 1,400. We pick\none representative point\
          \ from each bucket (namely the last point in the bucket)"
        explode: true
        in: query
        name: num_buckets
        required: false
        schema:
          format: uint32
          type: integer
        style: form
        x-go-name: NumBuckets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketHistoryResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetMarketHistoryCached
      tags:
      - market
  /cached/markets_by_ticker/{ticker_name}:
    get:
      description: |-
        End-point for getting data about a specific market with data that is cached and so slightly lagged.

        The value for the ticker_name path parameter should match the ticker_name value of the target market.
      operationId: GetMarketByTickerCached
      parameters:
      - description: Should be filled with the ticker name of the target market
        explode: false
        in: path
        name: ticker_name
        required: true
        schema:
          type: string
        style: simple
        x-go-name: TickerName
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetMarketByTickerCached
      tags:
      - market
  /cached/series:
    get:
      description: End-point for getting data about all series. Endpoint is cached
        so it is slightly lagged.
      operationId: GetSeriesListCached
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSeriesListResponse'
          description: GetSeriesListResponse
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetSeriesListCached
  /events/:
    get:
      description: End-point for getting data about all events with data that is cached
        and so slightly lagged.
      operationId: GetEventsCached
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventsResponse'
          description: GetEventsResponse
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetEventsCached
  /events/{ticker}:
    get:
      description: End-point for getting data about an event by its ticker with data
        that is cached and so slightly lagged.
      operationId: GetEventByTickerCached
      parameters:
      - description: Should be the ticker of the event
        explode: false
        in: path
        name: ticker
        required: true
        schema:
          type: string
        style: simple
        x-go-name: Ticker
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventByTickerResponse'
          description: GetEventByTickerResponse
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetEventByTickerCached
      tags:
      - events
  /exchange/status:
    get:
      description: End-point for getting the exchange status
      operationId: GetExchangeStatus
      responses:
        "200":
          description: ""
          headers:
            exchange_active:
              explode: false
              schema:
                type: boolean
              style: simple
            immediate_funding_active:
              explode: false
              schema:
                type: boolean
              style: simple
            trading_active:
              explode: false
              schema:
                type: boolean
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      tags:
      - exchange
  /log_in:
    post:
      description: End-point to start a rest session with Kalshi.
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        description: Login input data
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: ""
          headers:
            Set-Cookie:
              description: Access token is set on a cookie named 'sessions' as well
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: Login
      tags:
      - auth
  /log_out:
    post:
      description: End-point to terminates your session with Kalshi.
      operationId: Logout
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: Logout
      tags:
      - auth
  /markets:
    get:
      description: End-point for listing / discovering markets on Kalshi.
      operationId: GetMarkets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketsResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetMarkets
      tags:
      - market
  /markets/{market_id}:
    get:
      description: |-
        End-point for getting data about a specific market.

        The value for the market_id path parameter should match the id value of the target market.
      operationId: GetMarket
      parameters:
      - description: Should be filled with the id of the target market
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetMarket
      tags:
      - market
  /markets/{market_id}/candlestick:
    get:
      description: "End-point for getting open, high, low, close (OHLC) and other\
        \ data for candlestick plots. See the response body\nfor full information\
        \ on what is returned."
      operationId: GetCandlestickMarketHistory
      parameters:
      - description: Should be filled with the id of the target market
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      - description: "If provided, restricts history to trades starting from lastSeenTs"
        explode: true
        in: query
        name: last_seen_ts
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: LastSeenTs
      - description: "If provided, this field represents the number of buckets used\
          \ to divide the market\nhistory data. Please provide an integer between\
          \ 1 and 7,200 (inclusive).\nDefaults to 1,400. We aggregate data in the\
          \ buckets."
        explode: true
        in: query
        name: num_buckets
        required: false
        schema:
          format: uint32
          type: integer
        style: form
        x-go-name: NumBuckets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCandlestickMarketHistoryResponse'
          description: GetCandlestickMarketHistoryResponse
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetCandlestickMarketHistory
      tags:
      - market
  /markets/{market_id}/order_book:
    get:
      description: |-
        End-point for getting the orderbook for a market.

        The value for the market_id path parameter should match the id value of the target market.
      operationId: GetMarketOrderBook
      parameters:
      - description: Should be filled with the id of the target market
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketOrderBookResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetMarketOrderBook
      tags:
      - market
  /markets/{market_id}/stats_history:
    get:
      description: "End-point for getting the statistics history for a market.\n\n\
        The value for the market_id path parameter should match the id value of the\
        \ target market.\nThe last_seen_ts parameter is optional, and will restrict\
        \ statistics to those after provided timestamp.\nThe last_seen_ts is inclusive,\
        \ which means a market history point at last_seen_ts will be returned"
      operationId: GetMarketHistory
      parameters:
      - description: Should be filled with the id of the target market
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      - description: "If provided, restricts history to trades starting from lastSeenTs"
        explode: true
        in: query
        name: last_seen_ts
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: LastSeenTs
      - description: "If provided, this field represents the number of buckets used\
          \ to group the market price\nhistory data. Please provide an integer between\
          \ 1 and 7,200 (inclusive). The higher this value, the\nmore points will\
          \ be returned from this endpoint. Note that the number of points returned\
          \ may not be equal\nto the number of buckets because some buckets may not\
          \ contain any points. Defaults to 1,400. We pick\none representative point\
          \ from each bucket (namely the last point in the bucket)"
        explode: true
        in: query
        name: num_buckets
        required: false
        schema:
          format: uint32
          type: integer
        style: form
        x-go-name: NumBuckets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketHistoryResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetMarketHistory
      tags:
      - market
  /markets_by_ticker/{ticker_name}:
    get:
      description: |-
        End-point for getting data about a specific market based on its ticker.

        The value for the ticker_name path parameter should match the ticker_name value of the target market.
      operationId: GetMarketByTicker
      parameters:
      - description: Should be filled with the ticker name of the target market
        explode: false
        in: path
        name: ticker_name
        required: true
        schema:
          type: string
        style: simple
        x-go-name: TickerName
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetMarketByTicker
      tags:
      - market
  /passwords/reset:
    post:
      description: |-
        End-point to request a password reset email link.

        To be used in case you forget your password.
      operationId: ResetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        description: Reset password input data
      responses:
        "202":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: ResetPassword
      tags:
      - auth
  /passwords/reset/{code}/confirm:
    put:
      description: |-
        End-point to finish the password reset flow.

        The code param on the path should be filled with the verification code sent by email.
      operationId: ResetPasswordConfirm
      parameters:
      - description: Should be filled with the verification code received on the sign-up
          email.
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
        x-go-name: Code
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPasswordResetRequest'
        description: Data required to finish a password reset.
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: ResetPasswordConfirm
      tags:
      - auth
  /ranged_markets/{ranged_market_id}:
    get:
      description: End-point for getting data about a ranged market
      operationId: GetRangedMarket
      parameters:
      - description: Should be filled in with a ranged market id
        explode: false
        in: path
        name: ranged_market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: RangedMarketId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRangedMarketResponse'
          description: GetRangedMarketResponse
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetRangedMarket
      tags:
      - ranged_market
  /ranged_markets_by_ticker/{ticker}:
    get:
      description: End-point for getting data about a ranged market by its ticker
      operationId: GetRangedMarketByTicker
      parameters:
      - description: Should be the ticker of the ranged market
        explode: false
        in: path
        name: ticker
        required: true
        schema:
          type: string
        style: simple
        x-go-name: Ticker
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRangedMarketByTickerResponse'
          description: GetRangedMarketByTickerResponse
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetRangedMarketByTicker
      tags:
      - ranged_markets
  /series/:
    get:
      description: End-point for getting data about all series
      operationId: GetSeriesList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSeriesListResponse'
          description: GetSeriesListResponse
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetSeriesList
  /series/{series_ticker}:
    get:
      description: End-point for getting data about an event by its ticker
      operationId: GetSeriesByTicker
      parameters:
      - description: Should be the ticker of the series
        explode: false
        in: path
        name: series_ticker
        required: true
        schema:
          type: string
        style: simple
        x-go-name: Ticker
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSeriesByTickerResponse'
          description: GetSeriesByTickerResponse
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetSeriesByTicker
      tags:
      - series
  /trades:
    get:
      description: End-point for getting all trades for all markets.
      operationId: GetTrades
      parameters:
      - description: "Restricts the response to trades during a certain day (give\
          \ trades_date in ET with format: YYYY-MM-DD). Dates returned will be UTC"
        explode: true
        in: query
        name: trades_date
        required: false
        schema:
          type: string
        style: form
        x-go-name: TradesDate
      - description: Parameter to specify the number of results per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: PageSize
      - description: Parameter to specify which page of the results should be retrieved
        explode: true
        in: query
        name: page_number
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: PageNumber
      - description: Parameter to specify a specific marketId to get trades from
        explode: true
        in: query
        name: market_id
        required: false
        schema:
          type: string
        style: form
        x-go-name: MarketId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradesGetResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: GetTrades
  /users:
    delete:
      description: End-point for deactivating an user. A call to this end-point deactivates
        the current user and ends the current session.
      operationId: UserDeactivate
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: UserDeactivate
      tags:
      - user
  /users/{user_id}:
    get:
      description: |-
        End-point for retrieving the logged in user's profile.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetProfile
      parameters:
      - description: Should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetProfileResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetProfile
      tags:
      - user
  /users/{user_id}/account/history:
    get:
      description: "End-point for getting the logged in user's important past actions\
        \ and events related to the user's positions.\n\nThis contains entries for\
        \ user's explicit actions but also for market events.\n\nThere will be entries\
        \ for:\n\nsubmitting, editing / canceling orders\nrequesting deposits and\
        \ withdrawals\ntrade execution (order matching)\nmarket settlements on markets\
        \ where you have a position\n\nThe value for the user_id path parameter should\
        \ match the user_id value returned on the response for the\nlast login request\
        \ (POST /log_in)."
      operationId: UserGetAccountHistory
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: If true the response should include deposit entries
        explode: true
        in: query
        name: Deposits
        required: false
        schema:
          type: boolean
        style: form
      - description: If true the response should include withdrawal entries
        explode: true
        in: query
        name: Withdrawals
        required: false
        schema:
          type: boolean
        style: form
      - description: If true the response should include order entries
        explode: true
        in: query
        name: Orders
        required: false
        schema:
          type: boolean
        style: form
      - description: If true the response should include settlement entries
        explode: true
        in: query
        name: Settlements
        required: false
        schema:
          type: boolean
        style: form
      - description: If true the response should include trade entries
        explode: true
        in: query
        name: Trades
        required: false
        schema:
          type: boolean
        style: form
      - description: If true the response should include credit entries
        explode: true
        in: query
        name: Credits
        required: false
        schema:
          type: boolean
        style: form
      - description: "Restricts the response to a return the first \"limit\" amount\
          \ of acct history items. Note if you specify a limit, you cannot specify\
          \ a PageSize or PageNumber"
        explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Parameter to specify the number of results per page.
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: PageSize
      - description: Parameter to specify which page of the results should be retrieved
        explode: true
        in: query
        name: page_number
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: PageNumber
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetAccountHistoryResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetAccountHistory
      tags:
      - account
  /users/{user_id}/account/pnl:
    get:
      description: "This end point returns profits, losses, and market transactions\
        \ between two dates"
      operationId: UserGetProfitsAndLosses
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: "Start time of pnl period, represented as the number of seconds\
          \ since Unix epoch"
        explode: true
        in: query
        name: StartTs
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "End time of pnl period, represented as the number of seconds\
          \ since Unix epoch"
        explode: true
        in: query
        name: EndTs
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetProfitsAndLossesResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetProfitsAndLosses
      tags:
      - account
  /users/{user_id}/balance:
    get:
      description: |-
        End-point for getting the balance of the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetBalance
      parameters:
      - description: Should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetBalanceResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetBalance
      tags:
      - user
  /users/{user_id}/batch_orders:
    delete:
      description: "End-point for cancelling multiple orders at once.\n\nEach order\
        \ in the batch is counted against the total rate limit for order operations.\n\
        Consequently, the size of the batch is capped by the current per-second rate-limit\n\
        configuration applicable to the user.\n\nAt the moment of writing, the limit\
        \ is 30 orders per batch.\nAvailable to members with advanced access only.\n\
        \nThe value for the user_id path parameter should match the user_id value\
        \ returned on the response for the last login request (POST /log_in)."
      operationId: UserBatchOrdersCancel
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBatchOrdersCancelRequest'
        description: Orders cancel input data
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBatchOrdersCancelResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserBatchOrdersCancel
      tags:
      - user
    post:
      description: "Endpoint for submitting a batch of orders.\n\nEach order in the\
        \ batch is counted against the total rate limit for order operations.\nConsequently,\
        \ the size of the batch is capped by the current per-second rate-limit\nconfiguration\
        \ applicable to the user.\n\nAt the moment of writing, the limit is 30 orders\
        \ per batch.\nAvailable to members with advanced access only.\n\nThe value\
        \ for the user_id path parameter should match the user_id value returned on\
        \ the response for the last login request (POST /log_in)."
      operationId: UserBatchOrdersCreate
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBatchOrdersCreateRequest'
        description: Order create input data
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBatchOrdersCreateResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserBatchOrdersCreate
      tags:
      - user
  /users/{user_id}/favorited_series:
    get:
      description: |-
        End-point for getting the favorited series for the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetFavoritedSeries
      parameters:
      - description: user_id should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetFavoritedSeriesResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetFavoritedSeries
      tags:
      - user
  /users/{user_id}/favorited_series/{series_ticker}:
    delete:
      description: |-
        End-point for removing a series from the logged in user's favorites.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the series_ticker path parameter should match the ticker value of the series to be removed.
      operationId: UserRemoveFavoritedSeries
      parameters:
      - description: user_id should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: series_ticker should be filled with the ticker of the series
          to be removed from the list
        explode: false
        in: path
        name: series_ticker
        required: true
        schema:
          type: string
        style: simple
        x-go-name: SeriesTicker
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserRemoveFavoritedSeries
      tags:
      - user
    put:
      description: |-
        End-point for adding a series to the logged in user's favorites.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the series_ticker path parameter should match the ticker value of the series to be added.
      operationId: UserAddFavoritedSeries
      parameters:
      - description: user_id should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: series_ticker should be filled with the ticker of the series
          to be added to the list
        explode: false
        in: path
        name: series_ticker
        required: true
        schema:
          type: string
        style: simple
        x-go-name: SeriesTicker
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserAddFavoritedSeries
      tags:
      - user
  /users/{user_id}/immediate_funding:
    get:
      description: End-point for getting immediate funding info for a member.
      operationId: GetUserImmediateFunding
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: "Pass this parameter if you'd like to see how much of a deposit\
          \ will be funded by\nimmediate funding. If you don't need this information,\
          \ pass 0 cents."
        explode: true
        in: query
        name: DepositAmountCents
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserImmediateFundingResponse'
          description: GetUserImmediateFundingResponse
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: GetUserImmediateFunding
      tags:
      - users
  /users/{user_id}/notifications:
    get:
      description: |-
        End-point for getting notifications for the current logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetNotifications
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: Number of results per page
        explode: true
        in: query
        name: page_size
        required: true
        schema:
          format: int64
          maximum: 50
          type: integer
        style: form
        x-go-name: PageSize
      - description: Page of the results
        explode: true
        in: query
        name: page_number
        required: true
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: PageNumber
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetNotificationsResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetNotifications
      tags:
      - account
  /users/{user_id}/notifications/{notification_id}/read:
    put:
      description: |-
        End-point for marking a notification as read.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the notification_id path parameter should match the notification_id value of the notification to be marked as read.
      operationId: NotificationMarkRead
      parameters:
      - description: user_id should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: notification_id should be filled with the id of the notification
          to be mark as read
        explode: false
        in: path
        name: notification_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: NotificationId
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: NotificationMarkRead
      tags:
      - account
  /users/{user_id}/notifications/preferences:
    get:
      description: |-
        End-point for getting e-mail subscription mode for the current user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: GetNotificationPreferences
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotificationPreferencesResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: GetNotificationPreferences
      tags:
      - account
  /users/{user_id}/orders:
    get:
      description: |-
        End-point for getting all orders for the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserOrdersGet
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: Restricts the response to orders in a single market
        explode: true
        in: query
        name: market_id
        required: false
        schema:
          format: uuid4
          type: string
        style: form
        x-go-name: MarketId
      - description: Restricts the response to orders in a single direction (yes or
          no)
        explode: true
        in: query
        name: is_yes
        required: false
        schema:
          type: boolean
        style: form
        x-go-name: IsYes
      - description: Restricts the response to orders within a minimum price
        explode: true
        in: query
        name: min_price
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: MinPrice
      - description: Restricts the response to orders within a maximum price
        explode: true
        in: query
        name: max_price
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: MaxPrice
      - description: Restricts the response to orders within a minimum place count
        explode: true
        in: query
        name: min_place_count
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-go-name: MinPlaceCount
      - description: Restricts the response to orders within a maximum place count
        explode: true
        in: query
        name: max_place_count
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-go-name: MaxPlaceCount
      - description: Restricts the response to orders within a minimum initial count
        explode: true
        in: query
        name: min_initial_count
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-go-name: MinInitialCount
      - description: Restricts the response to orders within a maximum initial count
        explode: true
        in: query
        name: max_initial_count
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-go-name: MaxInitialCount
      - description: Restricts the response to orders within a minimum remaining resting
          contracts count
        explode: true
        in: query
        name: min_remaining_count
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-go-name: MinRemainingCount
      - description: Restricts the response to orders within a maximum remaining resting
          contracts count
        explode: true
        in: query
        name: max_remaining_count
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-go-name: MaxRemainingCount
      - description: Restricts the response to orders after a timestamp
        explode: true
        in: query
        name: min_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-go-name: MinDate
      - description: Restricts the response to orders before a timestamp
        explode: true
        in: query
        name: max_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-go-name: MaxDate
      - description: "If true, gets the queue placement for every resting order returned"
        explode: true
        in: query
        name: get_queue_position
        required: false
        schema:
          type: boolean
        style: form
        x-go-name: GetQueuePosition
      - description: "Restricts the response to orders that have a certain status:\
          \ resting, canceled, or executed"
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
        x-go-name: Status
      - description: Parameter to specify the number of results per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: PageSize
      - description: Parameter to specify which page of the results should be retrieved
        explode: true
        in: query
        name: page_number
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: PageNumber
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrdersGetResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserOrdersGet
      tags:
      - user
    post:
      description: |-
        End-point for submitting orders in a market.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserOrderCreate
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserOrderCreateRequest'
        description: Order create input data
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrderCreateResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserOrderCreate
      tags:
      - user
  /users/{user_id}/orders/{order_id}:
    delete:
      description: "End-point for canceling orders.\n\nThe value for the user_id path\
        \ parameter should match the user_id value returned on the response for the\
        \ last login request (POST /log_in).\nThe value for the order_id should match\
        \ the id field of the order you want to decrease.\nCommonly delete end-points\
        \ return 204 status with no body content on success.\nBut we can't completely\
        \ delete the order, as it may be partially filled already.\nSo what the delete\
        \ end-point does is just reducing the order completely zeroing the remaining\
        \ resting contracts on it.\nThe zeroed order is returned on the response payload,\
        \ as a form of validation for the client."
      operationId: UserOrderCancel
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: This order_id should be filled with the id of the order to be
          decrease
        explode: false
        in: path
        name: order_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: OrderId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrderDecreaseResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserOrderCancel
      tags:
      - user
  /users/{user_id}/orders/{order_id}/decrease:
    post:
      description: |-
        End-point for decreasing the number of contracts on orders. This is the only kind of edit we support on orders.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the order_id should match the id field of the order you want to decrease.
      operationId: UserOrderDecrease
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: This order_id should be filled with the id of the order to be
          decrease
        explode: false
        in: path
        name: order_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: OrderId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserOrderDecreaseRequest'
        description: Order data
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrderDecreaseResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserOrderDecrease
      tags:
      - user
  /users/{user_id}/password:
    put:
      description: |-
        End-point for updating logged-in user password.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserChangePassword
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangePasswordRequest'
        description: Change password input fields.
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserChangePassword
      tags:
      - user
  /users/{user_id}/portfolio/:
    get:
      description: |-
        End-point for getting the logged in user's portfolio historical track.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: DeprecatedUserGetPortfolioHistory
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecatedUserGetPortfolioHistoryRequest'
        description: Order create input data
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedUserGetPortfolioHistoryResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: DeprecatedUserGetPortfolioHistory
      tags:
      - portfolio
  /users/{user_id}/positions:
    get:
      description: |-
        End-point for getting all market positions for the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetMarketPositions
      parameters:
      - description: Should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketPositionsResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetMarketPositions
      tags:
      - user
  /users/{user_id}/positions/{market_id}:
    get:
      description: "End-point for getting the market positions for the logged in user,\
        \ in a specific market.\n\nThe value for the user_id path parameter should\
        \ match the user_id value returned on the response for the last login request\
        \ (POST /log_in).\n\nThe value for the market_id path parameter should match\
        \ the id value of the target market."
      operationId: UserGetMarketPosition
      parameters:
      - description: Should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: Should be filled with the id of the target market
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMarketPositionResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetMarketPosition
      tags:
      - user
  /users/{user_id}/ranged_positions/{ranged_market_id}:
    get:
      description: "End-point for getting the market positions and additional data\
        \ for the logged in user for all markets whose results linked by a single\
        \ outcome.\nThese markets share a parameter ranged_market_id, which indicates\
        \ their relationship with each other.\n\nThe value for the user_id path parameter\
        \ should match the user_id value returned on the response for the last login\
        \ request (POST /log_in).\n\nThe value for the ranged_market_id path parameter\
        \ should match the id value of the target market."
      operationId: UserGetRangedMarketPosition
      parameters:
      - description: Should be filled in with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: Should be filled with the id of the target ranged market
        explode: false
        in: path
        name: ranged_market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: RangedMarketId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetRangedMarketPositionResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetRangedMarketPosition
      tags:
      - ranged_markets
  /users/{user_id}/referrals:
    get:
      description: End-point for getting all information related to a member's referral
        status.
      operationId: UserGetReferralInfo
      parameters:
      - description: Should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetReferralInfoResponse'
          description: ""
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      summary: UserGetReferralInfo
      tags:
      - user
  /users/{user_id}/sampled_portfolio/:
    get:
      description: |-
        End-point for getting the logged in user's portfolio historical track.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetSampledPortfolioHistory
      parameters:
      - description: Should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetSampledPortfolioHistoryResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetSampledPortfolioHistory
      tags:
      - portfolio
  /users/{user_id}/subscribe:
    patch:
      description: |-
        End-point for changing e-mail subscription mode for the current user.

        This end-point is very useful for users that have a large volume of orders and don't want to be email notified whenever an order is submitted / edited / canceled or matches.

        This is specially useful for Market Makers.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: ChangeSubscription
      parameters:
      - description: Should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeSubscriptionRequest'
        description: Change subscription data
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeSubscriptionResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: ChangeSubscription
      tags:
      - account
  /users/{user_id}/trades:
    get:
      description: |-
        End-point for getting all trades for the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserTradesGet
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: Restricts the response to trades in a specific market.
        explode: true
        in: query
        name: market_id
        required: false
        schema:
          format: uuid4
          type: string
        style: form
        x-go-name: MarketId
      - description: Restricts the response to trades related to a specific order.
        explode: true
        in: query
        name: order_id
        required: false
        schema:
          format: uuid4
          type: string
        style: form
        x-go-name: OrderId
      - description: Restricts the response to trades within a minimum price.
        explode: true
        in: query
        name: MinPrice
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Restricts the response to trades within a maximum price.
        explode: true
        in: query
        name: MaxPrice
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Restricts the response to trades within a minimum contracts count.
        explode: true
        in: query
        name: MinCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Restricts the response to trades within a maximum contracts count.
        explode: true
        in: query
        name: max_count
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-go-name: MaxCount
      - description: Restricts the response to trades after a timestamp.
        explode: true
        in: query
        name: min_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-go-name: MinDate
      - description: Restricts the response to trades before a timestamp.
        explode: true
        in: query
        name: max_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-go-name: MaxDate
      - description: Parameter to specify the number of results per page
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: PageSize
      - description: Parameter to specify which page of the results should be retrieved
        explode: true
        in: query
        name: page_number
        required: false
        schema:
          format: int64
          type: integer
        style: form
        x-go-name: PageNumber
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTradesGetResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserTradesGet
      tags:
      - user
  /users/{user_id}/watchlist:
    get:
      description: |-
        End-point for getting the market watchlist for the logged in user.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).
      operationId: UserGetWatchlist
      parameters:
      - description: Should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetWatchlistResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserGetWatchlist
      tags:
      - user
  /users/{user_id}/watchlist/{market_id}:
    delete:
      description: |-
        End-point for removing a market from the logged in user's watchlist.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the market_id path parameter should match the id value of the market to be added.
      operationId: UserRemoveWatchlist
      parameters:
      - description: Should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: Should be filled with the id of the target market
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "503":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserRemoveWatchlist
      tags:
      - user
    put:
      description: |-
        End-point for adding a market to the logged in user's watchlist.

        The value for the user_id path parameter should match the user_id value returned on the response for the last login request (POST /log_in).

        The value for the market_id path parameter should match the id value of the market to be added.
      operationId: UserAddWatchlist
      parameters:
      - description: user_id should be filled with your user_id provided on log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      - description: market_id should be filled with the id of the market to be added
          to the watchlist
        explode: false
        in: path
        name: market_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: MarketId
      responses:
        "204":
          description: No fields are returned on the response.
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "404":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: UserAddWatchlist
      tags:
      - user
  /users/{user_id}/withdrawals/available:
    get:
      description: End-point for getting how much money a member is elgible to withdraw
      operationId: GetUserWithdrawalAvailableBalance
      parameters:
      - description: This parameter should be filled with your user_id provided on
          log_in
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: uuid4
          type: string
        style: simple
        x-go-name: UserId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithdrawalAvailableBalanceResponse'
          description: ""
        "400":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "403":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
        "500":
          description: JSONError is a generic structure for API error responses.
          headers:
            code:
              explode: false
              schema:
                type: string
              style: simple
            details:
              explode: false
              schema:
                type: string
              style: simple
            message:
              explode: false
              schema:
                type: string
              style: simple
            service:
              explode: false
              schema:
                type: string
              style: simple
      security:
      - cookie: []
      summary: GetUserWithdrawalAvailableBalance
      tags:
      - users
components:
  responses:
    ChangeSubscriptionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChangeSubscriptionResponse'
      description: ""
    CreateFrontendSessionResponse:
      description: ""
      headers:
        session_id:
          explode: false
          schema:
            type: string
          style: simple
    DeprecatedUserGetPortfolioHistoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeprecatedUserGetPortfolioHistoryResponse'
      description: ""
    EmptyResponse:
      description: No fields are returned on the response.
    ExchangeStatus:
      description: ""
      headers:
        exchange_active:
          explode: false
          schema:
            type: boolean
          style: simple
        immediate_funding_active:
          explode: false
          schema:
            type: boolean
          style: simple
        trading_active:
          explode: false
          schema:
            type: boolean
          style: simple
    GetActiveMarketsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetActiveMarketsResponse'
      description: ""
    GetEventByTicker:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEventByTickerResponse'
      description: ""
    GetEventByTickerCached:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEventByTickerResponse'
      description: ""
    GetEvents:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEventsResponse'
      description: ""
    GetEventsCached:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEventsResponse'
      description: ""
    GetMarketHistoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetMarketHistoryResponse'
      description: ""
    GetMarketOrderBookResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetMarketOrderBookResponse'
      description: ""
    GetMarketResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetMarketResponse'
      description: ""
    GetMarketsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetMarketsResponse'
      description: ""
    GetNotificationPreferencesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNotificationPreferencesResponse'
      description: ""
    GetRangedMarket:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRangedMarketResponse'
      description: ""
    GetRangedMarketByTicker:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRangedMarketByTickerResponse'
      description: ""
    GetRangedMarkets:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetRangedMarketsResponse'
      description: ""
    GetSeriesByTicker:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSeriesByTickerResponse'
      description: ""
    GetSeriesList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSeriesListResponse'
      description: ""
    GetUserDepositsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserDepositsResponse'
      description: ""
    GetUserImmediateFunding:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserImmediateFundingResponse'
      description: ""
    GetUserWithdrawalsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserWithdrawalsResponse'
      description: ""
    JSONError:
      description: JSONError is a generic structure for API error responses.
      headers:
        code:
          explode: false
          schema:
            type: string
          style: simple
        details:
          explode: false
          schema:
            type: string
          style: simple
        message:
          explode: false
          schema:
            type: string
          style: simple
        service:
          explode: false
          schema:
            type: string
          style: simple
    LoginResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginResponse'
      description: ""
      headers:
        Set-Cookie:
          description: Access token is set on a cookie named 'sessions' as well
          explode: false
          schema:
            type: string
          style: simple
    TradesGetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TradesGetResponse'
      description: ""
    UserBatchOrdersCancelResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserBatchOrdersCancelResponse'
      description: ""
    UserBatchOrdersCreateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserBatchOrdersCreateResponse'
      description: ""
    UserCreateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserResponse'
      description: ""
    UserGetAccountHistoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetAccountHistoryResponse'
      description: ""
    UserGetBalanceResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetBalanceResponse'
      description: ""
    UserGetCurrentPortfolioValueResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetCurrentPortfolioValueResponse'
      description: ""
    UserGetFavoritedSeriesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetFavoritedSeriesResponse'
      description: ""
    UserGetMarketPositionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetMarketPositionResponse'
      description: ""
    UserGetMarketPositionsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetMarketPositionsResponse'
      description: ""
    UserGetNotificationsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetNotificationsResponse'
      description: ""
    UserGetProfileResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetProfileResponse'
      description: ""
    UserGetProfitsAndLossesResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetProfitsAndLossesResponse'
      description: ""
    UserGetRangedMarketPositionResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetRangedMarketPositionResponse'
      description: ""
    UserGetReferralInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetReferralInfoResponse'
      description: ""
    UserGetSampledPortfolioHistoryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetSampledPortfolioHistoryResponse'
      description: ""
    UserGetWatchlistResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGetWatchlistResponse'
      description: ""
    UserListLedgerxBankAccountsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserListLedgerxBankAccountsResponse'
      description: ""
    UserOrderCancelResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserOrderDecreaseResponse'
      description: ""
    UserOrderCreateResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserOrderCreateResponse'
      description: ""
    UserOrderDecreaseResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserOrderDecreaseResponse'
      description: ""
    UserOrdersGetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserOrdersGetResponse'
      description: ""
    UserRequestDepositResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserDepositResponse'
      description: ""
    UserRequestWithdrawalResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserWithdrawalResponse'
      description: ""
    UserTradesGetResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserTradesGetResponse'
      description: ""
    UserWithdrawalAvailableBalanceResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserWithdrawalAvailableBalanceResponse'
      description: ""
  schemas:
    AccountHistoryEntry:
      example:
        data:
          Order:
            original_count: 2
            updated_at: 2000-01-23T04:56:07.000+00:00
            remaining_count: 7
            market_title: market_title
            price: 4
            created_at: 2000-01-23T04:56:07.000+00:00
            market_id: market_id
            fcc_canceled_count: 9
            canceled_count: 2
            filled_count: 3
            is_yes: true
            close_cancel_count: 7
          Deposit:
            amount: 6
            returned_amount: 5
            updated_at: 2000-01-23T04:56:07.000+00:00
            fee: 1
            created_at: 2000-01-23T04:56:07.000+00:00
            immediate_status: immediate_status
            deposit_type: deposit_type
            immediate_amount: 5
            status: status
          Settlement:
            market_title: market_title
            no_total_cost: 1
            settled_time: 2000-01-23T04:56:07.000+00:00
            yes_count: 6
            market_id: market_id
            market_result: market_result
            no_count: 1
            profit: 1
            determined_time: 2000-01-23T04:56:07.000+00:00
            yes_total_cost: 7
          Trade:
            amount: 1
            market_title: market_title
            price: 5
            fee: 4
            created_at: 2000-01-23T04:56:07.000+00:00
            market_id: market_id
            is_yes: true
          Credit:
            reason: reason
            amount_cents: 0
            created_at: 2000-01-23T04:56:07.000+00:00
            type: type
            status: status
          Withdrawal:
            amount: 9
            returned_amount: 6
            updated_at: 2000-01-23T04:56:07.000+00:00
            fee: 9
            created_at: 2000-01-23T04:56:07.000+00:00
            status: status
        type: type
      properties:
        data:
          $ref: '#/components/schemas/AccountHistoryEntryData'
        type:
          description: "Type of entry, one of Deposit, Withdrawal, Order, or Settlement"
          type: string
          x-go-name: Type
      required:
      - type
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    AccountHistoryEntryData:
      example:
        Order:
          original_count: 2
          updated_at: 2000-01-23T04:56:07.000+00:00
          remaining_count: 7
          market_title: market_title
          price: 4
          created_at: 2000-01-23T04:56:07.000+00:00
          market_id: market_id
          fcc_canceled_count: 9
          canceled_count: 2
          filled_count: 3
          is_yes: true
          close_cancel_count: 7
        Deposit:
          amount: 6
          returned_amount: 5
          updated_at: 2000-01-23T04:56:07.000+00:00
          fee: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          immediate_status: immediate_status
          deposit_type: deposit_type
          immediate_amount: 5
          status: status
        Settlement:
          market_title: market_title
          no_total_cost: 1
          settled_time: 2000-01-23T04:56:07.000+00:00
          yes_count: 6
          market_id: market_id
          market_result: market_result
          no_count: 1
          profit: 1
          determined_time: 2000-01-23T04:56:07.000+00:00
          yes_total_cost: 7
        Trade:
          amount: 1
          market_title: market_title
          price: 5
          fee: 4
          created_at: 2000-01-23T04:56:07.000+00:00
          market_id: market_id
          is_yes: true
        Credit:
          reason: reason
          amount_cents: 0
          created_at: 2000-01-23T04:56:07.000+00:00
          type: type
          status: status
        Withdrawal:
          amount: 9
          returned_amount: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          fee: 9
          created_at: 2000-01-23T04:56:07.000+00:00
          status: status
      properties:
        Credit:
          $ref: '#/components/schemas/CreditHistory'
        Deposit:
          $ref: '#/components/schemas/DepositHistory'
        Order:
          $ref: '#/components/schemas/OrderHistory'
        Settlement:
          $ref: '#/components/schemas/SettlementHistory'
        Trade:
          $ref: '#/components/schemas/TradeHistory'
        Withdrawal:
          $ref: '#/components/schemas/WithdrawalHistory'
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    BankAccountDetails:
      description: "Encapsulates meta-data of bank accounts.\n\nThis is not stored\
        \ within Kalshi, it is always proxied from the clearing house."
      properties:
        bank_id:
          type: string
          x-go-name: BankId
        mask:
          type: string
          x-go-name: Mask
        name:
          type: string
          x-go-name: Name
        plaid_item_needs_relink:
          type: boolean
          x-go-name: Disconnected
        routing_number:
          type: string
          x-go-name: RoutingNumber
        subtype:
          type: string
          x-go-name: Subtype
        type:
          type: string
          x-go-name: Type
      required:
      - bank_id
      - mask
      - name
      - plaid_item_needs_relink
      - subtype
      - type
      title: BankAccountDetails
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Cent:
      format: int64
      type: integer
      x-go-package: github.com/Kalshi/exchange-infra/common/types
    ChangeSubscriptionRequest:
      example:
        subscription_level: subscription_level
        push_preferences: true
      properties:
        push_preferences:
          type: boolean
          x-go-name: PushPreferences
        subscription_level:
          description: "Specifies the subscription level for email notifications its\
            \ values can be: \"none\", \"basic\" or \"all\""
          type: string
          x-go-name: Level
      required:
      - subscription_level
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    ChangeSubscriptionResponse:
      example:
        preferences:
          subscription_level: subscription_level
          push_preferences:
          - push_preferences
          - push_preferences
      properties:
        preferences:
          $ref: '#/components/schemas/SubscriptionPreference'
      required:
      - preferences
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    ConfirmPasswordResetRequest:
      example:
        password: password
        user_id: user_id
      properties:
        password:
          description: The new password.
          minLength: 6
          type: string
          x-go-name: Password
        user_id:
          description: UserUUID for your user. You can get this from the password
            reset link query parameter.
          format: uuid4
          type: string
          x-go-name: UserId
      required:
      - password
      - user_id
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    CreateUserRequest:
      properties:
        email:
          description: A valid email for the new user.
          example: john@example.com
          type: string
          x-go-name: Email
        password:
          description: Password for the new user account.
          example: s3cr3t
          type: string
          x-go-name: Password
      required:
      - email
      - password
      title: Request for creating a new user.
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    CreateUserResponse:
      description: Response for submitting an order
      example:
        code: code
        user_id: user_id
      properties:
        code:
          description: "swagger: ignore"
          type: string
          x-go-name: Code
        user_id:
          description: user_id for the created user.
          format: uuid4
          type: string
          x-go-name: UserId
      required:
      - user_id
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    CreditHistory:
      example:
        reason: reason
        amount_cents: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        type: type
        status: status
      properties:
        amount_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        created_at:
          format: date-time
          type: string
          x-go-name: CreatedAt
        reason:
          type: string
          x-go-name: CreditReason
        status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        type:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    CreditStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    CreditType:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    Deposit:
      description: Represents a deposit.
      properties:
        amount_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        bank_id:
          type: string
          x-go-name: BankId
        created_ts:
          format: date-time
          type: string
          x-go-name: CreatedTs
        deposit_type:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        id:
          type: string
          x-go-name: Id
        immediate_amount:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        immediate_status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        return_code:
          type: string
          x-go-name: ReturnCode
        return_reason:
          type: string
          x-go-name: ReturnReason
        status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        user_id:
          type: string
          x-go-name: UserId
      title: Deposit
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    DepositHistory:
      description: Represents a deposit account history item
      example:
        amount: 6
        returned_amount: 5
        updated_at: 2000-01-23T04:56:07.000+00:00
        fee: 1
        created_at: 2000-01-23T04:56:07.000+00:00
        immediate_status: immediate_status
        deposit_type: deposit_type
        immediate_amount: 5
        status: status
      properties:
        amount:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        created_at:
          format: date-time
          type: string
          x-go-name: CreatedAt
        deposit_type:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        fee:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        immediate_amount:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        immediate_status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        returned_amount:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        updated_at:
          format: date-time
          type: string
          x-go-name: UpdatedAt
      title: DepositHistory
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    DepositStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    DepositType:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    DeprecatedPortfolioMeasurement:
      description: |-
        Deprecated Portfolio measurement is simply a snapshot of the portfolio of a user on a timestamp.

        This is going to get deprecated soon.
      example:
        cumulative_number_settlements: 5
        a: 0
        reason: reason
        v: 7
        cumulative_deposits: 1
        balance_change: 6
        cumulative_withdrawals: 5
        ts: 2
      properties:
        a:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        balance_change:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        cumulative_deposits:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        cumulative_number_settlements:
          description: Count of settlements member has had from account creation to
            timestamp (inclusive)
          format: int64
          type: integer
          x-go-name: CumulativeNumberSettlements
        cumulative_withdrawals:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        reason:
          description: "Reasons for the portfolio value change, if applicable"
          type: string
          x-go-name: Reason
        ts:
          description: Timestamp of the read in UNIX timestamp. (https://www.unixtimestamp.com/)
          format: int64
          type: integer
          x-go-name: MeasurementTs
        v:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      required:
      - a
      - cumulative_deposits
      - cumulative_number_settlements
      - cumulative_withdrawals
      - ts
      - v
      title: DeprecatedPortfolioMeasurement
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    DeprecatedUserGetPortfolioHistoryRequest:
      description: Request for fetching user portfolio history
      example:
        max_date: 2000-01-23T04:56:07.000+00:00
        max_ts: 0
        min_date: 2000-01-23T04:56:07.000+00:00
        min_ts: 6
        num_buckets: 1
      properties:
        max_date:
          description: "Restricts the response to orders before a timestamp\nin: query"
          format: date-time
          type: string
          x-go-name: MaxDate
        max_ts:
          description: "Restricts the response to orders before a timestamp in unix\
            \ seconds, overrides max_date, defaults to now.\nin: query"
          format: int64
          type: integer
          x-go-name: MaxTs
        min_date:
          description: "Restricts the response to orders after a timestamp\nin: query"
          format: date-time
          type: string
          x-go-name: MinDate
        min_ts:
          description: "Restricts the response to orders after a timestamp in unix\
            \ seconds, overrides min_date, defaults to one hour before now.\nin: query"
          format: int64
          type: integer
          x-go-name: MinTs
        num_buckets:
          description: "Determines the number of buckets to average over when performing\
            \ subsampling, defaults to 1440.\nin: query"
          format: int32
          type: integer
          x-go-name: NumBuckets
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    DeprecatedUserGetPortfolioHistoryResponse:
      example:
        values:
        - cumulative_number_settlements: 5
          a: 0
          reason: reason
          v: 7
          cumulative_deposits: 1
          balance_change: 6
          cumulative_withdrawals: 5
          ts: 2
        - cumulative_number_settlements: 5
          a: 0
          reason: reason
          v: 7
          cumulative_deposits: 1
          balance_change: 6
          cumulative_withdrawals: 5
          ts: 2
      properties:
        values:
          items:
            $ref: '#/components/schemas/DeprecatedPortfolioMeasurement'
          type: array
          x-go-name: Values
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    EventChildMarket:
      example:
        expiration_value: expiration_value
        dollar_recent_volume: 6
        ticker_name: ticker_name
        close_date: 2000-01-23T04:56:07.000+00:00
        rulebook_variables:
          key: rulebook_variables
        dollar_volume: 1
        mini_title: mini_title
        open_interest: 2
        yes_bid: 1
        liquidity: 5
        expiration_date: 2000-01-23T04:56:07.000+00:00
        title: title
        yes_ask: 7
        result: result
        recent_volume: 2
        id: id
        close_unconfirmed: true
        create_date: 2000-01-23T04:56:07.000+00:00
        open_date: 2000-01-23T04:56:07.000+00:00
        previous_yes_bid: 3
        sub_title: sub_title
        previous_yes_ask: 9
        can_close_early: true
        list_date: 2000-01-23T04:56:07.000+00:00
        volume: 4
        dollar_open_interest: 0
        previous_price: 7
        last_price: 5
        status: status
      properties:
        can_close_early:
          type: boolean
          x-go-name: CanCloseEarly
        close_date:
          format: date-time
          type: string
          x-go-name: CloseDate
        close_unconfirmed:
          type: boolean
          x-go-name: CloseUnconfirmed
        create_date:
          format: date-time
          type: string
          x-go-name: CreateDate
        dollar_open_interest:
          format: int64
          type: integer
          x-go-name: DollarOpenInterest
        dollar_recent_volume:
          format: int64
          type: integer
          x-go-name: DollarRecentVolume
        dollar_volume:
          format: int64
          type: integer
          x-go-name: DollarVolume
        expiration_date:
          format: date-time
          type: string
          x-go-name: ExpirationDate
        expiration_value:
          type: string
          x-go-name: ExpirationValue
        id:
          format: uuid4
          type: string
          x-go-name: Id
        last_price:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        liquidity:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        list_date:
          format: date-time
          type: string
          x-go-name: ListDate
        mini_title:
          type: string
          x-go-name: MiniTitle
        open_date:
          format: date-time
          type: string
          x-go-name: OpenDate
        open_interest:
          format: int64
          type: integer
          x-go-name: OpenInterest
        previous_price:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        previous_yes_ask:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        previous_yes_bid:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        recent_volume:
          format: int64
          type: integer
          x-go-name: RecentVolume
        result:
          type: string
          x-go-name: Result
        rulebook_variables:
          additionalProperties:
            type: string
          type: object
          x-go-name: RulebookVariables
        status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        sub_title:
          type: string
          x-go-name: SubTitle
        ticker_name:
          type: string
          x-go-name: TickerName
        title:
          type: string
          x-go-name: Title
        volume:
          format: int64
          type: integer
          x-go-name: Volume
        yes_ask:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        yes_bid:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    EventData:
      example:
        mutually_exclusive: true
        ticker: ticker
        sub_title: sub_title
        metrics_tags:
        - metrics_tags
        - metrics_tags
        mutually_exclusive_side: mutually_exclusive_side
        mini_title: mini_title
        description_context: description_context
        underlying: underlying
        min_tick_size: min_tick_size
        title: title
        settlement_sources:
        - name: name
          url: url
        - name: name
          url: url
        tags:
        - tags
        - tags
        target_datetime: 2000-01-23T04:56:07.000+00:00
        markets:
        - expiration_value: expiration_value
          dollar_recent_volume: 6
          ticker_name: ticker_name
          close_date: 2000-01-23T04:56:07.000+00:00
          rulebook_variables:
            key: rulebook_variables
          dollar_volume: 1
          mini_title: mini_title
          open_interest: 2
          yes_bid: 1
          liquidity: 5
          expiration_date: 2000-01-23T04:56:07.000+00:00
          title: title
          yes_ask: 7
          result: result
          recent_volume: 2
          id: id
          close_unconfirmed: true
          create_date: 2000-01-23T04:56:07.000+00:00
          open_date: 2000-01-23T04:56:07.000+00:00
          previous_yes_bid: 3
          sub_title: sub_title
          previous_yes_ask: 9
          can_close_early: true
          list_date: 2000-01-23T04:56:07.000+00:00
          volume: 4
          dollar_open_interest: 0
          previous_price: 7
          last_price: 5
          status: status
        - expiration_value: expiration_value
          dollar_recent_volume: 6
          ticker_name: ticker_name
          close_date: 2000-01-23T04:56:07.000+00:00
          rulebook_variables:
            key: rulebook_variables
          dollar_volume: 1
          mini_title: mini_title
          open_interest: 2
          yes_bid: 1
          liquidity: 5
          expiration_date: 2000-01-23T04:56:07.000+00:00
          title: title
          yes_ask: 7
          result: result
          recent_volume: 2
          id: id
          close_unconfirmed: true
          create_date: 2000-01-23T04:56:07.000+00:00
          open_date: 2000-01-23T04:56:07.000+00:00
          previous_yes_bid: 3
          sub_title: sub_title
          previous_yes_ask: 9
          can_close_early: true
          list_date: 2000-01-23T04:56:07.000+00:00
          volume: 4
          dollar_open_interest: 0
          previous_price: 7
          last_price: 5
          status: status
        settle_details: settle_details
        series_ticker: series_ticker
        category: category
      properties:
        category:
          type: string
          x-go-name: Category
        description_context:
          type: string
          x-go-name: DescriptionContext
        markets:
          items:
            $ref: '#/components/schemas/EventChildMarket'
          type: array
          x-go-name: Markets
        metrics_tags:
          items:
            type: string
          type: array
          x-go-name: MetricsTags
        min_tick_size:
          type: string
          x-go-name: MinTickSize
        mini_title:
          type: string
          x-go-name: MiniTitle
        mutually_exclusive:
          type: boolean
          x-go-name: MutuallyExclusive
        mutually_exclusive_side:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        series_ticker:
          type: string
          x-go-name: SeriesTicker
        settle_details:
          type: string
          x-go-name: SettleDetails
        settlement_sources:
          items:
            $ref: '#/components/schemas/SettlementSource'
          type: array
          x-go-name: SettlementSources
        sub_title:
          type: string
          x-go-name: SubTitle
        tags:
          items:
            type: string
          type: array
          x-go-name: Tags
        target_datetime:
          format: date-time
          type: string
          x-go-name: TargetDatetime
        ticker:
          type: string
          x-go-name: Ticker
        title:
          type: string
          x-go-name: Title
        underlying:
          type: string
          x-go-name: Underlying
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    FavoritedSeries:
      example:
        series_tickers:
        - series_tickers
        - series_tickers
      properties:
        series_tickers:
          items:
            type: string
          type: array
          x-go-name: SeriesTickers
      title: FavoritedSeries is a list of a series that the user has indicated they
        want to track closely.
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetActiveMarketsResponse:
      example:
        active_markets:
        - open_date: 2000-01-23T04:56:07.000+00:00
          close_date: 2000-01-23T04:56:07.000+00:00
          price_change: 0
          ticker: ticker
          volume_increase: 6
          market_id: market_id
        - open_date: 2000-01-23T04:56:07.000+00:00
          close_date: 2000-01-23T04:56:07.000+00:00
          price_change: 0
          ticker: ticker
          volume_increase: 6
          market_id: market_id
      properties:
        active_markets:
          items:
            $ref: '#/components/schemas/MarketActivity'
          type: array
          x-go-name: Markets
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetCandlestickMarketHistoryResponse:
      example:
        points:
        - YesAsk:
            high: 5
            low: 5
            mean: 2
            close: 1
            open: 7
          StartTs: 9
          EndTs: 0
          Price:
            high: 5
            low: 5
            mean: 2
            close: 1
            open: 7
          Volume: 3
          YesBid:
            high: 5
            low: 5
            mean: 2
            close: 1
            open: 7
          OpenInterest: 6
        - YesAsk:
            high: 5
            low: 5
            mean: 2
            close: 1
            open: 7
          StartTs: 9
          EndTs: 0
          Price:
            high: 5
            low: 5
            mean: 2
            close: 1
            open: 7
          Volume: 3
          YesBid:
            high: 5
            low: 5
            mean: 2
            close: 1
            open: 7
          OpenInterest: 6
      properties:
        points:
          items:
            $ref: '#/components/schemas/MarketHistoryCandleStickInfo'
          type: array
          x-go-name: Points
      required:
      - points
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetEventByTickerResponse:
      example:
        event:
          mutually_exclusive: true
          ticker: ticker
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          mutually_exclusive_side: mutually_exclusive_side
          mini_title: mini_title
          description_context: description_context
          underlying: underlying
          min_tick_size: min_tick_size
          title: title
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          tags:
          - tags
          - tags
          target_datetime: 2000-01-23T04:56:07.000+00:00
          markets:
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 2
            yes_bid: 1
            liquidity: 5
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: 7
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: 3
            sub_title: sub_title
            previous_yes_ask: 9
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 4
            dollar_open_interest: 0
            previous_price: 7
            last_price: 5
            status: status
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 2
            yes_bid: 1
            liquidity: 5
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: 7
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: 3
            sub_title: sub_title
            previous_yes_ask: 9
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 4
            dollar_open_interest: 0
            previous_price: 7
            last_price: 5
            status: status
          settle_details: settle_details
          series_ticker: series_ticker
          category: category
      properties:
        event:
          $ref: '#/components/schemas/EventData'
      required:
      - event
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetEventsResponse:
      example:
        events:
        - mutually_exclusive: true
          ticker: ticker
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          mutually_exclusive_side: mutually_exclusive_side
          mini_title: mini_title
          description_context: description_context
          underlying: underlying
          min_tick_size: min_tick_size
          title: title
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          tags:
          - tags
          - tags
          target_datetime: 2000-01-23T04:56:07.000+00:00
          markets:
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 2
            yes_bid: 1
            liquidity: 5
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: 7
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: 3
            sub_title: sub_title
            previous_yes_ask: 9
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 4
            dollar_open_interest: 0
            previous_price: 7
            last_price: 5
            status: status
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 2
            yes_bid: 1
            liquidity: 5
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: 7
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: 3
            sub_title: sub_title
            previous_yes_ask: 9
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 4
            dollar_open_interest: 0
            previous_price: 7
            last_price: 5
            status: status
          settle_details: settle_details
          series_ticker: series_ticker
          category: category
        - mutually_exclusive: true
          ticker: ticker
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          mutually_exclusive_side: mutually_exclusive_side
          mini_title: mini_title
          description_context: description_context
          underlying: underlying
          min_tick_size: min_tick_size
          title: title
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          tags:
          - tags
          - tags
          target_datetime: 2000-01-23T04:56:07.000+00:00
          markets:
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 2
            yes_bid: 1
            liquidity: 5
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: 7
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: 3
            sub_title: sub_title
            previous_yes_ask: 9
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 4
            dollar_open_interest: 0
            previous_price: 7
            last_price: 5
            status: status
          - expiration_value: expiration_value
            dollar_recent_volume: 6
            ticker_name: ticker_name
            close_date: 2000-01-23T04:56:07.000+00:00
            rulebook_variables:
              key: rulebook_variables
            dollar_volume: 1
            mini_title: mini_title
            open_interest: 2
            yes_bid: 1
            liquidity: 5
            expiration_date: 2000-01-23T04:56:07.000+00:00
            title: title
            yes_ask: 7
            result: result
            recent_volume: 2
            id: id
            close_unconfirmed: true
            create_date: 2000-01-23T04:56:07.000+00:00
            open_date: 2000-01-23T04:56:07.000+00:00
            previous_yes_bid: 3
            sub_title: sub_title
            previous_yes_ask: 9
            can_close_early: true
            list_date: 2000-01-23T04:56:07.000+00:00
            volume: 4
            dollar_open_interest: 0
            previous_price: 7
            last_price: 5
            status: status
          settle_details: settle_details
          series_ticker: series_ticker
          category: category
      properties:
        events:
          items:
            $ref: '#/components/schemas/EventData'
          type: array
          x-go-name: Events
      required:
      - events
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetMarketHistoryResponse:
      example:
        market_stats_points:
        - volume: 2
          dollar_volume: 6
          price: 5
          dollar_open_interest: 0
          open_interest: 1
          yes_bid: 9
          yes_ask: 7
          ts: 5
        - volume: 2
          dollar_volume: 6
          price: 5
          dollar_open_interest: 0
          open_interest: 1
          yes_bid: 9
          yes_ask: 7
          ts: 5
      properties:
        market_stats_points:
          items:
            $ref: '#/components/schemas/MarketStatsPoint'
          type: array
          x-go-name: MarketStatsPoints
      required:
      - market_stats_points
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetMarketOrderBookResponse:
      example:
        order_book:
          "no":
          - null
          - null
          "yes":
          - null
          - null
      properties:
        order_book:
          $ref: '#/components/schemas/OrderBook'
      required:
      - order_book
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetNotificationPreferencesResponse:
      example:
        preferences:
          subscription_level: subscription_level
          push_preferences:
          - push_preferences
          - push_preferences
      properties:
        preferences:
          $ref: '#/components/schemas/SubscriptionPreference'
      required:
      - preferences
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetRangedMarketByTickerResponse:
      example:
        ranged_markets:
          ticker: ticker
          mutually_exclusive_side: mutually_exclusive_side
          mini_title: mini_title
          id: id
          title: title
      properties:
        ranged_markets:
          $ref: '#/components/schemas/RangedMarket'
      required:
      - ranged_markets
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetRangedMarketResponse:
      example:
        ranged_market:
          ticker: ticker
          mutually_exclusive_side: mutually_exclusive_side
          mini_title: mini_title
          id: id
          title: title
      properties:
        ranged_market:
          $ref: '#/components/schemas/RangedMarket'
      required:
      - ranged_market
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetRangedMarketsResponse:
      properties:
        ranged_markets:
          items:
            $ref: '#/components/schemas/RangedMarket'
          type: array
          x-go-name: RangedMarkets
      required:
      - ranged_markets
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetSeriesByTickerResponse:
      example:
        series:
          ticker: ticker
          first_open_date: 2000-01-23T04:56:07.000+00:00
          title: title
          frequency: frequency
      properties:
        series:
          $ref: '#/components/schemas/Series'
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetSeriesListResponse:
      example:
        series:
        - ticker: ticker
          first_open_date: 2000-01-23T04:56:07.000+00:00
          title: title
          frequency: frequency
        - ticker: ticker
          first_open_date: 2000-01-23T04:56:07.000+00:00
          title: title
          frequency: frequency
      properties:
        series:
          items:
            $ref: '#/components/schemas/Series'
          type: array
          x-go-name: Series
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetUserDepositsResponse:
      properties:
        deposits:
          description: List of previous deposits for the user
          items:
            $ref: '#/components/schemas/Deposit'
          type: array
          x-go-name: Deposits
      required:
      - deposits
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetUserImmediateFundingResponse:
      example:
        immediate_deposit_amount: 5
        immediate_amount_being_used: 6
        immediate_amount_remaining: 1
        deposit_fee_cents: 0
      properties:
        deposit_fee_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        immediate_amount_being_used:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        immediate_amount_remaining:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        immediate_deposit_amount:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      required:
      - deposit_fee_cents
      - immediate_amount_being_used
      - immediate_amount_remaining
      - immediate_deposit_amount
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    GetUserWithdrawalsResponse:
      properties:
        withdrawals:
          description: List of previous withdrawals for the user
          items:
            $ref: '#/components/schemas/Withdrawal'
          type: array
          x-go-name: Withdrawals
      required:
      - withdrawals
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    ImmediateFundingStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    JSONError:
      example:
        code: code
        service: service
        details: details
        message: message
      properties:
        code:
          type: string
          x-go-name: Code
        details:
          type: string
          x-go-name: Details
        message:
          type: string
          x-go-name: Message
        service:
          type: string
          x-go-name: Service
      title: JSONError is a generic structure for API error responses.
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    LoginRequest:
      example:
        password: password
        email: email
      properties:
        email:
          description: Email should be used as login identification credentials.
          format: email
          type: string
          x-go-name: Email
        password:
          description: Password defined in the first step of the sign-up.
          format: password
          minLength: 6
          type: string
          x-go-name: Password
      required:
      - email
      - password
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    LoginResponse:
      description: Response for login request
      example:
        access_level: access_level
        user_id: user_id
        token: token
      properties:
        access_level:
          description: "Access level, to limit the access that applicants have"
          type: string
          x-go-name: AccessLevel
        token:
          description: Access token for an member role session in the api
          type: string
          x-go-name: Token
        user_id:
          description: "Your user_id, this will be required in all requests under\
            \ the /users prefix"
          format: uuid4
          type: string
          x-go-name: UserId
      required:
      - access_level
      - token
      - user_id
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Market:
      description: "Market\nContains information about a market. Note: for some fields,\
        \ you should not assume a fixed structure."
      example:
        expiration_value: expiration_value
        dollar_recent_volume: 6
        ticker_name: ticker_name
        close_date: 2000-01-23T04:56:07.000+00:00
        rulebook_variables:
          key: rulebook_variables
        dollar_volume: 1
        mini_title: mini_title
        open_interest: 7
        yes_bid: 1
        description_context: description_context
        liquidity: 2
        expiration_date: 2000-01-23T04:56:07.000+00:00
        title: title
        yes_ask: 1
        result: result
        original_expiration_date: 2000-01-23T04:56:07.000+00:00
        ranged_group_name: ranged_group_name
        settle_details: settle_details
        recent_volume: 4
        id: id
        close_unconfirmed: true
        create_date: 2000-01-23T04:56:07.000+00:00
        strike_price: 7.386281948385884
        open_date: 2000-01-23T04:56:07.000+00:00
        previous_yes_bid: 2
        sub_title: sub_title
        metrics_tags:
        - metrics_tags
        - metrics_tags
        previous_yes_ask: 3
        can_close_early: true
        image_url: image_url
        option_type: option_type
        underlying: underlying
        min_tick_size: min_tick_size
        list_date: 2000-01-23T04:56:07.000+00:00
        settlement_sources:
        - name: name
          url: url
        - name: name
          url: url
        description_case_no: description_case_no
        tags:
        - tags
        - tags
        ranged_group_ticker: ranged_group_ticker
        volume: 1
        description_case_yes: description_case_yes
        dollar_open_interest: 0
        category: category
        frequency_in_days: 5
        previous_price: 9
        last_price: 5
        status: status
      properties:
        can_close_early:
          type: boolean
          x-go-name: CanCloseEarly
        category:
          type: string
          x-go-name: Category
        close_date:
          format: date-time
          type: string
          x-go-name: CloseDate
        close_unconfirmed:
          type: boolean
          x-go-name: CloseUnconfirmed
        create_date:
          format: date-time
          type: string
          x-go-name: CreateDate
        description_case_no:
          type: string
          x-go-name: DescriptionCaseNo
        description_case_yes:
          type: string
          x-go-name: DescriptionCaseYes
        description_context:
          type: string
          x-go-name: DescriptionContext
        dollar_open_interest:
          format: int64
          type: integer
          x-go-name: DollarOpenInterest
        dollar_recent_volume:
          format: int64
          type: integer
          x-go-name: DollarRecentVolume
        dollar_volume:
          format: int64
          type: integer
          x-go-name: DollarVolume
        expiration_date:
          format: date-time
          type: string
          x-go-name: ExpirationDate
        expiration_value:
          type: string
          x-go-name: ExpirationValue
        frequency_in_days:
          format: int32
          type: integer
          x-go-name: FrequencyInDays
        id:
          format: uuid4
          type: string
          x-go-name: Id
        image_url:
          type: string
          x-go-name: ImageUrl
        last_price:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        liquidity:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        list_date:
          format: date-time
          type: string
          x-go-name: ListDate
        metrics_tags:
          items:
            type: string
          type: array
          x-go-name: MetricsTags
        min_tick_size:
          type: string
          x-go-name: MinTickSize
        mini_title:
          type: string
          x-go-name: MiniTitle
        open_date:
          format: date-time
          type: string
          x-go-name: OpenDate
        open_interest:
          format: int64
          type: integer
          x-go-name: OpenInterest
        option_type:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        original_expiration_date:
          format: date-time
          type: string
          x-go-name: OriginalExpirationDate
        previous_price:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        previous_yes_ask:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        previous_yes_bid:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        ranged_group_name:
          type: string
          x-go-name: RangedGroupName
        ranged_group_ticker:
          type: string
          x-go-name: RangedGroupTicker
        recent_volume:
          format: int64
          type: integer
          x-go-name: RecentVolume
        result:
          type: string
          x-go-name: Result
        rulebook_variables:
          additionalProperties:
            type: string
          description: You should not assume a fixed structure for this field. It
            is subject to change from market to market.
          type: object
          x-go-name: RulebookVariables
        settle_details:
          type: string
          x-go-name: SettleDetails
        settlement_sources:
          items:
            $ref: '#/components/schemas/SettlementSource'
          type: array
          x-go-name: SettlementSources
        status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        strike_price:
          format: double
          type: number
          x-go-name: StrikePrice
        sub_title:
          type: string
          x-go-name: SubTitle
        tags:
          items:
            type: string
          type: array
          x-go-name: Tags
        ticker_name:
          type: string
          x-go-name: TickerName
        title:
          type: string
          x-go-name: Title
        underlying:
          type: string
          x-go-name: Underlying
        volume:
          format: int64
          type: integer
          x-go-name: Volume
        yes_ask:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        yes_bid:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    MarketActivity:
      example:
        open_date: 2000-01-23T04:56:07.000+00:00
        close_date: 2000-01-23T04:56:07.000+00:00
        price_change: 0
        ticker: ticker
        volume_increase: 6
        market_id: market_id
      properties:
        close_date:
          format: date-time
          type: string
          x-go-name: CloseDate
        market_id:
          format: uuid4
          type: string
          x-go-name: MarketId
        open_date:
          format: date-time
          type: string
          x-go-name: OpenDate
        price_change:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        ticker:
          type: string
          x-go-name: Ticker
        volume_increase:
          format: int32
          type: integer
          x-go-name: VolumeIncrease
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    MarketHistoryCandleStickInfo:
      example:
        YesAsk:
          high: 5
          low: 5
          mean: 2
          close: 1
          open: 7
        StartTs: 9
        EndTs: 0
        Price:
          high: 5
          low: 5
          mean: 2
          close: 1
          open: 7
        Volume: 3
        YesBid:
          high: 5
          low: 5
          mean: 2
          close: 1
          open: 7
        OpenInterest: 6
      properties:
        EndTs:
          format: int64
          type: integer
        OpenInterest:
          format: int64
          type: integer
        Price:
          $ref: '#/components/schemas/OLHCM'
        StartTs:
          format: int64
          type: integer
        Volume:
          format: int64
          type: integer
        YesAsk:
          $ref: '#/components/schemas/OLHCM'
        YesBid:
          $ref: '#/components/schemas/OLHCM'
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    MarketOptionType:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    MarketPosition:
      description: MarketPosition is your accumulated position on a specific market
        considering all orders and trades.
      example:
        resting_orders_count: 7
        volume: 3
        fees_paid: 0
        final_position_cost: 1
        total_cost: 9
        user_id: user_id
        position_cost: 5
        is_settled: true
        market_id: market_id
        realized_pnl: 2
        position: 5
        final_position: 6
      properties:
        fees_paid:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        final_position:
          description: Settlement stats
          format: int32
          type: integer
          x-go-name: FinalPosition
        final_position_cost:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        is_settled:
          type: boolean
          x-go-name: IsSettled
        market_id:
          format: uuid4
          type: string
          x-go-name: MarketId
        position:
          description: Current stats
          format: int32
          type: integer
          x-go-name: Position
        position_cost:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        realized_pnl:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        resting_orders_count:
          format: int32
          type: integer
          x-go-name: RestingOrdersCount
        total_cost:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        user_id:
          format: uuid4
          type: string
          x-go-name: UserId
        volume:
          format: int32
          type: integer
          x-go-name: Volume
      title: MarketPosition
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    MarketStatsPoint:
      example:
        volume: 2
        dollar_volume: 6
        price: 5
        dollar_open_interest: 0
        open_interest: 1
        yes_bid: 9
        yes_ask: 7
        ts: 5
      properties:
        dollar_open_interest:
          format: int64
          type: integer
          x-go-name: DollarOpenInterest
        dollar_volume:
          format: int64
          type: integer
          x-go-name: DollarVolume
        open_interest:
          format: int64
          type: integer
          x-go-name: OpenInterest
        price:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        ts:
          format: int64
          type: integer
          x-go-name: Time
        volume:
          format: int64
          type: integer
          x-go-name: Volume
        yes_ask:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        yes_bid:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    MarketStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    MarketTransaction:
      example:
        is_side_yes: true
        average_price_cents: 0
        num_contracts: 1
        market_title: market_title
        realized_fifo_profit_cents: 5
        market_id: market_id
        time: 2000-01-23T04:56:07.000+00:00
        realized_cost_of_contracts_cents: 5
        realized_revenue_cents: 2
        type: type
        fee_cents: 6
        market_ticker: market_ticker
      properties:
        average_price_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        fee_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        is_side_yes:
          type: boolean
          x-go-name: IsSideYes
        market_id:
          format: uuid4
          type: string
          x-go-name: MarketId
        market_ticker:
          type: string
          x-go-name: MarketTicker
        market_title:
          type: string
          x-go-name: MarketTitle
        num_contracts:
          format: int64
          type: integer
          x-go-name: NumContracts
        realized_cost_of_contracts_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        realized_fifo_profit_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        realized_revenue_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        time:
          format: date-time
          type: string
          x-go-name: Time
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Notification:
      example:
        is_read: true
        created_ts: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        is_delivered: true
        link: link
        id: id
        type: type
        content:
          key: "{}"
      properties:
        content:
          additionalProperties:
            type: object
          type: object
          x-go-name: Content
        created_ts:
          format: date-time
          type: string
          x-go-name: CreatedTs
        id:
          type: string
          x-go-name: Id
        is_delivered:
          type: boolean
          x-go-name: IsDelivered
        is_read:
          type: boolean
          x-go-name: IsRead
        link:
          type: string
          x-go-name: Link
        type:
          type: string
          x-go-name: Type
        user_id:
          type: string
          x-go-name: UserId
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    NotificationList:
      items:
        $ref: '#/components/schemas/Notification'
      type: array
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    OLHCM:
      example:
        high: 5
        low: 5
        mean: 2
        close: 1
        open: 7
      properties:
        close:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        high:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        low:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        mean:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        open:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Order:
      description: |-
        Represents user orders in the api.

        When an order is matched multiple trades can be created this can be tracked by looking into the trade.order_id field.
      example:
        queue_position: 3
        remaining_count: 2
        create_ts: 2000-01-23T04:56:07.000+00:00
        decrease_count: 6
        taker_fill_cost: 7
        market_id: market_id
        close_cancel_count: 0
        extra_count: 5
        expiration_ts: 2000-01-23T04:56:07.000+00:00
        place_count: 7
        taker_fill_count: 1
        user_id: user_id
        price: 9
        extra_cost: 1
        last_update_op: last_update_op
        taker_fees: 4
        fcc_cancel_count: 5
        maker_fill_count: 2
        is_yes: true
        order_id: order_id
        status: status
      properties:
        close_cancel_count:
          format: int32
          type: integer
          x-go-name: CloseCancelCount
        create_ts:
          format: date-time
          type: string
          x-go-name: CreateTs
        decrease_count:
          format: int32
          type: integer
          x-go-name: DecreaseCount
        expiration_ts:
          format: date-time
          type: string
          x-go-name: ExpirationTs
        extra_cost:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        extra_count:
          format: int32
          type: integer
          x-go-name: ExtraCount
        fcc_cancel_count:
          format: int32
          type: integer
          x-go-name: FccCancelCount
        is_yes:
          type: boolean
          x-go-name: IsYes
        last_update_op:
          type: string
          x-go-name: LastUpdateOperation
        maker_fill_count:
          format: int32
          type: integer
          x-go-name: MakerFillCount
        market_id:
          type: string
          x-go-name: MarketId
        order_id:
          format: uuid4
          type: string
          x-go-name: Id
        place_count:
          format: int32
          type: integer
          x-go-name: PlaceCount
        price:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        queue_position:
          format: int32
          type: integer
          x-go-name: QueuePosition
        remaining_count:
          format: int32
          type: integer
          x-go-name: RemainingCount
        status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        taker_fees:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        taker_fill_cost:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        taker_fill_count:
          format: int32
          type: integer
          x-go-name: TakerFillCount
        user_id:
          type: string
          x-go-name: UserId
      title: Order
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    OrderBook:
      description: |-
        OrderBook
        Contains the number of pending resting order for each price on a specific market.
      example:
        "no":
        - null
        - null
        "yes":
        - null
        - null
      properties:
        "no":
          items:
            $ref: '#/components/schemas/PriceLevel'
          type: array
          x-go-name: "No"
        "yes":
          items:
            $ref: '#/components/schemas/PriceLevel'
          type: array
          x-go-name: "Yes"
      required:
      - "no"
      - "yes"
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    OrderHistory:
      example:
        original_count: 2
        updated_at: 2000-01-23T04:56:07.000+00:00
        remaining_count: 7
        market_title: market_title
        price: 4
        created_at: 2000-01-23T04:56:07.000+00:00
        market_id: market_id
        fcc_canceled_count: 9
        canceled_count: 2
        filled_count: 3
        is_yes: true
        close_cancel_count: 7
      properties:
        canceled_count:
          format: int64
          type: integer
          x-go-name: CanceledCount
        close_cancel_count:
          format: int64
          type: integer
          x-go-name: CloseCancelCount
        created_at:
          format: date-time
          type: string
          x-go-name: CreatedAt
        fcc_canceled_count:
          format: int64
          type: integer
          x-go-name: FccCancelCount
        filled_count:
          format: int64
          type: integer
          x-go-name: FilledCount
        is_yes:
          type: boolean
          x-go-name: IsYes
        market_id:
          format: uuid4
          type: string
          x-go-name: MarketId
        market_title:
          type: string
          x-go-name: MarketTitle
        original_count:
          format: int64
          type: integer
          x-go-name: OriginalCount
        price:
          format: int64
          type: integer
          x-go-name: Price
        remaining_count:
          format: int64
          type: integer
          x-go-name: RemainingCount
        updated_at:
          format: date-time
          type: string
          x-go-name: UpdatedAt
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    OrderList:
      items:
        $ref: '#/components/schemas/Order'
      type: array
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    OrderStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/types
    PeopleReferred:
      example:
        time_of_referral_expiration: 2000-01-23T04:56:07.000+00:00
        referral_id: referral_id
        email: email
        stage_in_funnel: stage_in_funnel
      properties:
        email:
          type: string
          x-go-name: Email
        referral_id:
          type: string
          x-go-name: ReferralId
        stage_in_funnel:
          type: string
          x-go-name: StageInFunnel
        time_of_referral_expiration:
          format: date-time
          type: string
          x-go-name: TimeOfReferralExpiration
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    PeopleReferredList:
      items:
        $ref: '#/components/schemas/PeopleReferred'
      type: array
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    PortfolioMeasurement:
      description: Portfolio measurement is simply a snapshot of the portfolio of
        a user on a timestamp.
      example:
        cumulative_number_settlements: 1
        a: 0
        reasons:
        - reasons
        - reasons
        balance_changes:
        - null
        - null
        v: 2
        cumulative_deposits: 6
        cumulative_withdrawals: 5
        ts: 5
      properties:
        a:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        balance_changes:
          description: "Amount of the underlying balance change, if applicable, in\
            \ cents"
          items:
            $ref: '#/components/schemas/Cent'
          type: array
          x-go-name: BalanceChanges
        cumulative_deposits:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        cumulative_number_settlements:
          description: Count of settlements member has had from account creation to
            timestamp (inclusive)
          format: int64
          type: integer
          x-go-name: CumulativeNumberSettlements
        cumulative_withdrawals:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        reasons:
          description: "Reasons for the portfolio value change, if applicable"
          items:
            type: string
          type: array
          x-go-name: Reasons
        ts:
          description: Timestamp of the read in UNIX timestamp. (https://www.unixtimestamp.com/)
          format: int64
          type: integer
          x-go-name: MeasurementTs
        v:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      required:
      - a
      - cumulative_deposits
      - cumulative_number_settlements
      - cumulative_withdrawals
      - ts
      - v
      title: PortfolioMeasurement
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    PriceLevel:
      description: "PriceLevel\nIt is the state of a the market with respect to a\
        \ specific price.\nIt is represented as an array of 2 integer values.\nThe\
        \ first one is the price value and the second one is the total number of resting\
        \ contract at that price among all orders.\nMinimum length: 2\nMaximum length:\
        \ 2\nItems.0.Minimum: 1\nItems.0.Maximum: 99\nItems.1.Minimum: 0\nExample:\
        \ [30, 50] means there are 50 resting"
      items:
        format: int32
        type: integer
      type: array
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    PublicTrade:
      description: |-
        Represents a trade that can be displayed publicly. This does not include maker and taker information.

        A trade is created whenever an order is fully or partially matched.
      example:
        trade_id: trade_id
        price: 6
        count: 0
        market_id: market_id
        create_date: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          format: int32
          type: integer
          x-go-name: Count
        create_date:
          format: date-time
          type: string
          x-go-name: CreateDate
        market_id:
          format: uuid4
          type: string
          x-go-name: MarketId
        price:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        trade_id:
          format: uuid4
          type: string
          x-go-name: TradeId
      title: PublicTrade
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    PublicTradeList:
      items:
        $ref: '#/components/schemas/PublicTrade'
      type: array
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    RangedMarket:
      example:
        ticker: ticker
        mutually_exclusive_side: mutually_exclusive_side
        mini_title: mini_title
        id: id
        title: title
      properties:
        id:
          format: uuid4
          type: string
          x-go-name: Id
        mini_title:
          type: string
          x-go-name: MiniTitle
        mutually_exclusive_side:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        ticker:
          type: string
          x-go-name: Ticker
        title:
          type: string
          x-go-name: Title
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    RangedMarketPosition:
      example:
        user_id: user_id
        ranged_market_id: ranged_market_id
        market_positions:
        - resting_orders_count: 7
          volume: 3
          fees_paid: 0
          final_position_cost: 1
          total_cost: 9
          user_id: user_id
          position_cost: 5
          is_settled: true
          market_id: market_id
          realized_pnl: 2
          position: 5
          final_position: 6
        - resting_orders_count: 7
          volume: 3
          fees_paid: 0
          final_position_cost: 1
          total_cost: 9
          user_id: user_id
          position_cost: 5
          is_settled: true
          market_id: market_id
          realized_pnl: 2
          position: 5
          final_position: 6
        collateral_returned_cents: 0
      properties:
        collateral_returned_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        market_positions:
          items:
            $ref: '#/components/schemas/MarketPosition'
          type: array
          x-go-name: MarketPositions
        ranged_market_id:
          format: uuid4
          type: string
          x-go-name: RangedMarketId
        user_id:
          format: uuid4
          type: string
          x-go-name: UserId
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    ResetPasswordRequest:
      example:
        email: email
      properties:
        email:
          description: Email used to create your account
          format: email
          type: string
          x-go-name: Email
      required:
      - email
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Series:
      example:
        ticker: ticker
        first_open_date: 2000-01-23T04:56:07.000+00:00
        title: title
        frequency: frequency
      properties:
        first_open_date:
          format: date-time
          type: string
          x-go-name: FirstOpenDate
        frequency:
          type: string
          x-go-name: Frequency
        ticker:
          type: string
          x-go-name: Ticker
        title:
          type: string
          x-go-name: Title
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    SettlementHistory:
      example:
        market_title: market_title
        no_total_cost: 1
        settled_time: 2000-01-23T04:56:07.000+00:00
        yes_count: 6
        market_id: market_id
        market_result: market_result
        no_count: 1
        profit: 1
        determined_time: 2000-01-23T04:56:07.000+00:00
        yes_total_cost: 7
      properties:
        determined_time:
          format: date-time
          type: string
          x-go-name: DeterminedTime
        market_id:
          format: uuid4
          type: string
          x-go-name: MarketId
        market_result:
          type: string
          x-go-name: MarketResult
        market_title:
          type: string
          x-go-name: MarketTitle
        no_count:
          format: int64
          type: integer
          x-go-name: NoCount
        no_total_cost:
          format: int64
          type: integer
          x-go-name: NoTotalCost
        profit:
          format: int64
          type: integer
          x-go-name: Profit
        settled_time:
          format: date-time
          type: string
          x-go-name: SettledTime
        yes_count:
          format: int64
          type: integer
          x-go-name: YesCount
        yes_total_cost:
          format: int64
          type: integer
          x-go-name: YesTotalCost
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    SettlementSource:
      example:
        name: name
        url: url
      properties:
        name:
          type: string
          x-go-name: Name
        url:
          type: string
          x-go-name: Url
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Side:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
    SubscriptionPreference:
      example:
        subscription_level: subscription_level
        push_preferences:
        - push_preferences
        - push_preferences
      properties:
        push_preferences:
          items:
            type: string
          type: array
          x-go-name: PushPreferences
        subscription_level:
          type: string
          x-go-name: Preference
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    TradeHistory:
      example:
        amount: 1
        market_title: market_title
        price: 5
        fee: 4
        created_at: 2000-01-23T04:56:07.000+00:00
        market_id: market_id
        is_yes: true
      properties:
        amount:
          format: int64
          type: integer
          x-go-name: Amount
        created_at:
          format: date-time
          type: string
          x-go-name: CreatedAt
        fee:
          format: int64
          type: integer
          x-go-name: Fee
        is_yes:
          type: boolean
          x-go-name: IsYes
        market_id:
          format: uuid4
          type: string
          x-go-name: MarketId
        market_title:
          type: string
          x-go-name: MarketTitle
        price:
          format: int64
          type: integer
          x-go-name: Price
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    TradeStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/types
    TradesGetResponse:
      example:
        trades:
        - trade_id: trade_id
          price: 6
          count: 0
          market_id: market_id
          create_date: 2000-01-23T04:56:07.000+00:00
        - trade_id: trade_id
          price: 6
          count: 0
          market_id: market_id
          create_date: 2000-01-23T04:56:07.000+00:00
      properties:
        trades:
          items:
            $ref: '#/components/schemas/PublicTrade'
          type: array
          x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
      required:
      - trades
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    User:
      description: Represents a user's profile on the api.
      example:
        country: country
        city: city
        area_code: area_code
        birth_date: birth_date
        finished_fre: true
        last_name: last_name
        use_bid_ask: true
        country_code: country_code
        wire_code: wire_code
        created_ts: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        phone_number: phone_number
        street1: street1
        state: state
        street2: street2
        postal_code: postal_code
        first_name: first_name
        watchlist:
        - watchlist
        - watchlist
        email: email
      properties:
        area_code:
          type: string
          x-go-name: AreaCode
        birth_date:
          type: string
          x-go-name: BirthDate
        city:
          type: string
          x-go-name: City
        country:
          type: string
          x-go-name: Country
        country_code:
          type: string
          x-go-name: CountryCode
        created_ts:
          format: date-time
          type: string
          x-go-name: CreatedTs
        email:
          type: string
          x-go-name: Email
        finished_fre:
          type: boolean
          x-go-name: FinishedFre
        first_name:
          type: string
          x-go-name: FirstName
        last_name:
          type: string
          x-go-name: LastName
        phone_number:
          type: string
          x-go-name: PhoneNumber
        postal_code:
          type: string
          x-go-name: PostalCode
        state:
          type: string
          x-go-name: State
        street1:
          type: string
          x-go-name: Street1
        street2:
          type: string
          x-go-name: Street2
        use_bid_ask:
          type: boolean
          x-go-name: UseBidAsk
        user_id:
          format: uuid4
          type: string
          x-go-name: UserId
        watchlist:
          items:
            type: string
          type: array
          x-go-name: Watchlist
        wire_code:
          type: string
          x-go-name: WireCode
      title: User
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCancelRequest:
      description: Request for cancelling a batch of orders
      example:
        ids:
        - ids
        - ids
      properties:
        ids:
          description: An array of order IDs to cancel
          items:
            format: uuid4
            type: string
          type: array
          x-go-name: OrderIds
      required:
      - ids
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCancelResponse:
      example:
        orders:
        - reduced_by: 0
          id: id
          error:
            code: code
            service: service
            details: details
            message: message
          order:
            queue_position: 3
            remaining_count: 2
            create_ts: 2000-01-23T04:56:07.000+00:00
            decrease_count: 6
            taker_fill_cost: 7
            market_id: market_id
            close_cancel_count: 0
            extra_count: 5
            expiration_ts: 2000-01-23T04:56:07.000+00:00
            place_count: 7
            taker_fill_count: 1
            user_id: user_id
            price: 9
            extra_cost: 1
            last_update_op: last_update_op
            taker_fees: 4
            fcc_cancel_count: 5
            maker_fill_count: 2
            is_yes: true
            order_id: order_id
            status: status
        - reduced_by: 0
          id: id
          error:
            code: code
            service: service
            details: details
            message: message
          order:
            queue_position: 3
            remaining_count: 2
            create_ts: 2000-01-23T04:56:07.000+00:00
            decrease_count: 6
            taker_fill_cost: 7
            market_id: market_id
            close_cancel_count: 0
            extra_count: 5
            expiration_ts: 2000-01-23T04:56:07.000+00:00
            place_count: 7
            taker_fill_count: 1
            user_id: user_id
            price: 9
            extra_cost: 1
            last_update_op: last_update_op
            taker_fees: 4
            fcc_cancel_count: 5
            maker_fill_count: 2
            is_yes: true
            order_id: order_id
            status: status
      properties:
        orders:
          description: An array of responses corresponding to the orders in the request.
          items:
            $ref: '#/components/schemas/UserBatchOrdersCancelSingleOrderResponse'
          type: array
          x-go-name: Orders
      required:
      - orders
      title: Response for cancelling a batch of orders.
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCancelSingleOrderResponse:
      description: Response for cancelling a batch of orders
      example:
        reduced_by: 0
        id: id
        error:
          code: code
          service: service
          details: details
          message: message
        order:
          queue_position: 3
          remaining_count: 2
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: 7
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 1
          user_id: user_id
          price: 9
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: 4
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
      properties:
        error:
          $ref: '#/components/schemas/JSONError'
        id:
          description: ID of the order
          type: string
          x-go-name: Id
        order:
          $ref: '#/components/schemas/Order'
        reduced_by:
          description: Result of the decrease operation
          format: int32
          type: integer
          x-go-name: ReducedBy
      required:
      - id
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCreateRequest:
      description: Request for submitting a batch of orders
      example:
        orders:
        - max_cost_cents: 1
          side: side
          expiration_unix_ts: 6
          price: 5
          count: 0
          market_id: market_id
          sell_position_capped: true
        - max_cost_cents: 1
          side: side
          expiration_unix_ts: 6
          price: 5
          count: 0
          market_id: market_id
          sell_position_capped: true
      properties:
        orders:
          description: An array of individual orders to place
          items:
            $ref: '#/components/schemas/UserOrderCreateRequest'
          type: array
          x-go-name: Orders
      required:
      - orders
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCreateResponse:
      description: Response for submitting a batch of order
      example:
        orders:
        - error:
            code: code
            service: service
            details: details
            message: message
          order:
            queue_position: 3
            remaining_count: 2
            create_ts: 2000-01-23T04:56:07.000+00:00
            decrease_count: 6
            taker_fill_cost: 7
            market_id: market_id
            close_cancel_count: 0
            extra_count: 5
            expiration_ts: 2000-01-23T04:56:07.000+00:00
            place_count: 7
            taker_fill_count: 1
            user_id: user_id
            price: 9
            extra_cost: 1
            last_update_op: last_update_op
            taker_fees: 4
            fcc_cancel_count: 5
            maker_fill_count: 2
            is_yes: true
            order_id: order_id
            status: status
          status: status
        - error:
            code: code
            service: service
            details: details
            message: message
          order:
            queue_position: 3
            remaining_count: 2
            create_ts: 2000-01-23T04:56:07.000+00:00
            decrease_count: 6
            taker_fill_cost: 7
            market_id: market_id
            close_cancel_count: 0
            extra_count: 5
            expiration_ts: 2000-01-23T04:56:07.000+00:00
            place_count: 7
            taker_fill_count: 1
            user_id: user_id
            price: 9
            extra_cost: 1
            last_update_op: last_update_op
            taker_fees: 4
            fcc_cancel_count: 5
            maker_fill_count: 2
            is_yes: true
            order_id: order_id
            status: status
          status: status
      properties:
        orders:
          description: An array of responses corresponding to orders in the request.
          items:
            $ref: '#/components/schemas/UserBatchOrdersCreateSingleOrderResponse'
          type: array
          x-go-name: Orders
      required:
      - orders
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserBatchOrdersCreateSingleOrderResponse:
      description: Response for submitting an order
      example:
        error:
          code: code
          service: service
          details: details
          message: message
        order:
          queue_position: 3
          remaining_count: 2
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: 7
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 1
          user_id: user_id
          price: 9
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: 4
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
        status: status
      properties:
        error:
          $ref: '#/components/schemas/JSONError'
        order:
          $ref: '#/components/schemas/Order'
        status:
          description: Status of the order submit operation
          type: string
          x-go-name: Status
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserChangePasswordRequest:
      example:
        old_password: old_password
        new_password: new_password
      properties:
        new_password:
          description: New password value.
          format: password
          type: string
          x-go-name: NewPassword
        old_password:
          description: Old password should be passed as a validation parameter.
          format: password
          type: string
          x-go-name: OldPassword
      required:
      - new_password
      - old_password
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserDepositRequest:
      properties:
        amount_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        bank_id:
          type: string
          x-go-name: BankId
        fee_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      required:
      - amount_cents
      - bank_id
      - fee_cents
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserDepositResponse:
      properties:
        deposit:
          $ref: '#/components/schemas/Deposit'
        deposit_id:
          description: Id for the deposit that was created.
          type: string
          x-go-name: DepositId
        estimated_ach_time_days:
          description: The estimated number of days we believe the ach transfer will
            take
          format: int32
          type: integer
          x-go-name: EstimatedAchTimeDays
      required:
      - deposit_id
      - estimated_ach_time_days
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetAccountHistoryResponse:
      example:
        entries:
        - data:
            Order:
              original_count: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              remaining_count: 7
              market_title: market_title
              price: 4
              created_at: 2000-01-23T04:56:07.000+00:00
              market_id: market_id
              fcc_canceled_count: 9
              canceled_count: 2
              filled_count: 3
              is_yes: true
              close_cancel_count: 7
            Deposit:
              amount: 6
              returned_amount: 5
              updated_at: 2000-01-23T04:56:07.000+00:00
              fee: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              immediate_status: immediate_status
              deposit_type: deposit_type
              immediate_amount: 5
              status: status
            Settlement:
              market_title: market_title
              no_total_cost: 1
              settled_time: 2000-01-23T04:56:07.000+00:00
              yes_count: 6
              market_id: market_id
              market_result: market_result
              no_count: 1
              profit: 1
              determined_time: 2000-01-23T04:56:07.000+00:00
              yes_total_cost: 7
            Trade:
              amount: 1
              market_title: market_title
              price: 5
              fee: 4
              created_at: 2000-01-23T04:56:07.000+00:00
              market_id: market_id
              is_yes: true
            Credit:
              reason: reason
              amount_cents: 0
              created_at: 2000-01-23T04:56:07.000+00:00
              type: type
              status: status
            Withdrawal:
              amount: 9
              returned_amount: 6
              updated_at: 2000-01-23T04:56:07.000+00:00
              fee: 9
              created_at: 2000-01-23T04:56:07.000+00:00
              status: status
          type: type
        - data:
            Order:
              original_count: 2
              updated_at: 2000-01-23T04:56:07.000+00:00
              remaining_count: 7
              market_title: market_title
              price: 4
              created_at: 2000-01-23T04:56:07.000+00:00
              market_id: market_id
              fcc_canceled_count: 9
              canceled_count: 2
              filled_count: 3
              is_yes: true
              close_cancel_count: 7
            Deposit:
              amount: 6
              returned_amount: 5
              updated_at: 2000-01-23T04:56:07.000+00:00
              fee: 1
              created_at: 2000-01-23T04:56:07.000+00:00
              immediate_status: immediate_status
              deposit_type: deposit_type
              immediate_amount: 5
              status: status
            Settlement:
              market_title: market_title
              no_total_cost: 1
              settled_time: 2000-01-23T04:56:07.000+00:00
              yes_count: 6
              market_id: market_id
              market_result: market_result
              no_count: 1
              profit: 1
              determined_time: 2000-01-23T04:56:07.000+00:00
              yes_total_cost: 7
            Trade:
              amount: 1
              market_title: market_title
              price: 5
              fee: 4
              created_at: 2000-01-23T04:56:07.000+00:00
              market_id: market_id
              is_yes: true
            Credit:
              reason: reason
              amount_cents: 0
              created_at: 2000-01-23T04:56:07.000+00:00
              type: type
              status: status
            Withdrawal:
              amount: 9
              returned_amount: 6
              updated_at: 2000-01-23T04:56:07.000+00:00
              fee: 9
              created_at: 2000-01-23T04:56:07.000+00:00
              status: status
          type: type
      properties:
        entries:
          description: List of account history items for the user
          items:
            $ref: '#/components/schemas/AccountHistoryEntry'
          type: array
          x-go-name: Entries
      required:
      - entries
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetBalanceResponse:
      example:
        balance: 0
      properties:
        balance:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      required:
      - balance
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetCurrentPortfolioValueResponse:
      properties:
        value:
          $ref: '#/components/schemas/PortfolioMeasurement'
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetFavoritedSeriesResponse:
      example:
        favorited_series:
          series_tickers:
          - series_tickers
          - series_tickers
      properties:
        favorited_series:
          $ref: '#/components/schemas/FavoritedSeries'
      required:
      - favorited_series
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetMarketPositionResponse:
      example:
        market_position:
          resting_orders_count: 7
          volume: 3
          fees_paid: 0
          final_position_cost: 1
          total_cost: 9
          user_id: user_id
          position_cost: 5
          is_settled: true
          market_id: market_id
          realized_pnl: 2
          position: 5
          final_position: 6
      properties:
        market_position:
          $ref: '#/components/schemas/MarketPosition'
      required:
      - market_position
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetMarketPositionsResponse:
      example:
        market_positions:
        - resting_orders_count: 7
          volume: 3
          fees_paid: 0
          final_position_cost: 1
          total_cost: 9
          user_id: user_id
          position_cost: 5
          is_settled: true
          market_id: market_id
          realized_pnl: 2
          position: 5
          final_position: 6
        - resting_orders_count: 7
          volume: 3
          fees_paid: 0
          final_position_cost: 1
          total_cost: 9
          user_id: user_id
          position_cost: 5
          is_settled: true
          market_id: market_id
          realized_pnl: 2
          position: 5
          final_position: 6
      properties:
        market_positions:
          description: List of market positions
          items:
            $ref: '#/components/schemas/MarketPosition'
          type: array
          x-go-name: Positions
      required:
      - market_positions
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetMarketResponse:
      example:
        market:
          expiration_value: expiration_value
          dollar_recent_volume: 6
          ticker_name: ticker_name
          close_date: 2000-01-23T04:56:07.000+00:00
          rulebook_variables:
            key: rulebook_variables
          dollar_volume: 1
          mini_title: mini_title
          open_interest: 7
          yes_bid: 1
          description_context: description_context
          liquidity: 2
          expiration_date: 2000-01-23T04:56:07.000+00:00
          title: title
          yes_ask: 1
          result: result
          original_expiration_date: 2000-01-23T04:56:07.000+00:00
          ranged_group_name: ranged_group_name
          settle_details: settle_details
          recent_volume: 4
          id: id
          close_unconfirmed: true
          create_date: 2000-01-23T04:56:07.000+00:00
          strike_price: 7.386281948385884
          open_date: 2000-01-23T04:56:07.000+00:00
          previous_yes_bid: 2
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          previous_yes_ask: 3
          can_close_early: true
          image_url: image_url
          option_type: option_type
          underlying: underlying
          min_tick_size: min_tick_size
          list_date: 2000-01-23T04:56:07.000+00:00
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          description_case_no: description_case_no
          tags:
          - tags
          - tags
          ranged_group_ticker: ranged_group_ticker
          volume: 1
          description_case_yes: description_case_yes
          dollar_open_interest: 0
          category: category
          frequency_in_days: 5
          previous_price: 9
          last_price: 5
          status: status
      properties:
        market:
          $ref: '#/components/schemas/Market'
      required:
      - market
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetMarketsResponse:
      example:
        markets:
        - expiration_value: expiration_value
          dollar_recent_volume: 6
          ticker_name: ticker_name
          close_date: 2000-01-23T04:56:07.000+00:00
          rulebook_variables:
            key: rulebook_variables
          dollar_volume: 1
          mini_title: mini_title
          open_interest: 7
          yes_bid: 1
          description_context: description_context
          liquidity: 2
          expiration_date: 2000-01-23T04:56:07.000+00:00
          title: title
          yes_ask: 1
          result: result
          original_expiration_date: 2000-01-23T04:56:07.000+00:00
          ranged_group_name: ranged_group_name
          settle_details: settle_details
          recent_volume: 4
          id: id
          close_unconfirmed: true
          create_date: 2000-01-23T04:56:07.000+00:00
          strike_price: 7.386281948385884
          open_date: 2000-01-23T04:56:07.000+00:00
          previous_yes_bid: 2
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          previous_yes_ask: 3
          can_close_early: true
          image_url: image_url
          option_type: option_type
          underlying: underlying
          min_tick_size: min_tick_size
          list_date: 2000-01-23T04:56:07.000+00:00
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          description_case_no: description_case_no
          tags:
          - tags
          - tags
          ranged_group_ticker: ranged_group_ticker
          volume: 1
          description_case_yes: description_case_yes
          dollar_open_interest: 0
          category: category
          frequency_in_days: 5
          previous_price: 9
          last_price: 5
          status: status
        - expiration_value: expiration_value
          dollar_recent_volume: 6
          ticker_name: ticker_name
          close_date: 2000-01-23T04:56:07.000+00:00
          rulebook_variables:
            key: rulebook_variables
          dollar_volume: 1
          mini_title: mini_title
          open_interest: 7
          yes_bid: 1
          description_context: description_context
          liquidity: 2
          expiration_date: 2000-01-23T04:56:07.000+00:00
          title: title
          yes_ask: 1
          result: result
          original_expiration_date: 2000-01-23T04:56:07.000+00:00
          ranged_group_name: ranged_group_name
          settle_details: settle_details
          recent_volume: 4
          id: id
          close_unconfirmed: true
          create_date: 2000-01-23T04:56:07.000+00:00
          strike_price: 7.386281948385884
          open_date: 2000-01-23T04:56:07.000+00:00
          previous_yes_bid: 2
          sub_title: sub_title
          metrics_tags:
          - metrics_tags
          - metrics_tags
          previous_yes_ask: 3
          can_close_early: true
          image_url: image_url
          option_type: option_type
          underlying: underlying
          min_tick_size: min_tick_size
          list_date: 2000-01-23T04:56:07.000+00:00
          settlement_sources:
          - name: name
            url: url
          - name: name
            url: url
          description_case_no: description_case_no
          tags:
          - tags
          - tags
          ranged_group_ticker: ranged_group_ticker
          volume: 1
          description_case_yes: description_case_yes
          dollar_open_interest: 0
          category: category
          frequency_in_days: 5
          previous_price: 9
          last_price: 5
          status: status
      properties:
        markets:
          items:
            $ref: '#/components/schemas/Market'
          type: array
          x-go-name: Markets
      required:
      - markets
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetNotificationsResponse:
      example:
        notifications:
        - is_read: true
          created_ts: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          is_delivered: true
          link: link
          id: id
          type: type
          content:
            key: "{}"
        - is_read: true
          created_ts: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          is_delivered: true
          link: link
          id: id
          type: type
          content:
            key: "{}"
      properties:
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
          x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
      required:
      - notifications
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetProfileResponse:
      example:
        user:
          country: country
          city: city
          area_code: area_code
          birth_date: birth_date
          finished_fre: true
          last_name: last_name
          use_bid_ask: true
          country_code: country_code
          wire_code: wire_code
          created_ts: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          phone_number: phone_number
          street1: street1
          state: state
          street2: street2
          postal_code: postal_code
          first_name: first_name
          watchlist:
          - watchlist
          - watchlist
          email: email
      properties:
        user:
          $ref: '#/components/schemas/User'
      required:
      - user
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetProfitsAndLossesResponse:
      example:
        market_transactions:
        - is_side_yes: true
          average_price_cents: 0
          num_contracts: 1
          market_title: market_title
          realized_fifo_profit_cents: 5
          market_id: market_id
          time: 2000-01-23T04:56:07.000+00:00
          realized_cost_of_contracts_cents: 5
          realized_revenue_cents: 2
          type: type
          fee_cents: 6
          market_ticker: market_ticker
        - is_side_yes: true
          average_price_cents: 0
          num_contracts: 1
          market_title: market_title
          realized_fifo_profit_cents: 5
          market_id: market_id
          time: 2000-01-23T04:56:07.000+00:00
          realized_cost_of_contracts_cents: 5
          realized_revenue_cents: 2
          type: type
          fee_cents: 6
          market_ticker: market_ticker
        pnl_without_fees_cents: 9
        pnl_with_fees_cents: 7
      properties:
        market_transactions:
          description: "User market transactions (trades and settlements)\n\nin: body"
          items:
            $ref: '#/components/schemas/MarketTransaction'
          type: array
          x-go-name: MarketTransactions
        pnl_with_fees_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        pnl_without_fees_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetRangedMarketPositionResponse:
      example:
        ranged_market_position:
          user_id: user_id
          ranged_market_id: ranged_market_id
          market_positions:
          - resting_orders_count: 7
            volume: 3
            fees_paid: 0
            final_position_cost: 1
            total_cost: 9
            user_id: user_id
            position_cost: 5
            is_settled: true
            market_id: market_id
            realized_pnl: 2
            position: 5
            final_position: 6
          - resting_orders_count: 7
            volume: 3
            fees_paid: 0
            final_position_cost: 1
            total_cost: 9
            user_id: user_id
            position_cost: 5
            is_settled: true
            market_id: market_id
            realized_pnl: 2
            position: 5
            final_position: 6
          collateral_returned_cents: 0
      properties:
        ranged_market_position:
          $ref: '#/components/schemas/RangedMarketPosition'
      required:
      - ranged_market_position
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetReferralInfoResponse:
      example:
        referral_money_rewarded: 6
        eligible_to_refer: true
        num_contracts_traded: 0
        referral_code: referral_code
        referral_id: referral_id
        people_referred:
        - time_of_referral_expiration: 2000-01-23T04:56:07.000+00:00
          referral_id: referral_id
          email: email
          stage_in_funnel: stage_in_funnel
        - time_of_referral_expiration: 2000-01-23T04:56:07.000+00:00
          referral_id: referral_id
          email: email
          stage_in_funnel: stage_in_funnel
        stage_in_funnel: stage_in_funnel
      properties:
        eligible_to_refer:
          type: boolean
          x-go-name: EligibleToRefer
        num_contracts_traded:
          format: int64
          type: integer
          x-go-name: NumContractsTraded
        people_referred:
          items:
            $ref: '#/components/schemas/PeopleReferred'
          type: array
          x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
        referral_code:
          type: string
          x-go-name: ReferralCode
        referral_id:
          type: string
          x-go-name: ReferralId
        referral_money_rewarded:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        stage_in_funnel:
          type: string
          x-go-name: StageInFunnel
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetSampledPortfolioHistoryResponse:
      example:
        values:
        - cumulative_number_settlements: 1
          a: 0
          reasons:
          - reasons
          - reasons
          balance_changes:
          - null
          - null
          v: 2
          cumulative_deposits: 6
          cumulative_withdrawals: 5
          ts: 5
        - cumulative_number_settlements: 1
          a: 0
          reasons:
          - reasons
          - reasons
          balance_changes:
          - null
          - null
          v: 2
          cumulative_deposits: 6
          cumulative_withdrawals: 5
          ts: 5
      properties:
        values:
          items:
            $ref: '#/components/schemas/PortfolioMeasurement'
          type: array
          x-go-name: Values
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserGetWatchlistResponse:
      example:
        watchlist:
          market_ids:
          - market_ids
          - market_ids
      properties:
        watchlist:
          $ref: '#/components/schemas/Watchlist'
      required:
      - watchlist
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserListLedgerxBankAccountsResponse:
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/BankAccountDetails'
          type: array
          x-go-name: Accounts
      required:
      - accounts
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserOrderCreateRequest:
      description: Request for submitting an order
      example:
        max_cost_cents: 1
        side: side
        expiration_unix_ts: 6
        price: 5
        count: 0
        market_id: market_id
        sell_position_capped: true
      properties:
        count:
          description: Specifies how many contracts should be bought
          format: int32
          type: integer
          x-go-name: Count
        expiration_unix_ts:
          description: "Specifies the expiration time of the order, in unix seconds.\
            \  If this is not supplied, or is 0, the order won't expire."
          format: int64
          type: integer
          x-go-name: ExpirationUnix
        market_id:
          description: Specifies the id of the market for this order
          format: uuid4
          type: string
          x-go-name: MarketId
        max_cost_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        price:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        sell_position_capped:
          description: Specifies whether the order place count should be capped by
            the members current position.
          type: boolean
          x-go-name: SellPositionCapped
        side:
          description: Specifies if this is a 'yes' or 'no' order
          type: string
          x-go-name: Side
      required:
      - count
      - market_id
      - price
      - side
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserOrderCreateResponse:
      description: Response for submitting an order
      example:
        order:
          queue_position: 3
          remaining_count: 2
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: 7
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 1
          user_id: user_id
          price: 9
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: 4
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
        status: status
      properties:
        order:
          $ref: '#/components/schemas/Order'
        status:
          description: Status of the order submit operation
          type: string
          x-go-name: Status
      required:
      - order
      - status
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserOrderDecreaseRequest:
      example:
        count: 0
      properties:
        count:
          format: int32
          type: integer
          x-go-name: Count
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserOrderDecreaseResponse:
      example:
        reduced_by: 0
        order:
          queue_position: 3
          remaining_count: 2
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: 7
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 1
          user_id: user_id
          price: 9
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: 4
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
      properties:
        order:
          $ref: '#/components/schemas/Order'
        reduced_by:
          description: Result of the decrease operation
          format: int32
          type: integer
          x-go-name: ReducedBy
      required:
      - order
      - reduced_by
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserOrdersGetResponse:
      example:
        orders:
        - queue_position: 3
          remaining_count: 2
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: 7
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 1
          user_id: user_id
          price: 9
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: 4
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
        - queue_position: 3
          remaining_count: 2
          create_ts: 2000-01-23T04:56:07.000+00:00
          decrease_count: 6
          taker_fill_cost: 7
          market_id: market_id
          close_cancel_count: 0
          extra_count: 5
          expiration_ts: 2000-01-23T04:56:07.000+00:00
          place_count: 7
          taker_fill_count: 1
          user_id: user_id
          price: 9
          extra_cost: 1
          last_update_op: last_update_op
          taker_fees: 4
          fcc_cancel_count: 5
          maker_fill_count: 2
          is_yes: true
          order_id: order_id
          status: status
      properties:
        orders:
          items:
            $ref: '#/components/schemas/Order'
          type: array
          x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
      required:
      - orders
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserTrade:
      description: "Represents a trade from the user perspective.\n\nA trade is created\
        \ whenever an order is fully or partially matched, so there can be multiple\
        \ trades with the same order_id.\nIt is guaranteed that the sum of the count\
        \ field for all the trades with the same order_id field shouldn't exceed the\
        \ place_count on the order."
      example:
        is_taker: true
        price: 6
        count: 0
        market_id: market_id
        id: id
        create_date: 2000-01-23T04:56:07.000+00:00
        is_yes: true
        order_id: order_id
        status: status
      properties:
        count:
          format: int32
          type: integer
          x-go-name: Count
        create_date:
          format: date-time
          type: string
          x-go-name: CreateDate
        id:
          format: uuid4
          type: string
          x-go-name: Id
        is_taker:
          type: boolean
          x-go-name: IsTaker
        is_yes:
          type: boolean
          x-go-name: IsYes
        market_id:
          format: uuid4
          type: string
          x-go-name: MarketId
        order_id:
          format: uuid4
          type: string
          x-go-name: OrderId
        price:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      title: UserTrade
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserTradeList:
      items:
        $ref: '#/components/schemas/UserTrade'
      type: array
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserTradesGetResponse:
      example:
        trades:
        - is_taker: true
          price: 6
          count: 0
          market_id: market_id
          id: id
          create_date: 2000-01-23T04:56:07.000+00:00
          is_yes: true
          order_id: order_id
          status: status
        - is_taker: true
          price: 6
          count: 0
          market_id: market_id
          id: id
          create_date: 2000-01-23T04:56:07.000+00:00
          is_yes: true
          order_id: order_id
          status: status
      properties:
        trades:
          items:
            $ref: '#/components/schemas/UserTrade'
          type: array
          x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
      required:
      - trades
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserUpdateProfileRequest:
      properties:
        area_code:
          description: User's phone area code.
          example: "022"
          maxLength: 3
          minLength: 3
          type: string
          x-go-name: AreaCode
        birth_date:
          type: string
          x-go-name: BirthDate
        city:
          type: string
          x-go-name: City
        country:
          description: User's country 2 digits code
          example: US
          maxLength: 2
          minLength: 2
          type: string
          x-go-name: Country
        country_code:
          description: User's phone country code. Should be 1 for now because only
            USA accounts are accepted.
          example: "1"
          maxLength: 1
          minLength: 1
          type: string
          x-go-name: CountryCode
        finished_fre:
          type: boolean
          x-go-name: FinishedFre
        first_name:
          type: string
          x-go-name: FirstName
        last_name:
          type: string
          x-go-name: LastName
        phone_number:
          description: User's phone number.
          example: "4759128"
          maxLength: 7
          minLength: 7
          type: string
          x-go-name: PhoneNumber
        postal_code:
          description: User's address postal code
          example: "92044"
          maxLength: 5
          minLength: 5
          type: string
          x-go-name: PostalCode
        state:
          description: User's state 2 digits code
          example: NY
          maxLength: 2
          minLength: 2
          type: string
          x-go-name: State
        street1:
          type: string
          x-go-name: Street1
        street2:
          type: string
          x-go-name: Street2
        use_bid_ask:
          type: boolean
          x-go-name: UseBidAsk
        watchlist:
          items:
            type: string
          type: array
          x-go-name: Watchlist
      required:
      - area_code
      - country
      - country_code
      - phone_number
      - postal_code
      - state
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserWithdrawalAvailableBalanceResponse:
      example:
        available_balance_cents: 0
        withdrawal_fee_cents: 6
      properties:
        available_balance_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        withdrawal_fee_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      required:
      - available_balance_cents
      - withdrawal_fee_cents
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserWithdrawalRequest:
      properties:
        amount_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        bank_id:
          type: string
          x-go-name: BankId
        fee_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
      required:
      - amount_cents
      - bank_id
      - fee_cents
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    UserWithdrawalResponse:
      properties:
        withdrawal:
          $ref: '#/components/schemas/Withdrawal'
        withdrawal_id:
          description: Id for the withdrawal that was created.
          type: string
          x-go-name: WithdrawalId
      required:
      - withdrawal_id
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Watchlist:
      description: "Watchlist is the list of markets that you have some activity on,\
        \ this is used mostly by the UI."
      example:
        market_ids:
        - market_ids
        - market_ids
      properties:
        market_ids:
          items:
            type: string
          type: array
          x-go-name: MarketIds
      title: Watchlist
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    Withdrawal:
      description: Represents a withdrawal.
      properties:
        amount_cents:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        bank_id:
          type: string
          x-go-name: BankId
        created_ts:
          format: date-time
          type: string
          x-go-name: CreatedTs
        id:
          type: string
          x-go-name: Id
        return_code:
          type: string
          x-go-name: ReturnCode
        return_reason:
          type: string
          x-go-name: ReturnReason
        status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        user_id:
          type: string
          x-go-name: UserId
      title: Withdrawal
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    WithdrawalHistory:
      example:
        amount: 9
        returned_amount: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        fee: 9
        created_at: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        amount:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        created_at:
          format: date-time
          type: string
          x-go-name: CreatedAt
        fee:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        returned_amount:
          format: int64
          type: integer
          x-go-package: github.com/Kalshi/exchange-infra/common/types
        status:
          type: string
          x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
        updated_at:
          format: date-time
          type: string
          x-go-name: UpdatedAt
      type: object
      x-go-package: github.com/Kalshi/exchange-infra/svc-api/model
    WithdrawalStatus:
      type: string
      x-go-package: github.com/Kalshi/exchange-infra/common/unimodel
  securitySchemes:
    cookie:
      in: header
      name: Authorization
      type: apiKey
