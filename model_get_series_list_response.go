/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// GetSeriesListResponse struct for GetSeriesListResponse
type GetSeriesListResponse struct {
	Series []Series `json:"series,omitempty"`
}

// NewGetSeriesListResponse instantiates a new GetSeriesListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSeriesListResponse() *GetSeriesListResponse {
	this := GetSeriesListResponse{}
	return &this
}

// NewGetSeriesListResponseWithDefaults instantiates a new GetSeriesListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSeriesListResponseWithDefaults() *GetSeriesListResponse {
	this := GetSeriesListResponse{}
	return &this
}

// GetSeries returns the Series field value if set, zero value otherwise.
func (o *GetSeriesListResponse) GetSeries() []Series {
	if o == nil || o.Series == nil {
		var ret []Series
		return ret
	}
	return o.Series
}

// GetSeriesOk returns a tuple with the Series field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSeriesListResponse) GetSeriesOk() ([]Series, bool) {
	if o == nil || o.Series == nil {
		return nil, false
	}
	return o.Series, true
}

// HasSeries returns a boolean if a field has been set.
func (o *GetSeriesListResponse) HasSeries() bool {
	if o != nil && o.Series != nil {
		return true
	}

	return false
}

// SetSeries gets a reference to the given []Series and assigns it to the Series field.
func (o *GetSeriesListResponse) SetSeries(v []Series) {
	o.Series = v
}

func (o GetSeriesListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Series != nil {
		toSerialize["series"] = o.Series
	}
	return json.Marshal(toSerialize)
}

type NullableGetSeriesListResponse struct {
	value *GetSeriesListResponse
	isSet bool
}

func (v NullableGetSeriesListResponse) Get() *GetSeriesListResponse {
	return v.value
}

func (v *NullableGetSeriesListResponse) Set(val *GetSeriesListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSeriesListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSeriesListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSeriesListResponse(val *GetSeriesListResponse) *NullableGetSeriesListResponse {
	return &NullableGetSeriesListResponse{value: val, isSet: true}
}

func (v NullableGetSeriesListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSeriesListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


