/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// GetEventsResponse struct for GetEventsResponse
type GetEventsResponse struct {
	Events []EventData `json:"events"`
}

// NewGetEventsResponse instantiates a new GetEventsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEventsResponse(events []EventData) *GetEventsResponse {
	this := GetEventsResponse{}
	this.Events = events
	return &this
}

// NewGetEventsResponseWithDefaults instantiates a new GetEventsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEventsResponseWithDefaults() *GetEventsResponse {
	this := GetEventsResponse{}
	return &this
}

// GetEvents returns the Events field value
func (o *GetEventsResponse) GetEvents() []EventData {
	if o == nil {
		var ret []EventData
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *GetEventsResponse) GetEventsOk() ([]EventData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *GetEventsResponse) SetEvents(v []EventData) {
	o.Events = v
}

func (o GetEventsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["events"] = o.Events
	}
	return json.Marshal(toSerialize)
}

type NullableGetEventsResponse struct {
	value *GetEventsResponse
	isSet bool
}

func (v NullableGetEventsResponse) Get() *GetEventsResponse {
	return v.value
}

func (v *NullableGetEventsResponse) Set(val *GetEventsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEventsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEventsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEventsResponse(val *GetEventsResponse) *NullableGetEventsResponse {
	return &NullableGetEventsResponse{value: val, isSet: true}
}

func (v NullableGetEventsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEventsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


