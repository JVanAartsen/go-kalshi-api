/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
	"time"
)

// Deposit Represents a deposit.
type Deposit struct {
	AmountCents *int64 `json:"amount_cents,omitempty"`
	BankId *string `json:"bank_id,omitempty"`
	CreatedTs *time.Time `json:"created_ts,omitempty"`
	DepositType *string `json:"deposit_type,omitempty"`
	Id *string `json:"id,omitempty"`
	ImmediateAmount *int64 `json:"immediate_amount,omitempty"`
	ImmediateStatus *string `json:"immediate_status,omitempty"`
	ReturnCode *string `json:"return_code,omitempty"`
	ReturnReason *string `json:"return_reason,omitempty"`
	Status *string `json:"status,omitempty"`
	UserId *string `json:"user_id,omitempty"`
}

// NewDeposit instantiates a new Deposit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeposit() *Deposit {
	this := Deposit{}
	return &this
}

// NewDepositWithDefaults instantiates a new Deposit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositWithDefaults() *Deposit {
	this := Deposit{}
	return &this
}

// GetAmountCents returns the AmountCents field value if set, zero value otherwise.
func (o *Deposit) GetAmountCents() int64 {
	if o == nil || o.AmountCents == nil {
		var ret int64
		return ret
	}
	return *o.AmountCents
}

// GetAmountCentsOk returns a tuple with the AmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetAmountCentsOk() (*int64, bool) {
	if o == nil || o.AmountCents == nil {
		return nil, false
	}
	return o.AmountCents, true
}

// HasAmountCents returns a boolean if a field has been set.
func (o *Deposit) HasAmountCents() bool {
	if o != nil && o.AmountCents != nil {
		return true
	}

	return false
}

// SetAmountCents gets a reference to the given int64 and assigns it to the AmountCents field.
func (o *Deposit) SetAmountCents(v int64) {
	o.AmountCents = &v
}

// GetBankId returns the BankId field value if set, zero value otherwise.
func (o *Deposit) GetBankId() string {
	if o == nil || o.BankId == nil {
		var ret string
		return ret
	}
	return *o.BankId
}

// GetBankIdOk returns a tuple with the BankId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetBankIdOk() (*string, bool) {
	if o == nil || o.BankId == nil {
		return nil, false
	}
	return o.BankId, true
}

// HasBankId returns a boolean if a field has been set.
func (o *Deposit) HasBankId() bool {
	if o != nil && o.BankId != nil {
		return true
	}

	return false
}

// SetBankId gets a reference to the given string and assigns it to the BankId field.
func (o *Deposit) SetBankId(v string) {
	o.BankId = &v
}

// GetCreatedTs returns the CreatedTs field value if set, zero value otherwise.
func (o *Deposit) GetCreatedTs() time.Time {
	if o == nil || o.CreatedTs == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedTs
}

// GetCreatedTsOk returns a tuple with the CreatedTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetCreatedTsOk() (*time.Time, bool) {
	if o == nil || o.CreatedTs == nil {
		return nil, false
	}
	return o.CreatedTs, true
}

// HasCreatedTs returns a boolean if a field has been set.
func (o *Deposit) HasCreatedTs() bool {
	if o != nil && o.CreatedTs != nil {
		return true
	}

	return false
}

// SetCreatedTs gets a reference to the given time.Time and assigns it to the CreatedTs field.
func (o *Deposit) SetCreatedTs(v time.Time) {
	o.CreatedTs = &v
}

// GetDepositType returns the DepositType field value if set, zero value otherwise.
func (o *Deposit) GetDepositType() string {
	if o == nil || o.DepositType == nil {
		var ret string
		return ret
	}
	return *o.DepositType
}

// GetDepositTypeOk returns a tuple with the DepositType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetDepositTypeOk() (*string, bool) {
	if o == nil || o.DepositType == nil {
		return nil, false
	}
	return o.DepositType, true
}

// HasDepositType returns a boolean if a field has been set.
func (o *Deposit) HasDepositType() bool {
	if o != nil && o.DepositType != nil {
		return true
	}

	return false
}

// SetDepositType gets a reference to the given string and assigns it to the DepositType field.
func (o *Deposit) SetDepositType(v string) {
	o.DepositType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Deposit) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Deposit) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Deposit) SetId(v string) {
	o.Id = &v
}

// GetImmediateAmount returns the ImmediateAmount field value if set, zero value otherwise.
func (o *Deposit) GetImmediateAmount() int64 {
	if o == nil || o.ImmediateAmount == nil {
		var ret int64
		return ret
	}
	return *o.ImmediateAmount
}

// GetImmediateAmountOk returns a tuple with the ImmediateAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetImmediateAmountOk() (*int64, bool) {
	if o == nil || o.ImmediateAmount == nil {
		return nil, false
	}
	return o.ImmediateAmount, true
}

// HasImmediateAmount returns a boolean if a field has been set.
func (o *Deposit) HasImmediateAmount() bool {
	if o != nil && o.ImmediateAmount != nil {
		return true
	}

	return false
}

// SetImmediateAmount gets a reference to the given int64 and assigns it to the ImmediateAmount field.
func (o *Deposit) SetImmediateAmount(v int64) {
	o.ImmediateAmount = &v
}

// GetImmediateStatus returns the ImmediateStatus field value if set, zero value otherwise.
func (o *Deposit) GetImmediateStatus() string {
	if o == nil || o.ImmediateStatus == nil {
		var ret string
		return ret
	}
	return *o.ImmediateStatus
}

// GetImmediateStatusOk returns a tuple with the ImmediateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetImmediateStatusOk() (*string, bool) {
	if o == nil || o.ImmediateStatus == nil {
		return nil, false
	}
	return o.ImmediateStatus, true
}

// HasImmediateStatus returns a boolean if a field has been set.
func (o *Deposit) HasImmediateStatus() bool {
	if o != nil && o.ImmediateStatus != nil {
		return true
	}

	return false
}

// SetImmediateStatus gets a reference to the given string and assigns it to the ImmediateStatus field.
func (o *Deposit) SetImmediateStatus(v string) {
	o.ImmediateStatus = &v
}

// GetReturnCode returns the ReturnCode field value if set, zero value otherwise.
func (o *Deposit) GetReturnCode() string {
	if o == nil || o.ReturnCode == nil {
		var ret string
		return ret
	}
	return *o.ReturnCode
}

// GetReturnCodeOk returns a tuple with the ReturnCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetReturnCodeOk() (*string, bool) {
	if o == nil || o.ReturnCode == nil {
		return nil, false
	}
	return o.ReturnCode, true
}

// HasReturnCode returns a boolean if a field has been set.
func (o *Deposit) HasReturnCode() bool {
	if o != nil && o.ReturnCode != nil {
		return true
	}

	return false
}

// SetReturnCode gets a reference to the given string and assigns it to the ReturnCode field.
func (o *Deposit) SetReturnCode(v string) {
	o.ReturnCode = &v
}

// GetReturnReason returns the ReturnReason field value if set, zero value otherwise.
func (o *Deposit) GetReturnReason() string {
	if o == nil || o.ReturnReason == nil {
		var ret string
		return ret
	}
	return *o.ReturnReason
}

// GetReturnReasonOk returns a tuple with the ReturnReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetReturnReasonOk() (*string, bool) {
	if o == nil || o.ReturnReason == nil {
		return nil, false
	}
	return o.ReturnReason, true
}

// HasReturnReason returns a boolean if a field has been set.
func (o *Deposit) HasReturnReason() bool {
	if o != nil && o.ReturnReason != nil {
		return true
	}

	return false
}

// SetReturnReason gets a reference to the given string and assigns it to the ReturnReason field.
func (o *Deposit) SetReturnReason(v string) {
	o.ReturnReason = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Deposit) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Deposit) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Deposit) SetStatus(v string) {
	o.Status = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Deposit) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deposit) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Deposit) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Deposit) SetUserId(v string) {
	o.UserId = &v
}

func (o Deposit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AmountCents != nil {
		toSerialize["amount_cents"] = o.AmountCents
	}
	if o.BankId != nil {
		toSerialize["bank_id"] = o.BankId
	}
	if o.CreatedTs != nil {
		toSerialize["created_ts"] = o.CreatedTs
	}
	if o.DepositType != nil {
		toSerialize["deposit_type"] = o.DepositType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ImmediateAmount != nil {
		toSerialize["immediate_amount"] = o.ImmediateAmount
	}
	if o.ImmediateStatus != nil {
		toSerialize["immediate_status"] = o.ImmediateStatus
	}
	if o.ReturnCode != nil {
		toSerialize["return_code"] = o.ReturnCode
	}
	if o.ReturnReason != nil {
		toSerialize["return_reason"] = o.ReturnReason
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableDeposit struct {
	value *Deposit
	isSet bool
}

func (v NullableDeposit) Get() *Deposit {
	return v.value
}

func (v *NullableDeposit) Set(val *Deposit) {
	v.value = val
	v.isSet = true
}

func (v NullableDeposit) IsSet() bool {
	return v.isSet
}

func (v *NullableDeposit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeposit(val *Deposit) *NullableDeposit {
	return &NullableDeposit{value: val, isSet: true}
}

func (v NullableDeposit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeposit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


