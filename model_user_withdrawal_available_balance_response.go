/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// UserWithdrawalAvailableBalanceResponse struct for UserWithdrawalAvailableBalanceResponse
type UserWithdrawalAvailableBalanceResponse struct {
	AvailableBalanceCents int64 `json:"available_balance_cents"`
	WithdrawalFeeCents int64 `json:"withdrawal_fee_cents"`
}

// NewUserWithdrawalAvailableBalanceResponse instantiates a new UserWithdrawalAvailableBalanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserWithdrawalAvailableBalanceResponse(availableBalanceCents int64, withdrawalFeeCents int64) *UserWithdrawalAvailableBalanceResponse {
	this := UserWithdrawalAvailableBalanceResponse{}
	this.AvailableBalanceCents = availableBalanceCents
	this.WithdrawalFeeCents = withdrawalFeeCents
	return &this
}

// NewUserWithdrawalAvailableBalanceResponseWithDefaults instantiates a new UserWithdrawalAvailableBalanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWithdrawalAvailableBalanceResponseWithDefaults() *UserWithdrawalAvailableBalanceResponse {
	this := UserWithdrawalAvailableBalanceResponse{}
	return &this
}

// GetAvailableBalanceCents returns the AvailableBalanceCents field value
func (o *UserWithdrawalAvailableBalanceResponse) GetAvailableBalanceCents() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AvailableBalanceCents
}

// GetAvailableBalanceCentsOk returns a tuple with the AvailableBalanceCents field value
// and a boolean to check if the value has been set.
func (o *UserWithdrawalAvailableBalanceResponse) GetAvailableBalanceCentsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailableBalanceCents, true
}

// SetAvailableBalanceCents sets field value
func (o *UserWithdrawalAvailableBalanceResponse) SetAvailableBalanceCents(v int64) {
	o.AvailableBalanceCents = v
}

// GetWithdrawalFeeCents returns the WithdrawalFeeCents field value
func (o *UserWithdrawalAvailableBalanceResponse) GetWithdrawalFeeCents() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.WithdrawalFeeCents
}

// GetWithdrawalFeeCentsOk returns a tuple with the WithdrawalFeeCents field value
// and a boolean to check if the value has been set.
func (o *UserWithdrawalAvailableBalanceResponse) GetWithdrawalFeeCentsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WithdrawalFeeCents, true
}

// SetWithdrawalFeeCents sets field value
func (o *UserWithdrawalAvailableBalanceResponse) SetWithdrawalFeeCents(v int64) {
	o.WithdrawalFeeCents = v
}

func (o UserWithdrawalAvailableBalanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["available_balance_cents"] = o.AvailableBalanceCents
	}
	if true {
		toSerialize["withdrawal_fee_cents"] = o.WithdrawalFeeCents
	}
	return json.Marshal(toSerialize)
}

type NullableUserWithdrawalAvailableBalanceResponse struct {
	value *UserWithdrawalAvailableBalanceResponse
	isSet bool
}

func (v NullableUserWithdrawalAvailableBalanceResponse) Get() *UserWithdrawalAvailableBalanceResponse {
	return v.value
}

func (v *NullableUserWithdrawalAvailableBalanceResponse) Set(val *UserWithdrawalAvailableBalanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserWithdrawalAvailableBalanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserWithdrawalAvailableBalanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserWithdrawalAvailableBalanceResponse(val *UserWithdrawalAvailableBalanceResponse) *NullableUserWithdrawalAvailableBalanceResponse {
	return &NullableUserWithdrawalAvailableBalanceResponse{value: val, isSet: true}
}

func (v NullableUserWithdrawalAvailableBalanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserWithdrawalAvailableBalanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


