/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// ChangeSubscriptionRequest struct for ChangeSubscriptionRequest
type ChangeSubscriptionRequest struct {
	PushPreferences *bool `json:"push_preferences,omitempty"`
	// Specifies the subscription level for email notifications its values can be: \"none\", \"basic\" or \"all\"
	SubscriptionLevel string `json:"subscription_level"`
}

// NewChangeSubscriptionRequest instantiates a new ChangeSubscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeSubscriptionRequest(subscriptionLevel string) *ChangeSubscriptionRequest {
	this := ChangeSubscriptionRequest{}
	this.SubscriptionLevel = subscriptionLevel
	return &this
}

// NewChangeSubscriptionRequestWithDefaults instantiates a new ChangeSubscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeSubscriptionRequestWithDefaults() *ChangeSubscriptionRequest {
	this := ChangeSubscriptionRequest{}
	return &this
}

// GetPushPreferences returns the PushPreferences field value if set, zero value otherwise.
func (o *ChangeSubscriptionRequest) GetPushPreferences() bool {
	if o == nil || o.PushPreferences == nil {
		var ret bool
		return ret
	}
	return *o.PushPreferences
}

// GetPushPreferencesOk returns a tuple with the PushPreferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeSubscriptionRequest) GetPushPreferencesOk() (*bool, bool) {
	if o == nil || o.PushPreferences == nil {
		return nil, false
	}
	return o.PushPreferences, true
}

// HasPushPreferences returns a boolean if a field has been set.
func (o *ChangeSubscriptionRequest) HasPushPreferences() bool {
	if o != nil && o.PushPreferences != nil {
		return true
	}

	return false
}

// SetPushPreferences gets a reference to the given bool and assigns it to the PushPreferences field.
func (o *ChangeSubscriptionRequest) SetPushPreferences(v bool) {
	o.PushPreferences = &v
}

// GetSubscriptionLevel returns the SubscriptionLevel field value
func (o *ChangeSubscriptionRequest) GetSubscriptionLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionLevel
}

// GetSubscriptionLevelOk returns a tuple with the SubscriptionLevel field value
// and a boolean to check if the value has been set.
func (o *ChangeSubscriptionRequest) GetSubscriptionLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionLevel, true
}

// SetSubscriptionLevel sets field value
func (o *ChangeSubscriptionRequest) SetSubscriptionLevel(v string) {
	o.SubscriptionLevel = v
}

func (o ChangeSubscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PushPreferences != nil {
		toSerialize["push_preferences"] = o.PushPreferences
	}
	if true {
		toSerialize["subscription_level"] = o.SubscriptionLevel
	}
	return json.Marshal(toSerialize)
}

type NullableChangeSubscriptionRequest struct {
	value *ChangeSubscriptionRequest
	isSet bool
}

func (v NullableChangeSubscriptionRequest) Get() *ChangeSubscriptionRequest {
	return v.value
}

func (v *NullableChangeSubscriptionRequest) Set(val *ChangeSubscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeSubscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeSubscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeSubscriptionRequest(val *ChangeSubscriptionRequest) *NullableChangeSubscriptionRequest {
	return &NullableChangeSubscriptionRequest{value: val, isSet: true}
}

func (v NullableChangeSubscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeSubscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


