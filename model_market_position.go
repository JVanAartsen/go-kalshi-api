/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// MarketPosition MarketPosition is your accumulated position on a specific market considering all orders and trades.
type MarketPosition struct {
	FeesPaid *int64 `json:"fees_paid,omitempty"`
	// Settlement stats
	FinalPosition *int32 `json:"final_position,omitempty"`
	FinalPositionCost *int64 `json:"final_position_cost,omitempty"`
	IsSettled *bool `json:"is_settled,omitempty"`
	MarketId *string `json:"market_id,omitempty"`
	// Current stats
	Position *int32 `json:"position,omitempty"`
	PositionCost *int64 `json:"position_cost,omitempty"`
	RealizedPnl *int64 `json:"realized_pnl,omitempty"`
	RestingOrdersCount *int32 `json:"resting_orders_count,omitempty"`
	TotalCost *int64 `json:"total_cost,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	Volume *int32 `json:"volume,omitempty"`
}

// NewMarketPosition instantiates a new MarketPosition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketPosition() *MarketPosition {
	this := MarketPosition{}
	return &this
}

// NewMarketPositionWithDefaults instantiates a new MarketPosition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketPositionWithDefaults() *MarketPosition {
	this := MarketPosition{}
	return &this
}

// GetFeesPaid returns the FeesPaid field value if set, zero value otherwise.
func (o *MarketPosition) GetFeesPaid() int64 {
	if o == nil || o.FeesPaid == nil {
		var ret int64
		return ret
	}
	return *o.FeesPaid
}

// GetFeesPaidOk returns a tuple with the FeesPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetFeesPaidOk() (*int64, bool) {
	if o == nil || o.FeesPaid == nil {
		return nil, false
	}
	return o.FeesPaid, true
}

// HasFeesPaid returns a boolean if a field has been set.
func (o *MarketPosition) HasFeesPaid() bool {
	if o != nil && o.FeesPaid != nil {
		return true
	}

	return false
}

// SetFeesPaid gets a reference to the given int64 and assigns it to the FeesPaid field.
func (o *MarketPosition) SetFeesPaid(v int64) {
	o.FeesPaid = &v
}

// GetFinalPosition returns the FinalPosition field value if set, zero value otherwise.
func (o *MarketPosition) GetFinalPosition() int32 {
	if o == nil || o.FinalPosition == nil {
		var ret int32
		return ret
	}
	return *o.FinalPosition
}

// GetFinalPositionOk returns a tuple with the FinalPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetFinalPositionOk() (*int32, bool) {
	if o == nil || o.FinalPosition == nil {
		return nil, false
	}
	return o.FinalPosition, true
}

// HasFinalPosition returns a boolean if a field has been set.
func (o *MarketPosition) HasFinalPosition() bool {
	if o != nil && o.FinalPosition != nil {
		return true
	}

	return false
}

// SetFinalPosition gets a reference to the given int32 and assigns it to the FinalPosition field.
func (o *MarketPosition) SetFinalPosition(v int32) {
	o.FinalPosition = &v
}

// GetFinalPositionCost returns the FinalPositionCost field value if set, zero value otherwise.
func (o *MarketPosition) GetFinalPositionCost() int64 {
	if o == nil || o.FinalPositionCost == nil {
		var ret int64
		return ret
	}
	return *o.FinalPositionCost
}

// GetFinalPositionCostOk returns a tuple with the FinalPositionCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetFinalPositionCostOk() (*int64, bool) {
	if o == nil || o.FinalPositionCost == nil {
		return nil, false
	}
	return o.FinalPositionCost, true
}

// HasFinalPositionCost returns a boolean if a field has been set.
func (o *MarketPosition) HasFinalPositionCost() bool {
	if o != nil && o.FinalPositionCost != nil {
		return true
	}

	return false
}

// SetFinalPositionCost gets a reference to the given int64 and assigns it to the FinalPositionCost field.
func (o *MarketPosition) SetFinalPositionCost(v int64) {
	o.FinalPositionCost = &v
}

// GetIsSettled returns the IsSettled field value if set, zero value otherwise.
func (o *MarketPosition) GetIsSettled() bool {
	if o == nil || o.IsSettled == nil {
		var ret bool
		return ret
	}
	return *o.IsSettled
}

// GetIsSettledOk returns a tuple with the IsSettled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetIsSettledOk() (*bool, bool) {
	if o == nil || o.IsSettled == nil {
		return nil, false
	}
	return o.IsSettled, true
}

// HasIsSettled returns a boolean if a field has been set.
func (o *MarketPosition) HasIsSettled() bool {
	if o != nil && o.IsSettled != nil {
		return true
	}

	return false
}

// SetIsSettled gets a reference to the given bool and assigns it to the IsSettled field.
func (o *MarketPosition) SetIsSettled(v bool) {
	o.IsSettled = &v
}

// GetMarketId returns the MarketId field value if set, zero value otherwise.
func (o *MarketPosition) GetMarketId() string {
	if o == nil || o.MarketId == nil {
		var ret string
		return ret
	}
	return *o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetMarketIdOk() (*string, bool) {
	if o == nil || o.MarketId == nil {
		return nil, false
	}
	return o.MarketId, true
}

// HasMarketId returns a boolean if a field has been set.
func (o *MarketPosition) HasMarketId() bool {
	if o != nil && o.MarketId != nil {
		return true
	}

	return false
}

// SetMarketId gets a reference to the given string and assigns it to the MarketId field.
func (o *MarketPosition) SetMarketId(v string) {
	o.MarketId = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *MarketPosition) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *MarketPosition) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *MarketPosition) SetPosition(v int32) {
	o.Position = &v
}

// GetPositionCost returns the PositionCost field value if set, zero value otherwise.
func (o *MarketPosition) GetPositionCost() int64 {
	if o == nil || o.PositionCost == nil {
		var ret int64
		return ret
	}
	return *o.PositionCost
}

// GetPositionCostOk returns a tuple with the PositionCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetPositionCostOk() (*int64, bool) {
	if o == nil || o.PositionCost == nil {
		return nil, false
	}
	return o.PositionCost, true
}

// HasPositionCost returns a boolean if a field has been set.
func (o *MarketPosition) HasPositionCost() bool {
	if o != nil && o.PositionCost != nil {
		return true
	}

	return false
}

// SetPositionCost gets a reference to the given int64 and assigns it to the PositionCost field.
func (o *MarketPosition) SetPositionCost(v int64) {
	o.PositionCost = &v
}

// GetRealizedPnl returns the RealizedPnl field value if set, zero value otherwise.
func (o *MarketPosition) GetRealizedPnl() int64 {
	if o == nil || o.RealizedPnl == nil {
		var ret int64
		return ret
	}
	return *o.RealizedPnl
}

// GetRealizedPnlOk returns a tuple with the RealizedPnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetRealizedPnlOk() (*int64, bool) {
	if o == nil || o.RealizedPnl == nil {
		return nil, false
	}
	return o.RealizedPnl, true
}

// HasRealizedPnl returns a boolean if a field has been set.
func (o *MarketPosition) HasRealizedPnl() bool {
	if o != nil && o.RealizedPnl != nil {
		return true
	}

	return false
}

// SetRealizedPnl gets a reference to the given int64 and assigns it to the RealizedPnl field.
func (o *MarketPosition) SetRealizedPnl(v int64) {
	o.RealizedPnl = &v
}

// GetRestingOrdersCount returns the RestingOrdersCount field value if set, zero value otherwise.
func (o *MarketPosition) GetRestingOrdersCount() int32 {
	if o == nil || o.RestingOrdersCount == nil {
		var ret int32
		return ret
	}
	return *o.RestingOrdersCount
}

// GetRestingOrdersCountOk returns a tuple with the RestingOrdersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetRestingOrdersCountOk() (*int32, bool) {
	if o == nil || o.RestingOrdersCount == nil {
		return nil, false
	}
	return o.RestingOrdersCount, true
}

// HasRestingOrdersCount returns a boolean if a field has been set.
func (o *MarketPosition) HasRestingOrdersCount() bool {
	if o != nil && o.RestingOrdersCount != nil {
		return true
	}

	return false
}

// SetRestingOrdersCount gets a reference to the given int32 and assigns it to the RestingOrdersCount field.
func (o *MarketPosition) SetRestingOrdersCount(v int32) {
	o.RestingOrdersCount = &v
}

// GetTotalCost returns the TotalCost field value if set, zero value otherwise.
func (o *MarketPosition) GetTotalCost() int64 {
	if o == nil || o.TotalCost == nil {
		var ret int64
		return ret
	}
	return *o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetTotalCostOk() (*int64, bool) {
	if o == nil || o.TotalCost == nil {
		return nil, false
	}
	return o.TotalCost, true
}

// HasTotalCost returns a boolean if a field has been set.
func (o *MarketPosition) HasTotalCost() bool {
	if o != nil && o.TotalCost != nil {
		return true
	}

	return false
}

// SetTotalCost gets a reference to the given int64 and assigns it to the TotalCost field.
func (o *MarketPosition) SetTotalCost(v int64) {
	o.TotalCost = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *MarketPosition) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *MarketPosition) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *MarketPosition) SetUserId(v string) {
	o.UserId = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *MarketPosition) GetVolume() int32 {
	if o == nil || o.Volume == nil {
		var ret int32
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketPosition) GetVolumeOk() (*int32, bool) {
	if o == nil || o.Volume == nil {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *MarketPosition) HasVolume() bool {
	if o != nil && o.Volume != nil {
		return true
	}

	return false
}

// SetVolume gets a reference to the given int32 and assigns it to the Volume field.
func (o *MarketPosition) SetVolume(v int32) {
	o.Volume = &v
}

func (o MarketPosition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FeesPaid != nil {
		toSerialize["fees_paid"] = o.FeesPaid
	}
	if o.FinalPosition != nil {
		toSerialize["final_position"] = o.FinalPosition
	}
	if o.FinalPositionCost != nil {
		toSerialize["final_position_cost"] = o.FinalPositionCost
	}
	if o.IsSettled != nil {
		toSerialize["is_settled"] = o.IsSettled
	}
	if o.MarketId != nil {
		toSerialize["market_id"] = o.MarketId
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.PositionCost != nil {
		toSerialize["position_cost"] = o.PositionCost
	}
	if o.RealizedPnl != nil {
		toSerialize["realized_pnl"] = o.RealizedPnl
	}
	if o.RestingOrdersCount != nil {
		toSerialize["resting_orders_count"] = o.RestingOrdersCount
	}
	if o.TotalCost != nil {
		toSerialize["total_cost"] = o.TotalCost
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	if o.Volume != nil {
		toSerialize["volume"] = o.Volume
	}
	return json.Marshal(toSerialize)
}

type NullableMarketPosition struct {
	value *MarketPosition
	isSet bool
}

func (v NullableMarketPosition) Get() *MarketPosition {
	return v.value
}

func (v *NullableMarketPosition) Set(val *MarketPosition) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketPosition) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketPosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketPosition(val *MarketPosition) *NullableMarketPosition {
	return &NullableMarketPosition{value: val, isSet: true}
}

func (v NullableMarketPosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketPosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


