/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// UserGetProfileResponse struct for UserGetProfileResponse
type UserGetProfileResponse struct {
	User User `json:"user"`
}

// NewUserGetProfileResponse instantiates a new UserGetProfileResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserGetProfileResponse(user User) *UserGetProfileResponse {
	this := UserGetProfileResponse{}
	this.User = user
	return &this
}

// NewUserGetProfileResponseWithDefaults instantiates a new UserGetProfileResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserGetProfileResponseWithDefaults() *UserGetProfileResponse {
	this := UserGetProfileResponse{}
	return &this
}

// GetUser returns the User field value
func (o *UserGetProfileResponse) GetUser() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *UserGetProfileResponse) GetUserOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *UserGetProfileResponse) SetUser(v User) {
	o.User = v
}

func (o UserGetProfileResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableUserGetProfileResponse struct {
	value *UserGetProfileResponse
	isSet bool
}

func (v NullableUserGetProfileResponse) Get() *UserGetProfileResponse {
	return v.value
}

func (v *NullableUserGetProfileResponse) Set(val *UserGetProfileResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserGetProfileResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserGetProfileResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserGetProfileResponse(val *UserGetProfileResponse) *NullableUserGetProfileResponse {
	return &NullableUserGetProfileResponse{value: val, isSet: true}
}

func (v NullableUserGetProfileResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserGetProfileResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


