/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// UserOrderCreateRequest Request for submitting an order
type UserOrderCreateRequest struct {
	// Specifies how many contracts should be bought
	Count int32 `json:"count"`
	// Specifies the expiration time of the order, in unix seconds.  If this is not supplied, or is 0, the order won't expire.
	ExpirationUnixTs *int64 `json:"expiration_unix_ts,omitempty"`
	// Specifies the id of the market for this order
	MarketId string `json:"market_id"`
	MaxCostCents *int64 `json:"max_cost_cents,omitempty"`
	Price int64 `json:"price"`
	// Specifies whether the order place count should be capped by the members current position.
	SellPositionCapped *bool `json:"sell_position_capped,omitempty"`
	// Specifies if this is a 'yes' or 'no' order
	Side string `json:"side"`
}

// NewUserOrderCreateRequest instantiates a new UserOrderCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserOrderCreateRequest(count int32, marketId string, price int64, side string) *UserOrderCreateRequest {
	this := UserOrderCreateRequest{}
	this.Count = count
	this.MarketId = marketId
	this.Price = price
	this.Side = side
	return &this
}

// NewUserOrderCreateRequestWithDefaults instantiates a new UserOrderCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserOrderCreateRequestWithDefaults() *UserOrderCreateRequest {
	this := UserOrderCreateRequest{}
	return &this
}

// GetCount returns the Count field value
func (o *UserOrderCreateRequest) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *UserOrderCreateRequest) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *UserOrderCreateRequest) SetCount(v int32) {
	o.Count = v
}

// GetExpirationUnixTs returns the ExpirationUnixTs field value if set, zero value otherwise.
func (o *UserOrderCreateRequest) GetExpirationUnixTs() int64 {
	if o == nil || o.ExpirationUnixTs == nil {
		var ret int64
		return ret
	}
	return *o.ExpirationUnixTs
}

// GetExpirationUnixTsOk returns a tuple with the ExpirationUnixTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserOrderCreateRequest) GetExpirationUnixTsOk() (*int64, bool) {
	if o == nil || o.ExpirationUnixTs == nil {
		return nil, false
	}
	return o.ExpirationUnixTs, true
}

// HasExpirationUnixTs returns a boolean if a field has been set.
func (o *UserOrderCreateRequest) HasExpirationUnixTs() bool {
	if o != nil && o.ExpirationUnixTs != nil {
		return true
	}

	return false
}

// SetExpirationUnixTs gets a reference to the given int64 and assigns it to the ExpirationUnixTs field.
func (o *UserOrderCreateRequest) SetExpirationUnixTs(v int64) {
	o.ExpirationUnixTs = &v
}

// GetMarketId returns the MarketId field value
func (o *UserOrderCreateRequest) GetMarketId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value
// and a boolean to check if the value has been set.
func (o *UserOrderCreateRequest) GetMarketIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketId, true
}

// SetMarketId sets field value
func (o *UserOrderCreateRequest) SetMarketId(v string) {
	o.MarketId = v
}

// GetMaxCostCents returns the MaxCostCents field value if set, zero value otherwise.
func (o *UserOrderCreateRequest) GetMaxCostCents() int64 {
	if o == nil || o.MaxCostCents == nil {
		var ret int64
		return ret
	}
	return *o.MaxCostCents
}

// GetMaxCostCentsOk returns a tuple with the MaxCostCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserOrderCreateRequest) GetMaxCostCentsOk() (*int64, bool) {
	if o == nil || o.MaxCostCents == nil {
		return nil, false
	}
	return o.MaxCostCents, true
}

// HasMaxCostCents returns a boolean if a field has been set.
func (o *UserOrderCreateRequest) HasMaxCostCents() bool {
	if o != nil && o.MaxCostCents != nil {
		return true
	}

	return false
}

// SetMaxCostCents gets a reference to the given int64 and assigns it to the MaxCostCents field.
func (o *UserOrderCreateRequest) SetMaxCostCents(v int64) {
	o.MaxCostCents = &v
}

// GetPrice returns the Price field value
func (o *UserOrderCreateRequest) GetPrice() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *UserOrderCreateRequest) GetPriceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *UserOrderCreateRequest) SetPrice(v int64) {
	o.Price = v
}

// GetSellPositionCapped returns the SellPositionCapped field value if set, zero value otherwise.
func (o *UserOrderCreateRequest) GetSellPositionCapped() bool {
	if o == nil || o.SellPositionCapped == nil {
		var ret bool
		return ret
	}
	return *o.SellPositionCapped
}

// GetSellPositionCappedOk returns a tuple with the SellPositionCapped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserOrderCreateRequest) GetSellPositionCappedOk() (*bool, bool) {
	if o == nil || o.SellPositionCapped == nil {
		return nil, false
	}
	return o.SellPositionCapped, true
}

// HasSellPositionCapped returns a boolean if a field has been set.
func (o *UserOrderCreateRequest) HasSellPositionCapped() bool {
	if o != nil && o.SellPositionCapped != nil {
		return true
	}

	return false
}

// SetSellPositionCapped gets a reference to the given bool and assigns it to the SellPositionCapped field.
func (o *UserOrderCreateRequest) SetSellPositionCapped(v bool) {
	o.SellPositionCapped = &v
}

// GetSide returns the Side field value
func (o *UserOrderCreateRequest) GetSide() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Side
}

// GetSideOk returns a tuple with the Side field value
// and a boolean to check if the value has been set.
func (o *UserOrderCreateRequest) GetSideOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Side, true
}

// SetSide sets field value
func (o *UserOrderCreateRequest) SetSide(v string) {
	o.Side = v
}

func (o UserOrderCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["count"] = o.Count
	}
	if o.ExpirationUnixTs != nil {
		toSerialize["expiration_unix_ts"] = o.ExpirationUnixTs
	}
	if true {
		toSerialize["market_id"] = o.MarketId
	}
	if o.MaxCostCents != nil {
		toSerialize["max_cost_cents"] = o.MaxCostCents
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if o.SellPositionCapped != nil {
		toSerialize["sell_position_capped"] = o.SellPositionCapped
	}
	if true {
		toSerialize["side"] = o.Side
	}
	return json.Marshal(toSerialize)
}

type NullableUserOrderCreateRequest struct {
	value *UserOrderCreateRequest
	isSet bool
}

func (v NullableUserOrderCreateRequest) Get() *UserOrderCreateRequest {
	return v.value
}

func (v *NullableUserOrderCreateRequest) Set(val *UserOrderCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserOrderCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserOrderCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserOrderCreateRequest(val *UserOrderCreateRequest) *NullableUserOrderCreateRequest {
	return &NullableUserOrderCreateRequest{value: val, isSet: true}
}

func (v NullableUserOrderCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserOrderCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


