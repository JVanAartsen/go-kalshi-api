/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
	"time"
)

// PeopleReferred struct for PeopleReferred
type PeopleReferred struct {
	Email *string `json:"email,omitempty"`
	ReferralId *string `json:"referral_id,omitempty"`
	StageInFunnel *string `json:"stage_in_funnel,omitempty"`
	TimeOfReferralExpiration *time.Time `json:"time_of_referral_expiration,omitempty"`
}

// NewPeopleReferred instantiates a new PeopleReferred object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeopleReferred() *PeopleReferred {
	this := PeopleReferred{}
	return &this
}

// NewPeopleReferredWithDefaults instantiates a new PeopleReferred object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeopleReferredWithDefaults() *PeopleReferred {
	this := PeopleReferred{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PeopleReferred) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleReferred) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PeopleReferred) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PeopleReferred) SetEmail(v string) {
	o.Email = &v
}

// GetReferralId returns the ReferralId field value if set, zero value otherwise.
func (o *PeopleReferred) GetReferralId() string {
	if o == nil || o.ReferralId == nil {
		var ret string
		return ret
	}
	return *o.ReferralId
}

// GetReferralIdOk returns a tuple with the ReferralId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleReferred) GetReferralIdOk() (*string, bool) {
	if o == nil || o.ReferralId == nil {
		return nil, false
	}
	return o.ReferralId, true
}

// HasReferralId returns a boolean if a field has been set.
func (o *PeopleReferred) HasReferralId() bool {
	if o != nil && o.ReferralId != nil {
		return true
	}

	return false
}

// SetReferralId gets a reference to the given string and assigns it to the ReferralId field.
func (o *PeopleReferred) SetReferralId(v string) {
	o.ReferralId = &v
}

// GetStageInFunnel returns the StageInFunnel field value if set, zero value otherwise.
func (o *PeopleReferred) GetStageInFunnel() string {
	if o == nil || o.StageInFunnel == nil {
		var ret string
		return ret
	}
	return *o.StageInFunnel
}

// GetStageInFunnelOk returns a tuple with the StageInFunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleReferred) GetStageInFunnelOk() (*string, bool) {
	if o == nil || o.StageInFunnel == nil {
		return nil, false
	}
	return o.StageInFunnel, true
}

// HasStageInFunnel returns a boolean if a field has been set.
func (o *PeopleReferred) HasStageInFunnel() bool {
	if o != nil && o.StageInFunnel != nil {
		return true
	}

	return false
}

// SetStageInFunnel gets a reference to the given string and assigns it to the StageInFunnel field.
func (o *PeopleReferred) SetStageInFunnel(v string) {
	o.StageInFunnel = &v
}

// GetTimeOfReferralExpiration returns the TimeOfReferralExpiration field value if set, zero value otherwise.
func (o *PeopleReferred) GetTimeOfReferralExpiration() time.Time {
	if o == nil || o.TimeOfReferralExpiration == nil {
		var ret time.Time
		return ret
	}
	return *o.TimeOfReferralExpiration
}

// GetTimeOfReferralExpirationOk returns a tuple with the TimeOfReferralExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleReferred) GetTimeOfReferralExpirationOk() (*time.Time, bool) {
	if o == nil || o.TimeOfReferralExpiration == nil {
		return nil, false
	}
	return o.TimeOfReferralExpiration, true
}

// HasTimeOfReferralExpiration returns a boolean if a field has been set.
func (o *PeopleReferred) HasTimeOfReferralExpiration() bool {
	if o != nil && o.TimeOfReferralExpiration != nil {
		return true
	}

	return false
}

// SetTimeOfReferralExpiration gets a reference to the given time.Time and assigns it to the TimeOfReferralExpiration field.
func (o *PeopleReferred) SetTimeOfReferralExpiration(v time.Time) {
	o.TimeOfReferralExpiration = &v
}

func (o PeopleReferred) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.ReferralId != nil {
		toSerialize["referral_id"] = o.ReferralId
	}
	if o.StageInFunnel != nil {
		toSerialize["stage_in_funnel"] = o.StageInFunnel
	}
	if o.TimeOfReferralExpiration != nil {
		toSerialize["time_of_referral_expiration"] = o.TimeOfReferralExpiration
	}
	return json.Marshal(toSerialize)
}

type NullablePeopleReferred struct {
	value *PeopleReferred
	isSet bool
}

func (v NullablePeopleReferred) Get() *PeopleReferred {
	return v.value
}

func (v *NullablePeopleReferred) Set(val *PeopleReferred) {
	v.value = val
	v.isSet = true
}

func (v NullablePeopleReferred) IsSet() bool {
	return v.isSet
}

func (v *NullablePeopleReferred) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeopleReferred(val *PeopleReferred) *NullablePeopleReferred {
	return &NullablePeopleReferred{value: val, isSet: true}
}

func (v NullablePeopleReferred) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeopleReferred) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


