/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// RangedMarketPosition struct for RangedMarketPosition
type RangedMarketPosition struct {
	CollateralReturnedCents *int64 `json:"collateral_returned_cents,omitempty"`
	MarketPositions []MarketPosition `json:"market_positions,omitempty"`
	RangedMarketId *string `json:"ranged_market_id,omitempty"`
	UserId *string `json:"user_id,omitempty"`
}

// NewRangedMarketPosition instantiates a new RangedMarketPosition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRangedMarketPosition() *RangedMarketPosition {
	this := RangedMarketPosition{}
	return &this
}

// NewRangedMarketPositionWithDefaults instantiates a new RangedMarketPosition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRangedMarketPositionWithDefaults() *RangedMarketPosition {
	this := RangedMarketPosition{}
	return &this
}

// GetCollateralReturnedCents returns the CollateralReturnedCents field value if set, zero value otherwise.
func (o *RangedMarketPosition) GetCollateralReturnedCents() int64 {
	if o == nil || o.CollateralReturnedCents == nil {
		var ret int64
		return ret
	}
	return *o.CollateralReturnedCents
}

// GetCollateralReturnedCentsOk returns a tuple with the CollateralReturnedCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangedMarketPosition) GetCollateralReturnedCentsOk() (*int64, bool) {
	if o == nil || o.CollateralReturnedCents == nil {
		return nil, false
	}
	return o.CollateralReturnedCents, true
}

// HasCollateralReturnedCents returns a boolean if a field has been set.
func (o *RangedMarketPosition) HasCollateralReturnedCents() bool {
	if o != nil && o.CollateralReturnedCents != nil {
		return true
	}

	return false
}

// SetCollateralReturnedCents gets a reference to the given int64 and assigns it to the CollateralReturnedCents field.
func (o *RangedMarketPosition) SetCollateralReturnedCents(v int64) {
	o.CollateralReturnedCents = &v
}

// GetMarketPositions returns the MarketPositions field value if set, zero value otherwise.
func (o *RangedMarketPosition) GetMarketPositions() []MarketPosition {
	if o == nil || o.MarketPositions == nil {
		var ret []MarketPosition
		return ret
	}
	return o.MarketPositions
}

// GetMarketPositionsOk returns a tuple with the MarketPositions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangedMarketPosition) GetMarketPositionsOk() ([]MarketPosition, bool) {
	if o == nil || o.MarketPositions == nil {
		return nil, false
	}
	return o.MarketPositions, true
}

// HasMarketPositions returns a boolean if a field has been set.
func (o *RangedMarketPosition) HasMarketPositions() bool {
	if o != nil && o.MarketPositions != nil {
		return true
	}

	return false
}

// SetMarketPositions gets a reference to the given []MarketPosition and assigns it to the MarketPositions field.
func (o *RangedMarketPosition) SetMarketPositions(v []MarketPosition) {
	o.MarketPositions = v
}

// GetRangedMarketId returns the RangedMarketId field value if set, zero value otherwise.
func (o *RangedMarketPosition) GetRangedMarketId() string {
	if o == nil || o.RangedMarketId == nil {
		var ret string
		return ret
	}
	return *o.RangedMarketId
}

// GetRangedMarketIdOk returns a tuple with the RangedMarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangedMarketPosition) GetRangedMarketIdOk() (*string, bool) {
	if o == nil || o.RangedMarketId == nil {
		return nil, false
	}
	return o.RangedMarketId, true
}

// HasRangedMarketId returns a boolean if a field has been set.
func (o *RangedMarketPosition) HasRangedMarketId() bool {
	if o != nil && o.RangedMarketId != nil {
		return true
	}

	return false
}

// SetRangedMarketId gets a reference to the given string and assigns it to the RangedMarketId field.
func (o *RangedMarketPosition) SetRangedMarketId(v string) {
	o.RangedMarketId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *RangedMarketPosition) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RangedMarketPosition) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *RangedMarketPosition) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *RangedMarketPosition) SetUserId(v string) {
	o.UserId = &v
}

func (o RangedMarketPosition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CollateralReturnedCents != nil {
		toSerialize["collateral_returned_cents"] = o.CollateralReturnedCents
	}
	if o.MarketPositions != nil {
		toSerialize["market_positions"] = o.MarketPositions
	}
	if o.RangedMarketId != nil {
		toSerialize["ranged_market_id"] = o.RangedMarketId
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableRangedMarketPosition struct {
	value *RangedMarketPosition
	isSet bool
}

func (v NullableRangedMarketPosition) Get() *RangedMarketPosition {
	return v.value
}

func (v *NullableRangedMarketPosition) Set(val *RangedMarketPosition) {
	v.value = val
	v.isSet = true
}

func (v NullableRangedMarketPosition) IsSet() bool {
	return v.isSet
}

func (v *NullableRangedMarketPosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRangedMarketPosition(val *RangedMarketPosition) *NullableRangedMarketPosition {
	return &NullableRangedMarketPosition{value: val, isSet: true}
}

func (v NullableRangedMarketPosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRangedMarketPosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


