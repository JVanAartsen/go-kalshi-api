/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// UserGetMarketResponse struct for UserGetMarketResponse
type UserGetMarketResponse struct {
	Market Market `json:"market"`
}

// NewUserGetMarketResponse instantiates a new UserGetMarketResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserGetMarketResponse(market Market) *UserGetMarketResponse {
	this := UserGetMarketResponse{}
	this.Market = market
	return &this
}

// NewUserGetMarketResponseWithDefaults instantiates a new UserGetMarketResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserGetMarketResponseWithDefaults() *UserGetMarketResponse {
	this := UserGetMarketResponse{}
	return &this
}

// GetMarket returns the Market field value
func (o *UserGetMarketResponse) GetMarket() Market {
	if o == nil {
		var ret Market
		return ret
	}

	return o.Market
}

// GetMarketOk returns a tuple with the Market field value
// and a boolean to check if the value has been set.
func (o *UserGetMarketResponse) GetMarketOk() (*Market, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Market, true
}

// SetMarket sets field value
func (o *UserGetMarketResponse) SetMarket(v Market) {
	o.Market = v
}

func (o UserGetMarketResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["market"] = o.Market
	}
	return json.Marshal(toSerialize)
}

type NullableUserGetMarketResponse struct {
	value *UserGetMarketResponse
	isSet bool
}

func (v NullableUserGetMarketResponse) Get() *UserGetMarketResponse {
	return v.value
}

func (v *NullableUserGetMarketResponse) Set(val *UserGetMarketResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserGetMarketResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserGetMarketResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserGetMarketResponse(val *UserGetMarketResponse) *NullableUserGetMarketResponse {
	return &NullableUserGetMarketResponse{value: val, isSet: true}
}

func (v NullableUserGetMarketResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserGetMarketResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


