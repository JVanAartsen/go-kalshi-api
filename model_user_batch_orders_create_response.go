/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// UserBatchOrdersCreateResponse Response for submitting a batch of order
type UserBatchOrdersCreateResponse struct {
	// An array of responses corresponding to orders in the request.
	Orders []UserBatchOrdersCreateSingleOrderResponse `json:"orders"`
}

// NewUserBatchOrdersCreateResponse instantiates a new UserBatchOrdersCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserBatchOrdersCreateResponse(orders []UserBatchOrdersCreateSingleOrderResponse) *UserBatchOrdersCreateResponse {
	this := UserBatchOrdersCreateResponse{}
	this.Orders = orders
	return &this
}

// NewUserBatchOrdersCreateResponseWithDefaults instantiates a new UserBatchOrdersCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserBatchOrdersCreateResponseWithDefaults() *UserBatchOrdersCreateResponse {
	this := UserBatchOrdersCreateResponse{}
	return &this
}

// GetOrders returns the Orders field value
func (o *UserBatchOrdersCreateResponse) GetOrders() []UserBatchOrdersCreateSingleOrderResponse {
	if o == nil {
		var ret []UserBatchOrdersCreateSingleOrderResponse
		return ret
	}

	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value
// and a boolean to check if the value has been set.
func (o *UserBatchOrdersCreateResponse) GetOrdersOk() ([]UserBatchOrdersCreateSingleOrderResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Orders, true
}

// SetOrders sets field value
func (o *UserBatchOrdersCreateResponse) SetOrders(v []UserBatchOrdersCreateSingleOrderResponse) {
	o.Orders = v
}

func (o UserBatchOrdersCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["orders"] = o.Orders
	}
	return json.Marshal(toSerialize)
}

type NullableUserBatchOrdersCreateResponse struct {
	value *UserBatchOrdersCreateResponse
	isSet bool
}

func (v NullableUserBatchOrdersCreateResponse) Get() *UserBatchOrdersCreateResponse {
	return v.value
}

func (v *NullableUserBatchOrdersCreateResponse) Set(val *UserBatchOrdersCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserBatchOrdersCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserBatchOrdersCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserBatchOrdersCreateResponse(val *UserBatchOrdersCreateResponse) *NullableUserBatchOrdersCreateResponse {
	return &NullableUserBatchOrdersCreateResponse{value: val, isSet: true}
}

func (v NullableUserBatchOrdersCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserBatchOrdersCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


