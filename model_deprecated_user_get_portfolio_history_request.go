/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
	"time"
)

// DeprecatedUserGetPortfolioHistoryRequest Request for fetching user portfolio history
type DeprecatedUserGetPortfolioHistoryRequest struct {
	// Restricts the response to orders before a timestamp in: query
	MaxDate *time.Time `json:"max_date,omitempty"`
	// Restricts the response to orders before a timestamp in unix seconds, overrides max_date, defaults to now. in: query
	MaxTs *int64 `json:"max_ts,omitempty"`
	// Restricts the response to orders after a timestamp in: query
	MinDate *time.Time `json:"min_date,omitempty"`
	// Restricts the response to orders after a timestamp in unix seconds, overrides min_date, defaults to one hour before now. in: query
	MinTs *int64 `json:"min_ts,omitempty"`
	// Determines the number of buckets to average over when performing subsampling, defaults to 1440. in: query
	NumBuckets *int32 `json:"num_buckets,omitempty"`
}

// NewDeprecatedUserGetPortfolioHistoryRequest instantiates a new DeprecatedUserGetPortfolioHistoryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeprecatedUserGetPortfolioHistoryRequest() *DeprecatedUserGetPortfolioHistoryRequest {
	this := DeprecatedUserGetPortfolioHistoryRequest{}
	return &this
}

// NewDeprecatedUserGetPortfolioHistoryRequestWithDefaults instantiates a new DeprecatedUserGetPortfolioHistoryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeprecatedUserGetPortfolioHistoryRequestWithDefaults() *DeprecatedUserGetPortfolioHistoryRequest {
	this := DeprecatedUserGetPortfolioHistoryRequest{}
	return &this
}

// GetMaxDate returns the MaxDate field value if set, zero value otherwise.
func (o *DeprecatedUserGetPortfolioHistoryRequest) GetMaxDate() time.Time {
	if o == nil || o.MaxDate == nil {
		var ret time.Time
		return ret
	}
	return *o.MaxDate
}

// GetMaxDateOk returns a tuple with the MaxDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedUserGetPortfolioHistoryRequest) GetMaxDateOk() (*time.Time, bool) {
	if o == nil || o.MaxDate == nil {
		return nil, false
	}
	return o.MaxDate, true
}

// HasMaxDate returns a boolean if a field has been set.
func (o *DeprecatedUserGetPortfolioHistoryRequest) HasMaxDate() bool {
	if o != nil && o.MaxDate != nil {
		return true
	}

	return false
}

// SetMaxDate gets a reference to the given time.Time and assigns it to the MaxDate field.
func (o *DeprecatedUserGetPortfolioHistoryRequest) SetMaxDate(v time.Time) {
	o.MaxDate = &v
}

// GetMaxTs returns the MaxTs field value if set, zero value otherwise.
func (o *DeprecatedUserGetPortfolioHistoryRequest) GetMaxTs() int64 {
	if o == nil || o.MaxTs == nil {
		var ret int64
		return ret
	}
	return *o.MaxTs
}

// GetMaxTsOk returns a tuple with the MaxTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedUserGetPortfolioHistoryRequest) GetMaxTsOk() (*int64, bool) {
	if o == nil || o.MaxTs == nil {
		return nil, false
	}
	return o.MaxTs, true
}

// HasMaxTs returns a boolean if a field has been set.
func (o *DeprecatedUserGetPortfolioHistoryRequest) HasMaxTs() bool {
	if o != nil && o.MaxTs != nil {
		return true
	}

	return false
}

// SetMaxTs gets a reference to the given int64 and assigns it to the MaxTs field.
func (o *DeprecatedUserGetPortfolioHistoryRequest) SetMaxTs(v int64) {
	o.MaxTs = &v
}

// GetMinDate returns the MinDate field value if set, zero value otherwise.
func (o *DeprecatedUserGetPortfolioHistoryRequest) GetMinDate() time.Time {
	if o == nil || o.MinDate == nil {
		var ret time.Time
		return ret
	}
	return *o.MinDate
}

// GetMinDateOk returns a tuple with the MinDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedUserGetPortfolioHistoryRequest) GetMinDateOk() (*time.Time, bool) {
	if o == nil || o.MinDate == nil {
		return nil, false
	}
	return o.MinDate, true
}

// HasMinDate returns a boolean if a field has been set.
func (o *DeprecatedUserGetPortfolioHistoryRequest) HasMinDate() bool {
	if o != nil && o.MinDate != nil {
		return true
	}

	return false
}

// SetMinDate gets a reference to the given time.Time and assigns it to the MinDate field.
func (o *DeprecatedUserGetPortfolioHistoryRequest) SetMinDate(v time.Time) {
	o.MinDate = &v
}

// GetMinTs returns the MinTs field value if set, zero value otherwise.
func (o *DeprecatedUserGetPortfolioHistoryRequest) GetMinTs() int64 {
	if o == nil || o.MinTs == nil {
		var ret int64
		return ret
	}
	return *o.MinTs
}

// GetMinTsOk returns a tuple with the MinTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedUserGetPortfolioHistoryRequest) GetMinTsOk() (*int64, bool) {
	if o == nil || o.MinTs == nil {
		return nil, false
	}
	return o.MinTs, true
}

// HasMinTs returns a boolean if a field has been set.
func (o *DeprecatedUserGetPortfolioHistoryRequest) HasMinTs() bool {
	if o != nil && o.MinTs != nil {
		return true
	}

	return false
}

// SetMinTs gets a reference to the given int64 and assigns it to the MinTs field.
func (o *DeprecatedUserGetPortfolioHistoryRequest) SetMinTs(v int64) {
	o.MinTs = &v
}

// GetNumBuckets returns the NumBuckets field value if set, zero value otherwise.
func (o *DeprecatedUserGetPortfolioHistoryRequest) GetNumBuckets() int32 {
	if o == nil || o.NumBuckets == nil {
		var ret int32
		return ret
	}
	return *o.NumBuckets
}

// GetNumBucketsOk returns a tuple with the NumBuckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedUserGetPortfolioHistoryRequest) GetNumBucketsOk() (*int32, bool) {
	if o == nil || o.NumBuckets == nil {
		return nil, false
	}
	return o.NumBuckets, true
}

// HasNumBuckets returns a boolean if a field has been set.
func (o *DeprecatedUserGetPortfolioHistoryRequest) HasNumBuckets() bool {
	if o != nil && o.NumBuckets != nil {
		return true
	}

	return false
}

// SetNumBuckets gets a reference to the given int32 and assigns it to the NumBuckets field.
func (o *DeprecatedUserGetPortfolioHistoryRequest) SetNumBuckets(v int32) {
	o.NumBuckets = &v
}

func (o DeprecatedUserGetPortfolioHistoryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxDate != nil {
		toSerialize["max_date"] = o.MaxDate
	}
	if o.MaxTs != nil {
		toSerialize["max_ts"] = o.MaxTs
	}
	if o.MinDate != nil {
		toSerialize["min_date"] = o.MinDate
	}
	if o.MinTs != nil {
		toSerialize["min_ts"] = o.MinTs
	}
	if o.NumBuckets != nil {
		toSerialize["num_buckets"] = o.NumBuckets
	}
	return json.Marshal(toSerialize)
}

type NullableDeprecatedUserGetPortfolioHistoryRequest struct {
	value *DeprecatedUserGetPortfolioHistoryRequest
	isSet bool
}

func (v NullableDeprecatedUserGetPortfolioHistoryRequest) Get() *DeprecatedUserGetPortfolioHistoryRequest {
	return v.value
}

func (v *NullableDeprecatedUserGetPortfolioHistoryRequest) Set(val *DeprecatedUserGetPortfolioHistoryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeprecatedUserGetPortfolioHistoryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeprecatedUserGetPortfolioHistoryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeprecatedUserGetPortfolioHistoryRequest(val *DeprecatedUserGetPortfolioHistoryRequest) *NullableDeprecatedUserGetPortfolioHistoryRequest {
	return &NullableDeprecatedUserGetPortfolioHistoryRequest{value: val, isSet: true}
}

func (v NullableDeprecatedUserGetPortfolioHistoryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeprecatedUserGetPortfolioHistoryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


