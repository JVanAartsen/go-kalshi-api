/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// UserWithdrawalResponse struct for UserWithdrawalResponse
type UserWithdrawalResponse struct {
	Withdrawal *Withdrawal `json:"withdrawal,omitempty"`
	// Id for the withdrawal that was created.
	WithdrawalId string `json:"withdrawal_id"`
}

// NewUserWithdrawalResponse instantiates a new UserWithdrawalResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserWithdrawalResponse(withdrawalId string) *UserWithdrawalResponse {
	this := UserWithdrawalResponse{}
	this.WithdrawalId = withdrawalId
	return &this
}

// NewUserWithdrawalResponseWithDefaults instantiates a new UserWithdrawalResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWithdrawalResponseWithDefaults() *UserWithdrawalResponse {
	this := UserWithdrawalResponse{}
	return &this
}

// GetWithdrawal returns the Withdrawal field value if set, zero value otherwise.
func (o *UserWithdrawalResponse) GetWithdrawal() Withdrawal {
	if o == nil || o.Withdrawal == nil {
		var ret Withdrawal
		return ret
	}
	return *o.Withdrawal
}

// GetWithdrawalOk returns a tuple with the Withdrawal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWithdrawalResponse) GetWithdrawalOk() (*Withdrawal, bool) {
	if o == nil || o.Withdrawal == nil {
		return nil, false
	}
	return o.Withdrawal, true
}

// HasWithdrawal returns a boolean if a field has been set.
func (o *UserWithdrawalResponse) HasWithdrawal() bool {
	if o != nil && o.Withdrawal != nil {
		return true
	}

	return false
}

// SetWithdrawal gets a reference to the given Withdrawal and assigns it to the Withdrawal field.
func (o *UserWithdrawalResponse) SetWithdrawal(v Withdrawal) {
	o.Withdrawal = &v
}

// GetWithdrawalId returns the WithdrawalId field value
func (o *UserWithdrawalResponse) GetWithdrawalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WithdrawalId
}

// GetWithdrawalIdOk returns a tuple with the WithdrawalId field value
// and a boolean to check if the value has been set.
func (o *UserWithdrawalResponse) GetWithdrawalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WithdrawalId, true
}

// SetWithdrawalId sets field value
func (o *UserWithdrawalResponse) SetWithdrawalId(v string) {
	o.WithdrawalId = v
}

func (o UserWithdrawalResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Withdrawal != nil {
		toSerialize["withdrawal"] = o.Withdrawal
	}
	if true {
		toSerialize["withdrawal_id"] = o.WithdrawalId
	}
	return json.Marshal(toSerialize)
}

type NullableUserWithdrawalResponse struct {
	value *UserWithdrawalResponse
	isSet bool
}

func (v NullableUserWithdrawalResponse) Get() *UserWithdrawalResponse {
	return v.value
}

func (v *NullableUserWithdrawalResponse) Set(val *UserWithdrawalResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserWithdrawalResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserWithdrawalResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserWithdrawalResponse(val *UserWithdrawalResponse) *NullableUserWithdrawalResponse {
	return &NullableUserWithdrawalResponse{value: val, isSet: true}
}

func (v NullableUserWithdrawalResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserWithdrawalResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


