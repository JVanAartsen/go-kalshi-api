/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
	"time"
)

// MarketTransaction struct for MarketTransaction
type MarketTransaction struct {
	AveragePriceCents *int64 `json:"average_price_cents,omitempty"`
	FeeCents *int64 `json:"fee_cents,omitempty"`
	IsSideYes *bool `json:"is_side_yes,omitempty"`
	MarketId *string `json:"market_id,omitempty"`
	MarketTicker *string `json:"market_ticker,omitempty"`
	MarketTitle *string `json:"market_title,omitempty"`
	NumContracts *int64 `json:"num_contracts,omitempty"`
	RealizedCostOfContractsCents *int64 `json:"realized_cost_of_contracts_cents,omitempty"`
	RealizedFifoProfitCents *int64 `json:"realized_fifo_profit_cents,omitempty"`
	RealizedRevenueCents *int64 `json:"realized_revenue_cents,omitempty"`
	Time *time.Time `json:"time,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewMarketTransaction instantiates a new MarketTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketTransaction() *MarketTransaction {
	this := MarketTransaction{}
	return &this
}

// NewMarketTransactionWithDefaults instantiates a new MarketTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketTransactionWithDefaults() *MarketTransaction {
	this := MarketTransaction{}
	return &this
}

// GetAveragePriceCents returns the AveragePriceCents field value if set, zero value otherwise.
func (o *MarketTransaction) GetAveragePriceCents() int64 {
	if o == nil || o.AveragePriceCents == nil {
		var ret int64
		return ret
	}
	return *o.AveragePriceCents
}

// GetAveragePriceCentsOk returns a tuple with the AveragePriceCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetAveragePriceCentsOk() (*int64, bool) {
	if o == nil || o.AveragePriceCents == nil {
		return nil, false
	}
	return o.AveragePriceCents, true
}

// HasAveragePriceCents returns a boolean if a field has been set.
func (o *MarketTransaction) HasAveragePriceCents() bool {
	if o != nil && o.AveragePriceCents != nil {
		return true
	}

	return false
}

// SetAveragePriceCents gets a reference to the given int64 and assigns it to the AveragePriceCents field.
func (o *MarketTransaction) SetAveragePriceCents(v int64) {
	o.AveragePriceCents = &v
}

// GetFeeCents returns the FeeCents field value if set, zero value otherwise.
func (o *MarketTransaction) GetFeeCents() int64 {
	if o == nil || o.FeeCents == nil {
		var ret int64
		return ret
	}
	return *o.FeeCents
}

// GetFeeCentsOk returns a tuple with the FeeCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetFeeCentsOk() (*int64, bool) {
	if o == nil || o.FeeCents == nil {
		return nil, false
	}
	return o.FeeCents, true
}

// HasFeeCents returns a boolean if a field has been set.
func (o *MarketTransaction) HasFeeCents() bool {
	if o != nil && o.FeeCents != nil {
		return true
	}

	return false
}

// SetFeeCents gets a reference to the given int64 and assigns it to the FeeCents field.
func (o *MarketTransaction) SetFeeCents(v int64) {
	o.FeeCents = &v
}

// GetIsSideYes returns the IsSideYes field value if set, zero value otherwise.
func (o *MarketTransaction) GetIsSideYes() bool {
	if o == nil || o.IsSideYes == nil {
		var ret bool
		return ret
	}
	return *o.IsSideYes
}

// GetIsSideYesOk returns a tuple with the IsSideYes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetIsSideYesOk() (*bool, bool) {
	if o == nil || o.IsSideYes == nil {
		return nil, false
	}
	return o.IsSideYes, true
}

// HasIsSideYes returns a boolean if a field has been set.
func (o *MarketTransaction) HasIsSideYes() bool {
	if o != nil && o.IsSideYes != nil {
		return true
	}

	return false
}

// SetIsSideYes gets a reference to the given bool and assigns it to the IsSideYes field.
func (o *MarketTransaction) SetIsSideYes(v bool) {
	o.IsSideYes = &v
}

// GetMarketId returns the MarketId field value if set, zero value otherwise.
func (o *MarketTransaction) GetMarketId() string {
	if o == nil || o.MarketId == nil {
		var ret string
		return ret
	}
	return *o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetMarketIdOk() (*string, bool) {
	if o == nil || o.MarketId == nil {
		return nil, false
	}
	return o.MarketId, true
}

// HasMarketId returns a boolean if a field has been set.
func (o *MarketTransaction) HasMarketId() bool {
	if o != nil && o.MarketId != nil {
		return true
	}

	return false
}

// SetMarketId gets a reference to the given string and assigns it to the MarketId field.
func (o *MarketTransaction) SetMarketId(v string) {
	o.MarketId = &v
}

// GetMarketTicker returns the MarketTicker field value if set, zero value otherwise.
func (o *MarketTransaction) GetMarketTicker() string {
	if o == nil || o.MarketTicker == nil {
		var ret string
		return ret
	}
	return *o.MarketTicker
}

// GetMarketTickerOk returns a tuple with the MarketTicker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetMarketTickerOk() (*string, bool) {
	if o == nil || o.MarketTicker == nil {
		return nil, false
	}
	return o.MarketTicker, true
}

// HasMarketTicker returns a boolean if a field has been set.
func (o *MarketTransaction) HasMarketTicker() bool {
	if o != nil && o.MarketTicker != nil {
		return true
	}

	return false
}

// SetMarketTicker gets a reference to the given string and assigns it to the MarketTicker field.
func (o *MarketTransaction) SetMarketTicker(v string) {
	o.MarketTicker = &v
}

// GetMarketTitle returns the MarketTitle field value if set, zero value otherwise.
func (o *MarketTransaction) GetMarketTitle() string {
	if o == nil || o.MarketTitle == nil {
		var ret string
		return ret
	}
	return *o.MarketTitle
}

// GetMarketTitleOk returns a tuple with the MarketTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetMarketTitleOk() (*string, bool) {
	if o == nil || o.MarketTitle == nil {
		return nil, false
	}
	return o.MarketTitle, true
}

// HasMarketTitle returns a boolean if a field has been set.
func (o *MarketTransaction) HasMarketTitle() bool {
	if o != nil && o.MarketTitle != nil {
		return true
	}

	return false
}

// SetMarketTitle gets a reference to the given string and assigns it to the MarketTitle field.
func (o *MarketTransaction) SetMarketTitle(v string) {
	o.MarketTitle = &v
}

// GetNumContracts returns the NumContracts field value if set, zero value otherwise.
func (o *MarketTransaction) GetNumContracts() int64 {
	if o == nil || o.NumContracts == nil {
		var ret int64
		return ret
	}
	return *o.NumContracts
}

// GetNumContractsOk returns a tuple with the NumContracts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetNumContractsOk() (*int64, bool) {
	if o == nil || o.NumContracts == nil {
		return nil, false
	}
	return o.NumContracts, true
}

// HasNumContracts returns a boolean if a field has been set.
func (o *MarketTransaction) HasNumContracts() bool {
	if o != nil && o.NumContracts != nil {
		return true
	}

	return false
}

// SetNumContracts gets a reference to the given int64 and assigns it to the NumContracts field.
func (o *MarketTransaction) SetNumContracts(v int64) {
	o.NumContracts = &v
}

// GetRealizedCostOfContractsCents returns the RealizedCostOfContractsCents field value if set, zero value otherwise.
func (o *MarketTransaction) GetRealizedCostOfContractsCents() int64 {
	if o == nil || o.RealizedCostOfContractsCents == nil {
		var ret int64
		return ret
	}
	return *o.RealizedCostOfContractsCents
}

// GetRealizedCostOfContractsCentsOk returns a tuple with the RealizedCostOfContractsCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetRealizedCostOfContractsCentsOk() (*int64, bool) {
	if o == nil || o.RealizedCostOfContractsCents == nil {
		return nil, false
	}
	return o.RealizedCostOfContractsCents, true
}

// HasRealizedCostOfContractsCents returns a boolean if a field has been set.
func (o *MarketTransaction) HasRealizedCostOfContractsCents() bool {
	if o != nil && o.RealizedCostOfContractsCents != nil {
		return true
	}

	return false
}

// SetRealizedCostOfContractsCents gets a reference to the given int64 and assigns it to the RealizedCostOfContractsCents field.
func (o *MarketTransaction) SetRealizedCostOfContractsCents(v int64) {
	o.RealizedCostOfContractsCents = &v
}

// GetRealizedFifoProfitCents returns the RealizedFifoProfitCents field value if set, zero value otherwise.
func (o *MarketTransaction) GetRealizedFifoProfitCents() int64 {
	if o == nil || o.RealizedFifoProfitCents == nil {
		var ret int64
		return ret
	}
	return *o.RealizedFifoProfitCents
}

// GetRealizedFifoProfitCentsOk returns a tuple with the RealizedFifoProfitCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetRealizedFifoProfitCentsOk() (*int64, bool) {
	if o == nil || o.RealizedFifoProfitCents == nil {
		return nil, false
	}
	return o.RealizedFifoProfitCents, true
}

// HasRealizedFifoProfitCents returns a boolean if a field has been set.
func (o *MarketTransaction) HasRealizedFifoProfitCents() bool {
	if o != nil && o.RealizedFifoProfitCents != nil {
		return true
	}

	return false
}

// SetRealizedFifoProfitCents gets a reference to the given int64 and assigns it to the RealizedFifoProfitCents field.
func (o *MarketTransaction) SetRealizedFifoProfitCents(v int64) {
	o.RealizedFifoProfitCents = &v
}

// GetRealizedRevenueCents returns the RealizedRevenueCents field value if set, zero value otherwise.
func (o *MarketTransaction) GetRealizedRevenueCents() int64 {
	if o == nil || o.RealizedRevenueCents == nil {
		var ret int64
		return ret
	}
	return *o.RealizedRevenueCents
}

// GetRealizedRevenueCentsOk returns a tuple with the RealizedRevenueCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetRealizedRevenueCentsOk() (*int64, bool) {
	if o == nil || o.RealizedRevenueCents == nil {
		return nil, false
	}
	return o.RealizedRevenueCents, true
}

// HasRealizedRevenueCents returns a boolean if a field has been set.
func (o *MarketTransaction) HasRealizedRevenueCents() bool {
	if o != nil && o.RealizedRevenueCents != nil {
		return true
	}

	return false
}

// SetRealizedRevenueCents gets a reference to the given int64 and assigns it to the RealizedRevenueCents field.
func (o *MarketTransaction) SetRealizedRevenueCents(v int64) {
	o.RealizedRevenueCents = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *MarketTransaction) GetTime() time.Time {
	if o == nil || o.Time == nil {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetTimeOk() (*time.Time, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *MarketTransaction) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *MarketTransaction) SetTime(v time.Time) {
	o.Time = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MarketTransaction) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketTransaction) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MarketTransaction) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MarketTransaction) SetType(v string) {
	o.Type = &v
}

func (o MarketTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AveragePriceCents != nil {
		toSerialize["average_price_cents"] = o.AveragePriceCents
	}
	if o.FeeCents != nil {
		toSerialize["fee_cents"] = o.FeeCents
	}
	if o.IsSideYes != nil {
		toSerialize["is_side_yes"] = o.IsSideYes
	}
	if o.MarketId != nil {
		toSerialize["market_id"] = o.MarketId
	}
	if o.MarketTicker != nil {
		toSerialize["market_ticker"] = o.MarketTicker
	}
	if o.MarketTitle != nil {
		toSerialize["market_title"] = o.MarketTitle
	}
	if o.NumContracts != nil {
		toSerialize["num_contracts"] = o.NumContracts
	}
	if o.RealizedCostOfContractsCents != nil {
		toSerialize["realized_cost_of_contracts_cents"] = o.RealizedCostOfContractsCents
	}
	if o.RealizedFifoProfitCents != nil {
		toSerialize["realized_fifo_profit_cents"] = o.RealizedFifoProfitCents
	}
	if o.RealizedRevenueCents != nil {
		toSerialize["realized_revenue_cents"] = o.RealizedRevenueCents
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableMarketTransaction struct {
	value *MarketTransaction
	isSet bool
}

func (v NullableMarketTransaction) Get() *MarketTransaction {
	return v.value
}

func (v *NullableMarketTransaction) Set(val *MarketTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketTransaction(val *MarketTransaction) *NullableMarketTransaction {
	return &NullableMarketTransaction{value: val, isSet: true}
}

func (v NullableMarketTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


