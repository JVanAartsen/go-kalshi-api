/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// AccountHistoryEntry struct for AccountHistoryEntry
type AccountHistoryEntry struct {
	Data *AccountHistoryEntryData `json:"data,omitempty"`
	// Type of entry, one of Deposit, Withdrawal, Order, or Settlement
	Type string `json:"type"`
}

// NewAccountHistoryEntry instantiates a new AccountHistoryEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountHistoryEntry(type_ string) *AccountHistoryEntry {
	this := AccountHistoryEntry{}
	this.Type = type_
	return &this
}

// NewAccountHistoryEntryWithDefaults instantiates a new AccountHistoryEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountHistoryEntryWithDefaults() *AccountHistoryEntry {
	this := AccountHistoryEntry{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AccountHistoryEntry) GetData() AccountHistoryEntryData {
	if o == nil || o.Data == nil {
		var ret AccountHistoryEntryData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHistoryEntry) GetDataOk() (*AccountHistoryEntryData, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AccountHistoryEntry) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given AccountHistoryEntryData and assigns it to the Data field.
func (o *AccountHistoryEntry) SetData(v AccountHistoryEntryData) {
	o.Data = &v
}

// GetType returns the Type field value
func (o *AccountHistoryEntry) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AccountHistoryEntry) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AccountHistoryEntry) SetType(v string) {
	o.Type = v
}

func (o AccountHistoryEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableAccountHistoryEntry struct {
	value *AccountHistoryEntry
	isSet bool
}

func (v NullableAccountHistoryEntry) Get() *AccountHistoryEntry {
	return v.value
}

func (v *NullableAccountHistoryEntry) Set(val *AccountHistoryEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountHistoryEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountHistoryEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountHistoryEntry(val *AccountHistoryEntry) *NullableAccountHistoryEntry {
	return &NullableAccountHistoryEntry{value: val, isSet: true}
}

func (v NullableAccountHistoryEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountHistoryEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


