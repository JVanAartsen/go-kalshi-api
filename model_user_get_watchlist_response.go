/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// UserGetWatchlistResponse struct for UserGetWatchlistResponse
type UserGetWatchlistResponse struct {
	Watchlist Watchlist `json:"watchlist"`
}

// NewUserGetWatchlistResponse instantiates a new UserGetWatchlistResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserGetWatchlistResponse(watchlist Watchlist) *UserGetWatchlistResponse {
	this := UserGetWatchlistResponse{}
	this.Watchlist = watchlist
	return &this
}

// NewUserGetWatchlistResponseWithDefaults instantiates a new UserGetWatchlistResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserGetWatchlistResponseWithDefaults() *UserGetWatchlistResponse {
	this := UserGetWatchlistResponse{}
	return &this
}

// GetWatchlist returns the Watchlist field value
func (o *UserGetWatchlistResponse) GetWatchlist() Watchlist {
	if o == nil {
		var ret Watchlist
		return ret
	}

	return o.Watchlist
}

// GetWatchlistOk returns a tuple with the Watchlist field value
// and a boolean to check if the value has been set.
func (o *UserGetWatchlistResponse) GetWatchlistOk() (*Watchlist, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Watchlist, true
}

// SetWatchlist sets field value
func (o *UserGetWatchlistResponse) SetWatchlist(v Watchlist) {
	o.Watchlist = v
}

func (o UserGetWatchlistResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["watchlist"] = o.Watchlist
	}
	return json.Marshal(toSerialize)
}

type NullableUserGetWatchlistResponse struct {
	value *UserGetWatchlistResponse
	isSet bool
}

func (v NullableUserGetWatchlistResponse) Get() *UserGetWatchlistResponse {
	return v.value
}

func (v *NullableUserGetWatchlistResponse) Set(val *UserGetWatchlistResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserGetWatchlistResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserGetWatchlistResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserGetWatchlistResponse(val *UserGetWatchlistResponse) *NullableUserGetWatchlistResponse {
	return &NullableUserGetWatchlistResponse{value: val, isSet: true}
}

func (v NullableUserGetWatchlistResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserGetWatchlistResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


