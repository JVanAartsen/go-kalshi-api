/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// GetRangedMarketByTickerResponse struct for GetRangedMarketByTickerResponse
type GetRangedMarketByTickerResponse struct {
	RangedMarkets RangedMarket `json:"ranged_markets"`
}

// NewGetRangedMarketByTickerResponse instantiates a new GetRangedMarketByTickerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRangedMarketByTickerResponse(rangedMarkets RangedMarket) *GetRangedMarketByTickerResponse {
	this := GetRangedMarketByTickerResponse{}
	this.RangedMarkets = rangedMarkets
	return &this
}

// NewGetRangedMarketByTickerResponseWithDefaults instantiates a new GetRangedMarketByTickerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRangedMarketByTickerResponseWithDefaults() *GetRangedMarketByTickerResponse {
	this := GetRangedMarketByTickerResponse{}
	return &this
}

// GetRangedMarkets returns the RangedMarkets field value
func (o *GetRangedMarketByTickerResponse) GetRangedMarkets() RangedMarket {
	if o == nil {
		var ret RangedMarket
		return ret
	}

	return o.RangedMarkets
}

// GetRangedMarketsOk returns a tuple with the RangedMarkets field value
// and a boolean to check if the value has been set.
func (o *GetRangedMarketByTickerResponse) GetRangedMarketsOk() (*RangedMarket, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RangedMarkets, true
}

// SetRangedMarkets sets field value
func (o *GetRangedMarketByTickerResponse) SetRangedMarkets(v RangedMarket) {
	o.RangedMarkets = v
}

func (o GetRangedMarketByTickerResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ranged_markets"] = o.RangedMarkets
	}
	return json.Marshal(toSerialize)
}

type NullableGetRangedMarketByTickerResponse struct {
	value *GetRangedMarketByTickerResponse
	isSet bool
}

func (v NullableGetRangedMarketByTickerResponse) Get() *GetRangedMarketByTickerResponse {
	return v.value
}

func (v *NullableGetRangedMarketByTickerResponse) Set(val *GetRangedMarketByTickerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRangedMarketByTickerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRangedMarketByTickerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRangedMarketByTickerResponse(val *GetRangedMarketByTickerResponse) *NullableGetRangedMarketByTickerResponse {
	return &NullableGetRangedMarketByTickerResponse{value: val, isSet: true}
}

func (v NullableGetRangedMarketByTickerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRangedMarketByTickerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


