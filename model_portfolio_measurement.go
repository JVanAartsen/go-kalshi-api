/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// PortfolioMeasurement Portfolio measurement is simply a snapshot of the portfolio of a user on a timestamp.
type PortfolioMeasurement struct {
	A int64 `json:"a"`
	// Amount of the underlying balance change, if applicable, in cents
	BalanceChanges []int64 `json:"balance_changes,omitempty"`
	CumulativeDeposits int64 `json:"cumulative_deposits"`
	// Count of settlements member has had from account creation to timestamp (inclusive)
	CumulativeNumberSettlements int64 `json:"cumulative_number_settlements"`
	CumulativeWithdrawals int64 `json:"cumulative_withdrawals"`
	// Reasons for the portfolio value change, if applicable
	Reasons []string `json:"reasons,omitempty"`
	// Timestamp of the read in UNIX timestamp. (https://www.unixtimestamp.com/)
	Ts int64 `json:"ts"`
	V int64 `json:"v"`
}

// NewPortfolioMeasurement instantiates a new PortfolioMeasurement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortfolioMeasurement(a int64, cumulativeDeposits int64, cumulativeNumberSettlements int64, cumulativeWithdrawals int64, ts int64, v int64) *PortfolioMeasurement {
	this := PortfolioMeasurement{}
	this.A = a
	this.CumulativeDeposits = cumulativeDeposits
	this.CumulativeNumberSettlements = cumulativeNumberSettlements
	this.CumulativeWithdrawals = cumulativeWithdrawals
	this.Ts = ts
	this.V = v
	return &this
}

// NewPortfolioMeasurementWithDefaults instantiates a new PortfolioMeasurement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortfolioMeasurementWithDefaults() *PortfolioMeasurement {
	this := PortfolioMeasurement{}
	return &this
}

// GetA returns the A field value
func (o *PortfolioMeasurement) GetA() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.A
}

// GetAOk returns a tuple with the A field value
// and a boolean to check if the value has been set.
func (o *PortfolioMeasurement) GetAOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.A, true
}

// SetA sets field value
func (o *PortfolioMeasurement) SetA(v int64) {
	o.A = v
}

// GetBalanceChanges returns the BalanceChanges field value if set, zero value otherwise.
func (o *PortfolioMeasurement) GetBalanceChanges() []int64 {
	if o == nil || o.BalanceChanges == nil {
		var ret []int64
		return ret
	}
	return o.BalanceChanges
}

// GetBalanceChangesOk returns a tuple with the BalanceChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioMeasurement) GetBalanceChangesOk() ([]int64, bool) {
	if o == nil || o.BalanceChanges == nil {
		return nil, false
	}
	return o.BalanceChanges, true
}

// HasBalanceChanges returns a boolean if a field has been set.
func (o *PortfolioMeasurement) HasBalanceChanges() bool {
	if o != nil && o.BalanceChanges != nil {
		return true
	}

	return false
}

// SetBalanceChanges gets a reference to the given []int64 and assigns it to the BalanceChanges field.
func (o *PortfolioMeasurement) SetBalanceChanges(v []int64) {
	o.BalanceChanges = v
}

// GetCumulativeDeposits returns the CumulativeDeposits field value
func (o *PortfolioMeasurement) GetCumulativeDeposits() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CumulativeDeposits
}

// GetCumulativeDepositsOk returns a tuple with the CumulativeDeposits field value
// and a boolean to check if the value has been set.
func (o *PortfolioMeasurement) GetCumulativeDepositsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CumulativeDeposits, true
}

// SetCumulativeDeposits sets field value
func (o *PortfolioMeasurement) SetCumulativeDeposits(v int64) {
	o.CumulativeDeposits = v
}

// GetCumulativeNumberSettlements returns the CumulativeNumberSettlements field value
func (o *PortfolioMeasurement) GetCumulativeNumberSettlements() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CumulativeNumberSettlements
}

// GetCumulativeNumberSettlementsOk returns a tuple with the CumulativeNumberSettlements field value
// and a boolean to check if the value has been set.
func (o *PortfolioMeasurement) GetCumulativeNumberSettlementsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CumulativeNumberSettlements, true
}

// SetCumulativeNumberSettlements sets field value
func (o *PortfolioMeasurement) SetCumulativeNumberSettlements(v int64) {
	o.CumulativeNumberSettlements = v
}

// GetCumulativeWithdrawals returns the CumulativeWithdrawals field value
func (o *PortfolioMeasurement) GetCumulativeWithdrawals() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CumulativeWithdrawals
}

// GetCumulativeWithdrawalsOk returns a tuple with the CumulativeWithdrawals field value
// and a boolean to check if the value has been set.
func (o *PortfolioMeasurement) GetCumulativeWithdrawalsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CumulativeWithdrawals, true
}

// SetCumulativeWithdrawals sets field value
func (o *PortfolioMeasurement) SetCumulativeWithdrawals(v int64) {
	o.CumulativeWithdrawals = v
}

// GetReasons returns the Reasons field value if set, zero value otherwise.
func (o *PortfolioMeasurement) GetReasons() []string {
	if o == nil || o.Reasons == nil {
		var ret []string
		return ret
	}
	return o.Reasons
}

// GetReasonsOk returns a tuple with the Reasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioMeasurement) GetReasonsOk() ([]string, bool) {
	if o == nil || o.Reasons == nil {
		return nil, false
	}
	return o.Reasons, true
}

// HasReasons returns a boolean if a field has been set.
func (o *PortfolioMeasurement) HasReasons() bool {
	if o != nil && o.Reasons != nil {
		return true
	}

	return false
}

// SetReasons gets a reference to the given []string and assigns it to the Reasons field.
func (o *PortfolioMeasurement) SetReasons(v []string) {
	o.Reasons = v
}

// GetTs returns the Ts field value
func (o *PortfolioMeasurement) GetTs() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Ts
}

// GetTsOk returns a tuple with the Ts field value
// and a boolean to check if the value has been set.
func (o *PortfolioMeasurement) GetTsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ts, true
}

// SetTs sets field value
func (o *PortfolioMeasurement) SetTs(v int64) {
	o.Ts = v
}

// GetV returns the V field value
func (o *PortfolioMeasurement) GetV() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.V
}

// GetVOk returns a tuple with the V field value
// and a boolean to check if the value has been set.
func (o *PortfolioMeasurement) GetVOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.V, true
}

// SetV sets field value
func (o *PortfolioMeasurement) SetV(v int64) {
	o.V = v
}

func (o PortfolioMeasurement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["a"] = o.A
	}
	if o.BalanceChanges != nil {
		toSerialize["balance_changes"] = o.BalanceChanges
	}
	if true {
		toSerialize["cumulative_deposits"] = o.CumulativeDeposits
	}
	if true {
		toSerialize["cumulative_number_settlements"] = o.CumulativeNumberSettlements
	}
	if true {
		toSerialize["cumulative_withdrawals"] = o.CumulativeWithdrawals
	}
	if o.Reasons != nil {
		toSerialize["reasons"] = o.Reasons
	}
	if true {
		toSerialize["ts"] = o.Ts
	}
	if true {
		toSerialize["v"] = o.V
	}
	return json.Marshal(toSerialize)
}

type NullablePortfolioMeasurement struct {
	value *PortfolioMeasurement
	isSet bool
}

func (v NullablePortfolioMeasurement) Get() *PortfolioMeasurement {
	return v.value
}

func (v *NullablePortfolioMeasurement) Set(val *PortfolioMeasurement) {
	v.value = val
	v.isSet = true
}

func (v NullablePortfolioMeasurement) IsSet() bool {
	return v.isSet
}

func (v *NullablePortfolioMeasurement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortfolioMeasurement(val *PortfolioMeasurement) *NullablePortfolioMeasurement {
	return &NullablePortfolioMeasurement{value: val, isSet: true}
}

func (v NullablePortfolioMeasurement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortfolioMeasurement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


