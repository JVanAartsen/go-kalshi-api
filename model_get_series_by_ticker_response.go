/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// GetSeriesByTickerResponse struct for GetSeriesByTickerResponse
type GetSeriesByTickerResponse struct {
	Series *Series `json:"series,omitempty"`
}

// NewGetSeriesByTickerResponse instantiates a new GetSeriesByTickerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSeriesByTickerResponse() *GetSeriesByTickerResponse {
	this := GetSeriesByTickerResponse{}
	return &this
}

// NewGetSeriesByTickerResponseWithDefaults instantiates a new GetSeriesByTickerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSeriesByTickerResponseWithDefaults() *GetSeriesByTickerResponse {
	this := GetSeriesByTickerResponse{}
	return &this
}

// GetSeries returns the Series field value if set, zero value otherwise.
func (o *GetSeriesByTickerResponse) GetSeries() Series {
	if o == nil || o.Series == nil {
		var ret Series
		return ret
	}
	return *o.Series
}

// GetSeriesOk returns a tuple with the Series field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSeriesByTickerResponse) GetSeriesOk() (*Series, bool) {
	if o == nil || o.Series == nil {
		return nil, false
	}
	return o.Series, true
}

// HasSeries returns a boolean if a field has been set.
func (o *GetSeriesByTickerResponse) HasSeries() bool {
	if o != nil && o.Series != nil {
		return true
	}

	return false
}

// SetSeries gets a reference to the given Series and assigns it to the Series field.
func (o *GetSeriesByTickerResponse) SetSeries(v Series) {
	o.Series = &v
}

func (o GetSeriesByTickerResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Series != nil {
		toSerialize["series"] = o.Series
	}
	return json.Marshal(toSerialize)
}

type NullableGetSeriesByTickerResponse struct {
	value *GetSeriesByTickerResponse
	isSet bool
}

func (v NullableGetSeriesByTickerResponse) Get() *GetSeriesByTickerResponse {
	return v.value
}

func (v *NullableGetSeriesByTickerResponse) Set(val *GetSeriesByTickerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSeriesByTickerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSeriesByTickerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSeriesByTickerResponse(val *GetSeriesByTickerResponse) *NullableGetSeriesByTickerResponse {
	return &NullableGetSeriesByTickerResponse{value: val, isSet: true}
}

func (v NullableGetSeriesByTickerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSeriesByTickerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


