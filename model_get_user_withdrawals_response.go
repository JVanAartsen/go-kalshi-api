/*
Kalshi API.

This documentation describes Kalshi's REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kalshiAPI

import (
	"encoding/json"
)

// GetUserWithdrawalsResponse struct for GetUserWithdrawalsResponse
type GetUserWithdrawalsResponse struct {
	// List of previous withdrawals for the user
	Withdrawals []Withdrawal `json:"withdrawals"`
}

// NewGetUserWithdrawalsResponse instantiates a new GetUserWithdrawalsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserWithdrawalsResponse(withdrawals []Withdrawal) *GetUserWithdrawalsResponse {
	this := GetUserWithdrawalsResponse{}
	this.Withdrawals = withdrawals
	return &this
}

// NewGetUserWithdrawalsResponseWithDefaults instantiates a new GetUserWithdrawalsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserWithdrawalsResponseWithDefaults() *GetUserWithdrawalsResponse {
	this := GetUserWithdrawalsResponse{}
	return &this
}

// GetWithdrawals returns the Withdrawals field value
func (o *GetUserWithdrawalsResponse) GetWithdrawals() []Withdrawal {
	if o == nil {
		var ret []Withdrawal
		return ret
	}

	return o.Withdrawals
}

// GetWithdrawalsOk returns a tuple with the Withdrawals field value
// and a boolean to check if the value has been set.
func (o *GetUserWithdrawalsResponse) GetWithdrawalsOk() ([]Withdrawal, bool) {
	if o == nil {
		return nil, false
	}
	return o.Withdrawals, true
}

// SetWithdrawals sets field value
func (o *GetUserWithdrawalsResponse) SetWithdrawals(v []Withdrawal) {
	o.Withdrawals = v
}

func (o GetUserWithdrawalsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["withdrawals"] = o.Withdrawals
	}
	return json.Marshal(toSerialize)
}

type NullableGetUserWithdrawalsResponse struct {
	value *GetUserWithdrawalsResponse
	isSet bool
}

func (v NullableGetUserWithdrawalsResponse) Get() *GetUserWithdrawalsResponse {
	return v.value
}

func (v *NullableGetUserWithdrawalsResponse) Set(val *GetUserWithdrawalsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserWithdrawalsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserWithdrawalsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserWithdrawalsResponse(val *GetUserWithdrawalsResponse) *NullableGetUserWithdrawalsResponse {
	return &NullableGetUserWithdrawalsResponse{value: val, isSet: true}
}

func (v NullableGetUserWithdrawalsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserWithdrawalsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


